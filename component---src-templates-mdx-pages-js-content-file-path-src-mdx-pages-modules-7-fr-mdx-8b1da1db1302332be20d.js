"use strict";(self.webpackChunkmyjscourse=self.webpackChunkmyjscourse||[]).push([[585],{640:function(e,n,t){t.r(n),t.d(n,{default:function(){return T}});var r=t(3905),a=t(7294);function l(e){const n=Object.assign({h1:"h1",p:"p",br:"br",ul:"ul",li:"li",a:"a",h2:"h2",h3:"h3",strong:"strong",h4:"h4",code:"code",pre:"pre",h5:"h5"},(0,r.ah)(),e.components),{ScrollableImage:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ScrollableImage",!0),a.createElement(a.Fragment,null,a.createElement(n.h1,null,"Module 7 : SPA & s√©curisation"),"\n",a.createElement(n.p,null,"Ce module vous offre principalement la s√©curisation de SPA √† l'aide d'authentification & autorisation JWT."),"\n",a.createElement(n.p,null,"Dans un premier temps, nous allons voir comment s√©curiser les acc√®s aux op√©rations d'une API.",a.createElement(n.br),"\n","Puis, nous allons voir comment int√©grer ces API s√©curis√©es au sein d'IHM."),"\n",a.createElement(n.p,null,"En r√©sum√©, on souhaite s√©curiser l'acc√®s\r\naux utilisateurs, de fa√ßon moderne, √† certaines op√©rations sur des ressources."),"\n",a.createElement(n.p,null,"Voici les sujets trait√©s :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"a) ",a.createElement(n.a,{href:"#a"},"Authentification s√©curis√©e et autorisation d'acc√®s aux op√©rations d'une RESTful API via JWT"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"a.1) ",a.createElement(n.a,{href:"#a1"},"Authentification et autorisation : g√©n√©ralit√©s")),"\n",a.createElement(n.li,null,"a.2) ",a.createElement(n.a,{href:"#a2"},"Token JWT")),"\n",a.createElement(n.li,null,"a.3) ",a.createElement(n.a,{href:"#a3"},"Authentification & autorisation stateless via JWT & Express")),"\n",a.createElement(n.li,null,"a.4) ",a.createElement(n.a,{href:"#a4"},"Client REST")),"\n"),"\n"),"\n",a.createElement(n.li,null,"b) ",a.createElement(n.a,{href:"#b"},"Utilisation de JWT au sein d'une IHM"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"b.1) ",a.createElement(n.a,{href:"#b1"},"Authentifier un utilisateur via une IHM & JWT")),"\n",a.createElement(n.li,null,"b.2) ",a.createElement(n.a,{href:"#b2"},"Autoriser l'appel √† une op√©ration prot√©g√©e")),"\n",a.createElement(n.li,null,"b.3) ",a.createElement(n.a,{href:"#b3"},"Probl√®mes de s√©curit√©")),"\n"),"\n"),"\n",a.createElement(n.li,null,"c) ",a.createElement(n.a,{href:"#c"},"Exercice 7.1 : Authentification & autorisation au sein de myMovies")),"\n",a.createElement(n.li,null,"d) ",a.createElement(n.a,{href:"#d"},"S√©curisation de RESTful API"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"d.1) ",a.createElement(n.a,{href:"#d1"},"Introduction")),"\n",a.createElement(n.li,null,"d.2) ",a.createElement(n.a,{href:"#d2"},"Protection contre les attaques XSS")),"\n",a.createElement(n.li,null,"d.3) ",a.createElement(n.a,{href:"#d3"},"S√©curisation des passwords")),"\n"),"\n"),"\n",a.createElement(n.li,null,"e) ",a.createElement(n.a,{href:"#e"},"Exercice 7.2 : S√©curisation de l'API de myMovies")),"\n",a.createElement(n.li,null,"f) ",a.createElement(n.a,{href:"#f"},"üç¨ Exercice 7.3 : Auto-refresh de myMovies")),"\n",a.createElement(n.li,null,"g) ",a.createElement(n.a,{href:"#g"},"üç¨ Exercice 7.4 : Gestion de la navigation lors de l'auto-refresh de myMovies")),"\n"),"\n",a.createElement(n.h1,null,a.createElement("a",{id:"a"}),"a) Authentification s√©curis√©e et autorisation d'acc√®s aux op√©rations d'une RESTful API via JWT"),"\n",a.createElement(n.h2,null,a.createElement("a",{id:"a1"})," a.1) Authentification et autorisation : g√©n√©ralit√©s"),"\n",a.createElement(n.h3,null,"a.1.1) Authentification, c'est quoi ?"),"\n",a.createElement(n.p,null,"L'authentification, c'est le processus de v√©rifier qui est l'utilisateur d'une application."),"\n",a.createElement(n.p,null,"Pour authentifier un utilisateur, on va g√©n√©ralement passer via un formulaire de connexion, lui demandant un username et un password."),"\n",a.createElement(n.h3,null,"a.1.2) Autorisation, c'est quoi ?"),"\n",a.createElement(n.p,null,"L'autorisation, c'est le processus de v√©rifier ce √† quoi un utilisateur √† acc√®s."),"\n",a.createElement(n.p,null,"Une API va autoriser les acc√®s √† certaines op√©rations en fonction des privil√®ges associ√©s aux utilisateurs. Il y aura des op√©rations qui seront autoris√©es :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,'pour tous les utilisateurs, tant anonymes qu\'authentifi√©s ; imaginez par exemple les op√©rations de lecture de produits sur un site "vitrine". Il ne faut pas devoir cr√©er de compte utilisateur pour pouvoir afficher les produits du site.'),"\n",a.createElement(n.li,null,"pour tous les utilisateurs authentifi√©s, peu importe leurs privil√®ges ; imaginez le fait de pouvoir poster des messages dans un forum ; il faut avoir un compte pour pouvoir le faire, mais il ne faut pas de privil√®ges sp√©cifiques (pas besoin d'√™tre admin)."),"\n",a.createElement(n.li,null,"pour seulement un ou plusieurs utilisateur(s) authentifi√©(s) ayant les privil√®ges requis ; imaginez une op√©ration de lecture de tous les profils des utilisateurs d'une banque ; il faut avoir un compte admin de la banque pour pouvoir le faire. Ca serait catastrophique si n'importe quel utilisateur authentifi√© pourrait acc√©der aux profils de tous les utilisateurs !"),"\n"),"\n",a.createElement(n.h3,null,"a.1.3) Diff√©rents moyens d'authentification"),"\n",a.createElement(n.p,null,"Il existe de nombreux m√©canismes d'authentification."),"\n",a.createElement(n.p,null,"Traditionnellement, ou anciennement, nous avons l'authentification qui est support√©e √† l'aide de cookies. L'utilisateur envoie via un formulaire son username et password, le serveur v√©rifie ceux-ci et cr√©e un id de session et le renvoie √† l'utilisateur via un cookie.",a.createElement(n.br),"\n","Apr√®s l'authentification, √† chaque requ√™te du client sur ce serveur, le cookie est envoy√©, et le serveur, qui a sauvegard√© la session, va retrouver la session sur base de l'id de session pr√©sent dans le cookie et va autoriser ou non l'acc√®s √† l'op√©ration demand√©e par le client.",a.createElement(n.br),"\n","C'est ce qu'on appelle une authentification ",a.createElement(n.strong,null,"stateful"),"."),"\n",a.createElement(n.p,null,"Un m√©canisme d'authentification ",a.createElement(n.strong,null,"stateful")," indique que le serveur est responsable de sauvegarder les donn√©es de session des utilisateurs."),"\n",a.createElement(n.p,null,"On parle de ",a.createElement(n.strong,null,"session")," d'un utilisateur comme √©tant toute la dur√©e o√π le client s'authentifie √† l'application web jusqu'√† ce qu'il quitte cette application, lorsqu'il ferme son browser."),"\n",a.createElement(n.p,null,"De mani√®re plus moderne, nous avons des m√©canismes d'authentification qui sont dits ",a.createElement(n.strong,null,"stateless"),". Dans ce genre de m√©canisme, c'est le client qui doit sauvegarder les donn√©es de session, et donc le browser. L'authentification √† l'aide de ",a.createElement(n.strong,null,"tokens")," devient tr√®s populaires.",a.createElement(n.br),"\n","Il existe diff√©rents moyen de l'impl√©menter. Dans le cadre de ce cours, nous focuserons sur la fa√ßon la plus habituelle, les ",a.createElement(n.strong,null,"JSON Web Tokens"),", ou ",a.createElement(n.strong,null,"JWT"),"."),"\n",a.createElement(n.p,null,"Il existe d'autres m√©canismes tr√®s modernes qui utilisent des tokens, mis en place par des tiers : ",a.createElement(n.strong,null,"OAuth"),", ",a.createElement(n.strong,null,"OpenId"),"... Ces m√©canismes sont offerts par Microsoft, Google, Facebook... Nous ne les verrons pas dans le cadre de cours. N√©anmoins, √† la fin de ce cours, vous devriez √™tre apte √† pouvoir les utiliser, sous r√©serve de bien lire la documentation."),"\n",a.createElement(n.h3,null,"## ",a.createElement("a",{id:"a1.4"}),"  a.1.4) Stateful VS stateless authentication"),"\n",a.createElement(n.p,null,"Quels sont les avantages & inconv√©nients d'une authentification stateful ? et d'une authentification stateless ?"),"\n",a.createElement(n.h4,null,"Authentification stateful"),"\n",a.createElement(n.p,null,a.createElement(n.strong,null,"Inconv√©nients")," :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"La session utilise de la m√©moire pour chaque utilisateur."),"\n",a.createElement(n.li,null,"Le backend n'a aucune mani√®re de d√©terminer si le frontend s'est d√©connect√© du site ou non : gestion de l'expiration d'une session plus compliqu√©e, notamment si le frontend revient apr√®s une longue dur√©e."),"\n",a.createElement(n.li,null,"Toutes les sessions sont perdues en cas de red√©marrage du serveur (r√©authentification)."),"\n",a.createElement(n.li,null,"Load balancing compliqu√© ; en effet, si un client fait une requ√™te, pendant toute la dur√©e de la session, s'il y a plusieurs serveurs qui peuvent y r√©pondre, comment est g√©r√©e la session de ce client ? Par quel(s) serveur(s) ? Comment se partagent-ils les donn√©es de session ? Ou est-ce que √ßa doit toujours √™tre le m√™me serveur qui r√©pond au m√™me client ?"),"\n"),"\n",a.createElement(n.p,null,a.createElement(n.strong,null,"Avantages")," :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"Peu gourmand en ressource point de vue processing et tr√®s rapide ; en effet, une fois qu'une session est en place, la v√©rification que le cookie contient le bon id de session se fait vite."),"\n"),"\n",a.createElement(n.h4,null,"Authentification stateless"),"\n",a.createElement(n.p,null,a.createElement(n.strong,null,"Inconv√©nients")," :\r\nComme le serveur ne retient plus l'utilisateur en m√©moire, il doit utiliser de la cryptographie pour cr√©er et valider les token ; c'est donc consommateur en ressource point de vue processing."),"\n",a.createElement(n.p,null,a.createElement(n.strong,null,"Avantages")," :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"Pas de session √† g√©rer, m√™me apr√®s red√©marrage du serveur, il n'y a pas de r√©authentification n√©cessaire."),"\n",a.createElement(n.li,null,"Evolutif, utilisation facile de plusieurs serveurs si du load balancing est n√©cessaire ; en effet, comme chaque requ√™te du client contient toutes les infos pour se faire autoriser, peu importe quel est le serveur qui va prendre en charge la requ√™te."),"\n"),"\n",a.createElement(n.p,null,'Notons que la "scalability" horizontale, la possibilit√© de permettre √† une application d\'augmenter sa capacit√© de r√©pondre √† une charge grandissante simplement en ajoutant des machines, est quelque chose de tr√®s important √† notre √©poque.',a.createElement(n.br),"\n","Certaines applications web ont des centaines de millions d'utilisateurs ; pour celles-ci, on ne peut pas compter sur la \"scalability\" verticale, c'est-√†-dire le fait d'augmenter les ressources d'une machine, en augmentant sa RAM, son processeur, son espace de stockage..."),"\n",a.createElement(n.p,null,"D√®s lors, dans le cadre de ce cours, nous allons pr√©f√©rer les applications web qui peuvent tourner sur des serveurs ",a.createElement(n.strong,null,"stateless"),"."),"\n",a.createElement(n.h2,null,a.createElement("a",{id:"a2"}),"a.2) Token JWT"),"\n",a.createElement(n.p,null,"Les JSON Web token, ou JWT, appartiennent √† un standard internet permettant l'√©change s√©curis√© de tokens entre plusieurs parties."),"\n",a.createElement(n.p,null,"Un JWT contient trois parties encod√©es en base64 et ressemble √† qqch du style :",a.createElement(n.br),"\n",a.createElement(n.strong,null,a.createElement(n.code,null,"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.")),a.createElement(n.br),"\n",a.createElement(n.strong,null,a.createElement(n.code,null,"eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.")),a.createElement(n.br),"\n",a.createElement(n.strong,null,a.createElement(n.code,null,"SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"))),"\n",a.createElement(n.p,null,"Voici les 3 parties d'un JWT et leurs caract√©ristiques :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"l'",a.createElement(n.strong,null,"ent√™te")," (ou header) : un objet JSON identifiant le type de token (JWT) et l'algorithme utilis√© pour g√©n√©rer la signature du token (HS256), un algorithme de hachage."),"\n",a.createElement(n.li,null,"le ",a.createElement(n.strong,null,"payload")," : un objet JSON permettant de sp√©cifier le ",a.createElement(n.strong,null,"claim")," ; ce sont des param√®tres optionnels pr√©cisant les affirmations associ√©es au token, comme la date d'expiration du token, son cr√©ateur, le fait que l'utilisateur est admin... g√©n√©ralement, on y met pas trop d'info, principalement l'identifiant de l'utilisateur ; si l'API a besoin de plus d'info concernant l'utilisateur, elle ira g√©n√©ralement les chercher dans son support de donn√©es."),"\n",a.createElement(n.li,null,"la ",a.createElement(n.strong,null,"signature")," : c'est une signature num√©rique construite √† partir d'un secret priv√© ou d'une cl√© publique/priv√©e, via l'algorithme pr√©cis√© dans la signature."),"\n"),"\n",a.createElement(n.p,null,"üí≠ C'est bien joli tout √ßa, mais comment √ßa permet de s√©curiser la session d'un utilisateur ?",a.createElement(n.br),"\n","G√©n√©ralement, l'API, et elle uniquement, connait le secret priv√©. Elle va donc cr√©er le token d'un utilisateur authentifi√©, en y ajoutant le claim (ou les affirmations) qu'elle juge utile.",a.createElement(n.br),"\n","Lorsque le client re√ßoit son token, il va le sauvegarder dans son browser.",a.createElement(n.br),"\n","Pour chaque requ√™te o√π il devra se faire autoriser par l'API, le client enverra son token au sein d'un header de la requ√™te.",a.createElement(n.br),"\n","L'API utilisera le secret priv√©, connu d'elle-m√™me uniquement, pour v√©rifier la signature du token. Si tout est OK, c'est que l'utilisateur est bien authentifi√© et que son claim est OK."),"\n",a.createElement(n.p,null,"Imaginez maintenant qu'un hackeur tente de modifier le token, pour modifier le claim, notamment en changeant l'id de l'utilisateur pr√©sent dans le payload du token.\r\nEt bien la signature ne correspondra plus √† ce token l√† ! L'API le d√©tectera.",a.createElement(n.br),"\n","Pour que le hackeur r√©ussisse son acte malicieux, il est oblig√© de conna√Ætre le secret priv√© qui ne doit √™tre connu que de l'API.",a.createElement(n.br),"\n","Les hackeurs devront conna√Ætre le secret priv√© afin de pouvoir g√©n√©rer un nouveau token qui sera valid√© par l'API. Pas √©vident..."),"\n",a.createElement(n.p,null,"Ainsi, on peut imaginer un token comme une enveloppe s√©curis√© par un cadenas tr√®s sp√©cial : ce cadenas, qui est mis sur l'enveloppe contenant, par exemple, l'identifiant d'un utilisateur, est ferm√© par la cl√© üîë que seulement conna√Æt l'API.\r\nSi quelqu'un touche √† l'enveloppe, le cadenas ne s'ouvrira plus avec la üîë de l'API : la tentative de hackage sera d√©tect√©e !\r\nSi quelqu'un tente de cr√©er une enveloppe s√©curis√©, il le fera avec une autre cl√©, ",a.createElement(n.strong,null,"üóù")," par exemple, car il ne conna√Æt pas üîë. L'API, tentant d'ouvrir l'enveloppe s√©curis√©e √† l'aide de üîë, elle ne s'ouvrira pas : la tentative de hacking sera d√©tect√©e !"),"\n",a.createElement(n.p,null,"üí≠ Est-ce que cette m√©taphore d'enveloppe s√©curis√©e vous parle ?\r\nAttention que dans la r√©alit√©, le payload classique d'un token sera d√©codable, que l'on connaisse ou pas le secret priv√©. Il est encod√© en base64 ! Ne mettez donc jamais de secrets dans le payload d'un token !",a.createElement(n.br),"\n","Si vraiment un jour vous deviez mettre un secret dans un payload, bien que d√©conseill√©, vous pourriez toujours le faire en cryptant le payload."),"\n",a.createElement(n.p,null,"üëç Le m√©canisme de token assure que l'on aie une tr√®s haute probabilit√© de d√©tecter les alt√©rations faites sur les tokens, les tentatives de forgeage, gr√¢ce √† la signature de ceux-ci.",a.createElement(n.br),"\n","‚ö° Par contre, si nous laissons tra√Æner des informations dans le payload d'un token, comme un password d'un utilisateur et son username, alors l√†, c'est juste un beau cadeau pour les hackeurs, il n'auront qu'√† utiliser le formulaire de connexion et prendre possession de notre identit√© üò®."),"\n",a.createElement(n.p,null,"Il existe un site fort int√©ressant qui montre la structure d'un token et qui permet de les d√©coder : ",a.createElement(n.a,{href:"https://jwt.io/"},"jwt.io")," ",a.createElement(n.a,{href:"/js2/references/#r63"},"[R.63]"),". Nous l'utiliserons plus tard pour d√©coder les tokens g√©n√©r√©s par nos RESTful API."),"\n",a.createElement(n.h2,null,a.createElement("a",{id:"a3"}),"a.3) Authentification & autorisation stateless via JWT & Express"),"\n",a.createElement(n.h3,null,"a.2.1) Introduction"),"\n",a.createElement(n.p,null,"Via un exemple concret associ√© √† notre RESTful API qui g√®re les ressources de type \"pizzas\", nous allons mettre en place un processus d'authentification et d'autorisation JWT."),"\n",a.createElement(n.p,null,"La librairie que nous allons utiliser dans le cadre de ce cours pour g√©rer des tokens JWT est ",a.createElement(n.a,{href:"https://www.npmjs.com/package/jsonwebtoken"},"jsonwebtoken"),"."),"\n",a.createElement(n.p,null,"Nous allons maintenant continuer le d√©veloppement de l'API ",a.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/fat-model"},"fat-model")," pour ajouter des op√©rations permettant l'authentification et l'autorisation d'utilisateurs."),"\n",a.createElement(n.p,null,"Au sein de votre repo ",a.createElement(n.strong,null,"web2"),", veuillez cr√©er le projet nomm√© ",a.createElement(n.strong,null,"/web2/tutorials/pizzeria/api/auths")," sur base d'un copi√© coll√© de ",a.createElement(n.strong,null,"/web2/tutorials/pizzeria/api/fat-model")," (ou ",a.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/fat-model"},"fat-model"),")."),"\n",a.createElement(n.p,null,"Pour la suite du tutoriel, nous consid√©rons que tous les chemins absolus d√©marrent du r√©pertoire\r\n",a.createElement(n.strong,null,"/web2/tutorials/pizzeria/api/auths"),"."),"\n",a.createElement(n.p,null,"Veuillez installer la librairie ",a.createElement(n.strong,null,"jsonwebtoken")," au sein de votre nouveau projet ",a.createElement(n.strong,null,"auths")," :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-bash"},"npm i jsonwebtoken\n")),"\n",a.createElement(n.h3,null,"a.3.2) M√©canisme d'authentification et cr√©ation du token"),"\n",a.createElement(n.p,null,"Toujours √† l'aide d'Express, nous allons cr√©er un router ",a.createElement(n.strong,null,"auths")," qui mettra √† disposition les op√©rations de ",a.createElement(n.strong,null,"login")," et de ",a.createElement(n.strong,null,"register"),".\r\nVoici le contrat associ√© √† ces nouvelles op√©rations :"),"\n",a.createElement(n.h5,null,'Op√©rations sur les ressources de type "auths"'),"\n",a.createElement(n.p,null,"| URI | M√©thode HTTP | Op√©ration |\r\n|---|---|---|---|\r\n| ",a.createElement(n.strong,null,"auths/login"),' | POST | V√©rifier les credentials d\'une ressource de type "users" et renvoyer le username et un token JWT si les credentials sont OK |\r\n| ',a.createElement(n.strong,null,"auths/register"),' | POST | Cr√©er une ressource de type "users" et renvoyer le username et un token JWT |'),"\n",a.createElement("br"),"\n",a.createElement(n.p,null,"Le mod√®le ",a.createElement(n.strong,null,"users")," s'occupera de cr√©er les utilisateur, de v√©rifier leurs credentials ainsi que de cr√©er des token."),"\n",a.createElement(n.p,null,"Voici le workflow attendu pour une op√©ration de ",a.createElement(n.strong,null,"login")," ou de ",a.createElement(n.strong,null,"register")," :"),"\n",a.createElement(t,{name:"login.png",minWidth:"879px",maxWidth:"879x"}),"\n",a.createElement("figcaption",null,"Appel √† une RESTful API pour s'authentifier et obtenir un JWT"),"\n",a.createElement(n.p,null,"Ce que l'on voit dans l'image ci-dessus :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"si le mod√®le consid√®re que l'utilisateur est authentifiable, que ses credentials sont OK, alors il va utiliser une librairie ",a.createElement(n.strong,null,"jwt")," et la m√©thode ",a.createElement(n.strong,null,"sign")," pour cr√©er un token."),"\n",a.createElement(n.li,null,"le token est envoy√© dans le body de la r√©ponse √† l'utilisateur."),"\n"),"\n",a.createElement(n.p,null,"Ce que l'on ne voit pas dans l'image ci-dessus :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"c'est le job du client de sauvegarder le token. Si l'application cliente est un browser, alors celui-ci pourra √™tre sauvegard√© dans le web storage du browser."),"\n",a.createElement(n.li,null,"l'application cliente peut √™tre faite avec n'importe quelle technologie. Par exemple, nous pourrons utiliser REST Client pour faire une requ√™te √† l'API..."),"\n"),"\n",a.createElement(n.p,null,"Dans notre RESTful API, nous avons d√©cid√© que lorsqu'un client s'enregistre, quand il fait appel √† l'op√©ration ",a.createElement(n.strong,null,"register")," pour cr√©er un compte, l'API consid√®re automatiquement que cet utilisateur est authentifi√©. Tout comme la m√©thode ",a.createElement(n.strong,null,"login"),", la m√©thode ",a.createElement(n.strong,null,"register")," cr√©era et renverra un token JWT √† l'utilisateur."),"\n",a.createElement(n.p,null,"NB : Il est possible d'envisager un workflow diff√©rent : apr√®s le ",a.createElement(n.strong,null,"register"),", l'application demanderait √† l'utilisateur un ",a.createElement(n.strong,null,"login"),", ",a.createElement(n.strong,null,"register")," ne renvoyant jamais de token √† l'utilisateur."),"\n",a.createElement(n.p,null,"Nous allons √† pr√©sent mettre en place le code permettant d'impl√©menter le workflow que l'on vient de d√©couvrir."),"\n",a.createElement(n.p,null,"Veuillez cr√©er le mod√®le ",a.createElement(n.strong,null,"users")," en cr√©ant le fichier ",a.createElement(n.strong,null,"/models/users.js")," et y inclure ce code :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"const jwt = require('jsonwebtoken');\r\nconst path = require('node:path');\r\nconst { parse, serialize } = require('../utils/json');\r\n\r\nconst jwtSecret = 'ilovemypizza!';\r\nconst lifetimeJwt = 24 * 60 * 60 * 1000; // in ms : 24 * 60 * 60 * 1000 = 24h\r\n\r\nconst jsonDbPath = path.join(__dirname, '/../data/users.json');\r\n\r\nconst defaultUsers = [\r\n  {\r\n    id: 1,\r\n    username: 'admin',\r\n    password: 'admin',\r\n  },\r\n];\r\n\r\nfunction login(username, password) {\r\n  const userFound = readOneUserFromUsername(username);\r\n  if (!userFound) return undefined;\r\n  if (userFound.password !== password) return undefined;\r\n\r\n  const token = jwt.sign(\r\n    { username }, // session data added to the payload (payload : part 2 of a JWT)\r\n    jwtSecret, // secret used for the signature (signature part 3 of a JWT)\r\n    { expiresIn: lifetimeJwt }, // lifetime of the JWT (added to the JWT payload)\r\n  );\r\n\r\n  const authenticatedUser = {\r\n    username,\r\n    token,\r\n  };\r\n\r\n  return authenticatedUser;\r\n}\r\n\r\nfunction register(username, password) {\r\n  const userFound = readOneUserFromUsername(username);\r\n  if (userFound) return undefined;\r\n\r\n  createOneUser(username, password);\r\n\r\n  const token = jwt.sign(\r\n    { username }, // session data added to the payload (payload : part 2 of a JWT)\r\n    jwtSecret, // secret used for the signature (signature part 3 of a JWT)\r\n    { expiresIn: lifetimeJwt }, // lifetime of the JWT (added to the JWT payload)\r\n  );\r\n\r\n  const authenticatedUser = {\r\n    username,\r\n    token,\r\n  };\r\n\r\n  return authenticatedUser;\r\n}\r\n\r\nfunction readOneUserFromUsername(username) {\r\n  const users = parse(jsonDbPath, defaultUsers);\r\n  const indexOfUserFound = users.findIndex((user) => user.username === username);\r\n  if (indexOfUserFound < 0) return undefined;\r\n\r\n  return users[indexOfUserFound];\r\n}\r\n\r\nfunction createOneUser(username, password) {\r\n  const users = parse(jsonDbPath, defaultUsers);\r\n\r\n  const createdUser = {\r\n    id: getNextId(),\r\n    username,\r\n    password,\r\n  };\r\n\r\n  users.push(createdUser);\r\n\r\n  serialize(jsonDbPath, users);\r\n\r\n  return createdUser;\r\n}\r\n\r\nfunction getNextId() {\r\n  const users = parse(jsonDbPath, defaultUsers);\r\n  const lastItemIndex = users?.length !== 0 ? users.length - 1 : undefined;\r\n  if (lastItemIndex === undefined) return 1;\r\n  const lastId = users[lastItemIndex]?.id;\r\n  const nextId = lastId + 1;\r\n  return nextId;\r\n}\r\n\r\nmodule.exports = {\r\n  login,\r\n  register,\r\n  readOneUserFromUsername,\r\n};\r\n\n")),"\n",a.createElement(n.p,null,"Dans le code ci-dessus, ",a.createElement(n.strong,null,"jwtSecret")," est le secret priv√© connu uniquement du serveur. C'est la m√™me secret qu'il faudra utiliser pour v√©rifier un token."),"\n",a.createElement(n.p,null,a.createElement(n.strong,null,a.createElement(n.code,null,"jwt.sign()"))," permet de cr√©er le token et ses 3 parties :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"le payload du token, la 2√®me partie du token, est compl√©t√© principalement via le permier argument de ",a.createElement(n.strong,null,"sign()")," ; ici, le token affirme que l'utilisateur poss√©dant le ",a.createElement(n.strong,null,"username")," donn√© est authentifi√©."),"\n",a.createElement(n.li,null,"le payload du token sera aussi modifi√© sur base de la dur√©e d'expiration du token, selon l'argument ",a.createElement(n.strong,null,"expiresIn"),"."),"\n",a.createElement(n.li,null,a.createElement(n.strong,null,"jwtSecret")," est utilis√© pour cr√©er la 3√®me partie du token, sa signature."),"\n"),"\n",a.createElement(n.p,null,"Il faut maintenant que nous cr√©ions le router ",a.createElement(n.strong,null,"auths")," offrant les op√©rations de ",a.createElement(n.strong,null,"login")," et de ",a.createElement(n.strong,null,"register"),", en faisant appel au mod√®le ",a.createElement(n.strong,null,"users"),".",a.createElement(n.br),"\n","Veuillez cr√©er le fichier ",a.createElement(n.strong,null,"/routes/auths.js")," et y inclure le code suivant :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"const express = require('express');\r\nconst { register, login } = require('../models/users');\r\n\r\nconst router = express.Router();\r\n\r\n/* Register a user */\r\nrouter.post('/register', (req, res) => {\r\n  const username = req?.body?.username?.length !== 0 ? req.body.username : undefined;\r\n  const password = req?.body?.password?.length !== 0 ? req.body.password : undefined;\r\n\r\n  if (!username || !password) return res.sendStatus(400); // 400 Bad Request\r\n\r\n  const authenticatedUser = register(username, password);\r\n\r\n  if (!authenticatedUser) return res.sendStatus(409); // 409 Conflict\r\n\r\n  return res.json(authenticatedUser);\r\n});\r\n\r\n/* Login a user */\r\nrouter.post('/login', (req, res) => {\r\n  const username = req?.body?.username?.length !== 0 ? req.body.username : undefined;\r\n  const password = req?.body?.password?.length !== 0 ? req.body.password : undefined;\r\n\r\n  if (!username || !password) return res.sendStatus(400); // 400 Bad Reques\r\n\r\n  const authenticatedUser = login(username, password);\r\n\r\n  if (!authenticatedUser) return res.sendStatus(401); // 401 Unauthorized\r\n\r\n  return res.json(authenticatedUser);\r\n});\r\n\r\nmodule.exports = router;\n")),"\n",a.createElement(n.p,null,"Il n'y a rien de bien sp√©cial √† ce code. On fait simplement appel aux op√©rations du mod√®le ",a.createElement(n.strong,null,"users"),"."),"\n",a.createElement(n.p,null,"Attention, il faut rajouter le nouveau router au sein de ",a.createElement(n.strong,null,"app.js")," pour que notre API puisse offrir les nouvelles op√©rations. Veuillez ajouter ce code dans ",a.createElement(n.strong,null,"/app.js")," :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"const express = require('express');\r\nconst cookieParser = require('cookie-parser');\r\nconst logger = require('morgan');\r\n\r\nconst usersRouter = require('./routes/users');\r\nconst pizzaRouter = require('./routes/pizzas');\r\nconst authsRouter = require('./routes/auths');\r\n\r\nconst app = express();\r\n\r\napp.use(logger('dev'));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\n\r\napp.use('/users', usersRouter);\r\napp.use('/pizzas', pizzaRouter);\r\napp.use('/auths', authsRouter);\r\n\r\nmodule.exports = app;\n")),"\n",a.createElement(n.p,null,"Veuillez d√©marrer votre API ",a.createElement(n.strong,null,"auths"),"."),"\n",a.createElement(n.p,null,"üí≠ Comment tester ces nouvelles op√©rations ?\r\nH√© bien rien de neuf, on va utiliser REST Client."),"\n",a.createElement(n.p,null,"Veuillez cr√©er le fichier ",a.createElement(n.strong,null,"/REST Client/auths.http")," et y ajouter le code suivant :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-http"},'@baseUrl = http://localhost:3000\r\n\r\n### Try to login an unknow user\r\nPOST {{baseUrl}}/auths/login\r\nContent-Type: application/json\r\n\r\n{\r\n    "username":"unknown",\r\n    "password":"admin"\r\n}\r\n\r\n### Login the default admin\r\nPOST {{baseUrl}}/auths/login\r\nContent-Type: application/json\r\n\r\n{\r\n    "username":"admin",\r\n    "password":"admin"\r\n}\r\n\r\n\r\n### Create the manager user\r\nPOST {{baseUrl}}/auths/register\r\nContent-Type: application/json\r\n\r\n{\r\n    "username":"manager",\r\n    "password":"manager"\r\n}\r\n\r\n### Login the manager user\r\nPOST {{baseUrl}}/auths/login\r\nContent-Type: application/json\r\n\r\n{\r\n    "username":"manager",\r\n    "password":"manager"\r\n}\n')),"\n",a.createElement(n.p,null,"Veuillez ex√©cuter les diff√©rentes requ√™tes. Tout devrait fonctionner, vous devriez r√©cup√©rer le username et le token d'un utilisateur authentifi√©."),"\n",a.createElement(n.p,null,"Pour le fun, nous allons d√©coder un token. Veuillez copier le token de ce que renvoie votre API pour la requ√™te de login de l'utilisateur ",a.createElement(n.strong,null,"manager")," (qqch qui doit ressembler √† une string du genre : ",a.createElement(n.code,null,"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Im1hbmFnZXIiLCJpYXQiOjE2NjEyNDg1MjksImV4cCI6MTc0NzY0ODUyOX0.JvYzM0gtmVkqFr9R3f1Bf6ow_QuyHJY-vedJ39N7JKw"),")."),"\n",a.createElement(n.p,null,"Veuillez vous rendre sur le site ",a.createElement(n.a,{href:"https://jwt.io/"},"JWT")," et coller votre token dans le champs ",a.createElement(n.strong,null,"Encoded"),". Dans la colonne ",a.createElement(n.strong,null,"Decoded"),", vous devriez voir l'algorithme utilis√© par la m√©thode ",a.createElement(n.strong,null,"sign"),", ainsi que les donn√©es pr√©sentes dans le payload, dont ",a.createElement(n.code,null,'"username": "manager"')," !",a.createElement(n.br),"\n","Vous comprenez pourquoi on n'ajoute pas des secrets dans un token üòâ."),"\n",a.createElement(n.h4,null,"üç¨ Cacher ses secrets"),"\n",a.createElement(n.p,null,"Dans ce cours-ci, nous ne verrons pas directement comment faire en sorte que le secret,  permettant de signer & v√©rifier les token, ne soit pas pr√©sent sur le web repository de vos API (par exemple ici le mod√®le ",a.createElement(n.strong,null,"users.js")," hardcode ce secret). En effet, pour des raisons de s√©curit√©, si votre secret est visible pour tous les d√©veloppeurs qui acc√®de √† votre repository public, c'est un probl√®me.",a.createElement(n.br),"\n","Si vous souhaitez d√©couvrir comment faire en sorte de rendre invisible des informations sensibles sur un web repository, tout en pouvant b√©n√©ficiant de ces infos dans votre environnement de d√©veloppement, vous pouvez utiliser la librairie ",a.createElement(n.a,{href:"https://www.npmjs.com/package/dotenv"},"dotenv")," qui permet de g√©rer facilement des variables d'environnement. C'est ce genre de librairies qui est utilis√©e par les professionnels pour cacher leurs secrets et certaines variables de configuration, comme le password pour se connecter √† une DB, l'URL vers une API, le port de l'application..."),"\n",a.createElement(n.h3,null,"a.3.3) M√©canisme d'autorisation et v√©rification du token"),"\n",a.createElement(n.p,null,"Suite au ",a.createElement(n.strong,null,"register")," ou au ",a.createElement(n.strong,null,"login")," de l'utilisateur, tel qu'il a √©t√© d√©cid√© pour notre RESTful API, celui-ci a re√ßu un token. C'est le job de l'application cliente de trouver un moyen de sauvegarder ce token."),"\n",a.createElement(n.p,null,"Lorsqu'une application client souhaite cr√©er une pizza, on souhaite autoriser cette op√©ration qu'√† l'administrateur du site g√©rant la pizz√©ria.",a.createElement(n.br),"\n","Nous d√©cidons donc pour l'op√©ration de cr√©ation de pizza que l'utilisateur doit non seulement √™tre authentifi√©, mais qu'en plus, il doit √™tre l'admin."),"\n",a.createElement(n.p,null,"Pour que l'application client qui fait la requ√™te √† l'API puisse s'autoriser, elle doit ajouter un ",a.createElement(n.strong,null,"authorization header")," √† sa requ√™te contenant comme valeur le token re√ßu lors du ",a.createElement(n.strong,null,"login")," ou du ",a.createElement(n.strong,null,"register")," :"),"\n",a.createElement(t,{name:"authorizeOK.png",minWidth:"879px",maxWidth:"879x"}),"\n",a.createElement("figcaption",null,"Appel √† une op√©ration d'une RESTful API n√©cessitant une autorisation JWT : autorisation valide"),"\n",a.createElement(n.p,null,'Le router de "pizzas", avant m√™me de passer la requ√™te √† la route ',a.createElement(n.strong,null,"POST /pizzas"),", va lancer la fonction middleware d'autorisation nomm√©e ",a.createElement(n.strong,null,"authorize"),". La fonction middleware ",a.createElement(n.strong,null,"authorize")," va s'occuper de v√©rifier le token envoy√© par le client dans un header √† l'aide de la m√©thode ",a.createElement(n.strong,null,"verifiy")," de la librairie ",a.createElement(n.strong,null,"jwt"),"."),"\n",a.createElement(n.p,null,"üí≠ Si le token est valide, est-ce que √ßa signifie que l'utilisateur est bien authentifi√© ?\r\nH√© bien non, car imaginez qu'entre le moment o√π l'utilisateur se soit logu√©, il ait √©t√© supprim√© de l'application par un admin... dans ce cas-ci, on ne veut pas l'autoriser √† ajouter une pizza au menu de la pizzeria ! Il n'est p-e m√™me plus un employ√©, il souhaite p-e √©crire du contenu malicieux üò®"),"\n",a.createElement(n.p,null,"Donc si le token est valide, ",a.createElement(n.strong,null,"authorize")," fera appel au mod√®le de ",a.createElement(n.strong,null,"users")," pour v√©rifier que l'utilisateur existe bien dans le support de donn√©es (fichiers JSON, base de donn√©es ou autres) et pour obtenir toutes les infos sur cet utilisateur. Si l'utilisateur existe, alors cela signifie que l'utilisateur est bien authentifi√©. La fonction middleware ",a.createElement(n.strong,null,"authorize")," va passer la main √† une autre fonction middleware pour v√©rifier que l'utilisateur est bien l'admin."),"\n",a.createElement(n.p,null,"üí≠ Comment est-ce que ",a.createElement(n.strong,null,"authorize")," peut faire appel au mod√®le pour v√©rifier que l'utilisateur existe bien ? Est-ce que cela signifie que le token doit contenir tout un tas de donn√©es sur l'utilisateur ?\r\nüëç En r√®gle g√©n√©rale, on va juste mettre un identifiant de l'utilisateur dans ce qu'on appelle le ",a.createElement(n.strong,null,"payload")," du token. C'est ensuite l'API, suite au d√©codage de l'identifiant de l'utilisateur, qui fera appel au support de donn√©es pour retrouver toutes les donn√©es de l'utilisateur."),"\n",a.createElement(n.p,null,"NB : notez que l'on pourrait aussi laisser la fonction ",a.createElement(n.strong,null,"createOnePizza")," s'occuper de v√©rifier que l'utilisateur demandant la cr√©ation de la pizza soit bien l'admin. Ici, comme il s'agit de v√©rifier que le contrat de l'API soit respect√©, c'est-√†-dire que l'utilisateur soit bien authentifi√© & admin, alors on pr√©f√®re r√©aliser cette action en dehors du mod√®le, car dans nos choix architecturaux au niveau de nos RESTful API, nous avons d√©cid√© que ce n'est pas le mod√®le qui s'occupe de pr√©senter les donn√©es aux clients."),"\n",a.createElement(n.p,null,"La fonction middleware ",a.createElement(n.strong,null,"isAdmin")," va v√©rifier que l'utilisateur est bien l'admin. Si c'est OK, elle passera la main √† la fonction middleware qui g√®re la route ",a.createElement(n.strong,null,"POST /pizzas")," au sein du router de pizzas en faisant l'appel √† la fonction ",a.createElement(n.strong,null,"next"),"."),"\n",a.createElement(n.p,null,"Maintenant que le client a les bons privil√®ges, l'op√©ration de cr√©ation de la pizza peut donc √™tre autoris√©e. L'op√©ration de ",a.createElement(n.strong,null,"createOnePizza")," du mod√®le renverra la nouvelle pizza au router qui s'occupera de pr√©senter la nouvelle pizza au client, au format JSON."),"\n",a.createElement(n.p,null,"Par contre, voici le workflow si le token n'est pas valide :"),"\n",a.createElement(t,{name:"authorizeNOK.png",minWidth:"879px",maxWidth:"879x"}),"\n",a.createElement("figcaption",null,"Appel √† une op√©ration d'une RESTful API n√©cessitant une autorisation JWT : autorisation invalide"),"\n",a.createElement(n.p,null,"Dans ce cas l√†, ",a.createElement(n.strong,null,"authorize")," ne passe pas la main √† ",a.createElement(n.strong,null,"isAdmin")," ni m√™me √† la fonction middleware qui g√®re la route ",a.createElement(n.strong,null,"POST /pizzas"),".",a.createElement(n.br),"\n","La fonction middleware ",a.createElement(n.strong,null,"authorize")," renvoie directement un code d'erreur ",a.createElement(n.strong,null,"401 Unauthorized")," au client."),"\n",a.createElement(n.p,null,"Vous pourriez aussi imaginer le workflow o√π le client envoie un token valide, mais l'utilisateur associ√© n'est pas admin. Dans ce cas-ci, ",a.createElement(n.strong,null,"authorize")," ferait appel √† ",a.createElement(n.strong,null,"isAdmin"),", mais ",a.createElement(n.strong,null,"isAdmin")," renverrait directement un code d'erreur ",a.createElement(n.strong,null,"403 Forbidden")," au client.",a.createElement(n.br),"\n","En effet, l'API indiquerait ainsi qu'elle aurait v√©rifi√© que l'utilisateur est bien authentifi√©, mais que celui ne poss√®de pas les privil√®ges suffisant pour acc√©der √† l'op√©ration demand√©e."),"\n",a.createElement(n.p,null,"üò® Wow, le workflow d'autorisation pour la cr√©ation d'une pizza est assez long.  Nous allons maintenant l'impl√©menter. Nous vous inqui√©tez pas, ce qui importe dans le code qui va suivre, ce n'est pas de savoir √©crire tout le code, mais de bien comprendre le m√©canisme. En effet, en r√®gle g√©n√©rale, vous allez utiliser des librairies vous permettant d'autoriser les acc√®s aux op√©rations de vos API. Vous √©crirez donc rarement le m√©canisme d'autorisation, par contre, vous devrez pouvoir utiliser ces m√©canismes."),"\n",a.createElement(n.p,null,"Veuillez cr√©er les nouvelles fonctions middleware ",a.createElement(n.strong,null,"authorize")," et ",a.createElement(n.strong,null,"isAdmin")," au sein d'un nouveau fichier ",a.createElement(n.strong,null,"/utils/auths.js")," :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"const jwt = require('jsonwebtoken');\r\nconst { readOneUserFromUsername } = require('../models/users');\r\n\r\nconst jwtSecret = 'ilovemypizza!';\r\n\r\nconst authorize = (req, res, next) => {\r\n  const token = req.get('authorization');\r\n  if (!token) return res.sendStatus(401);\r\n\r\n  try {\r\n    const decoded = jwt.verify(token, jwtSecret);\r\n    const { username } = decoded;\r\n\r\n    const existingUser = readOneUserFromUsername(username);\r\n\r\n    if (!existingUser) return res.sendStatus(401);\r\n\r\n    req.user = existingUser; // request.user object is available in all other middleware functions\r\n    return next();\r\n  } catch (err) {\r\n    console.error('authorize: ', err);\r\n    return res.sendStatus(401);\r\n  }\r\n};\r\n\r\nconst isAdmin = (req, res, next) => {\r\n  const { username } = req.user;\r\n\r\n  if (username !== 'admin') return res.sendStatus(403);\r\n  return next();\r\n};\r\n\r\nmodule.exports = { authorize, isAdmin };\n")),"\n",a.createElement(n.p,null,"Quelques explications sur le code de la fonction middleware ",a.createElement(n.strong,null,"authorize")," :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"Gr√¢ce √† ",a.createElement(n.code,null,"req.get('authorization')"),", on r√©cup√®re le token qui a √©t√© envoy√© par le client au sein de l'",a.createElement(n.strong,null,"authorization header")," de la requ√™te, c'est une string."),"\n",a.createElement(n.li,null,"La m√©thode ",a.createElement(n.code,null,"jwt.verify(token, jwtSecret)")," v√©rifie tant la signature du token que le fait que le token n'a pas encore expir√©. Elle utilise le secret ",a.createElement(n.strong,null,"jwtSecret")," qui doit √™tre le m√™me que celui pris en compte lors de la cr√©ation du token."),"\n",a.createElement(n.li,null,"Elle charge toutes les donn√©es de l'utilisateur authentifi√© au sein de l'objet ",a.createElement(n.strong,null,"request"),", dans ",a.createElement(n.strong,null,"user"),". Cela est une bonne pratique, cela permet, pour toute la dur√©e du traitement de cette requ√™te, de mettre √† disposition ces donn√©es √† toutes les fonctions middleware.",a.createElement(n.br),"\n","üí≠ Mais pourquoi faire cela ?\r\nImaginez que vous faites un appel √† une base de donn√©es externes √† chaque fois que vous souhaitez obtenir les informations d'un utilisateur... Cela est tr√®s consommateur en temps... Lorsque vous allez utiliser d'autres fonctions middleware comme ",a.createElement(n.strong,null,"isAdmin"),", vous n'avez plus besoin de faire appel √† la base de donn√©es."),"\n",a.createElement(n.li,null,"üí≠ Qu'est-ce que ce code : ",a.createElement(n.code,null,"const { username } = decoded;")," ?",a.createElement(n.br),"\n","C'est ce que l'on appelle du ",a.createElement(n.strong,null,"destructuring assignement"),", c'est une fa√ßon tr√®s concise en JS de cr√©er des variables √† partir de propri√©t√©s d'objets ou des valeurs d'arrays.",a.createElement(n.br),"\n","Imaginez ici que la valeur de ",a.createElement(n.code,null,"decoded")," soit ",a.createElement(n.code,null,"{ username: 'admin', iat: 1661251095, exp: 1747651095 }"),". Ce code ",a.createElement(n.code,null,"const { username } = decoded;")," est l'√©quivalent de ",a.createElement(n.code,null,"const username = decoded.username;"),". OK, mais √ßa n'a pas vraiment de valeur ajout√©e ici, c'est juste un poil plus concis... Cela devient vraiment int√©ressant quand vous souhaitez cr√©er plusieurs variables, comme pour l'exemple donn√©, on pourrait cr√©er 3 variables ainsi ",a.createElement(n.code,null,"const { username, iat, exp } = decoded;")," au lieu d'√©crire :"),"\n"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"const username = decoded.username;\r\nconst iat = decoded.iat;\r\nconst exp = decoded.exp;\n")),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"Pour en savoir plus sur la puissance du ",a.createElement(n.strong,null,"destructuring assignement"),", vous pouvez consulter la ",a.createElement(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"},"documentation de MDN")," ",a.createElement(n.a,{href:"/js2/references/#r64"},"[R.64]"),"."),"\n",a.createElement(n.li,null,"Si tout est OK, ",a.createElement(n.strong,null,"isAdmin")," fait appel √† ",a.createElement(n.strong,null,"next()"),", qui sera la prochaine fonction middleware qui est pr√©sente apr√®s l'appel de ",a.createElement(n.strong,null,"authorize"),"."),"\n"),"\n",a.createElement(n.p,null,"La fonction middleware ",a.createElement(n.strong,null,"isAdmin")," r√©cup√®re les donn√©es de l'utilisateur authentifi√© via l'objet ",a.createElement(n.code,null,"req.user")," et le ",a.createElement(n.strong,null,"destructuring assignement"),".",a.createElement(n.br),"\n","Si l'utilisateur n'est pas ",a.createElement(n.strong,null,"admin"),", c'est le code '",a.createElement(n.strong,null,"403 Forbidden"),"' qui est renvoy√© √† l'application cliente, signifiant que l'utilisateur est bien authentifi√©, mais il n'a pas les privil√®ges pour acc√©der √† l'op√©ration demand√©e (cr√©ation de pizza).",a.createElement(n.br),"\n","Si tout est OK, ",a.createElement(n.strong,null,"isAdmin")," fait appel √† ",a.createElement(n.strong,null,"next()"),", qui sera la prochaine fonction middleware qui est pr√©sente apr√®s l'appel de ",a.createElement(n.strong,null,"isAdmin"),"."),"\n",a.createElement(n.p,null,"O√π allons-nous utiliser ces nouvelles fonctions middleware ?"),"\n",a.createElement(n.p,null,"Nous pouvons le faire au niveau que nous souhaitons, soit au niveau :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"de l'application, pour toutes les routes, via ",a.createElement(n.code,null,"app.use(authorize)"),"."),"\n",a.createElement(n.li,null,"d'un router, pour toutes les routes associ√©es ; par exemple, on pourrait dire que toutes les routes du router de pizzas sont prot√©g√©es par une autorisation JWT. On √©crirait : ",a.createElement(n.code,null,'app.use("/pizzas", authorize, pizzaRouter);'),'. Cela signifierait que toutes les op√©rations sur des ressources de type "pizzas" ne seraient autoris√©es que si l\'utilisateur est authentifi√©. Cela serait probl√©matique pour deux raisons :',"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"On veut pouvoir afficher le menu des pizzas pour tous les utilisateurs, m√™me s'ils sont anonymes."),"\n",a.createElement(n.li,null,"On ne veut pas simplement v√©rifier qu'un utilisateur est authentifi√© pour cr√©er une pizza, on veut aussi v√©rifier qu'il est admin."),"\n"),"\n"),"\n",a.createElement(n.li,null,"d'une route, pour une op√©ration de notre RESTful API. C'est ce que nous souhaitons faire ici. Veuillez mettre √† jour le code du router de \"pizzas\" au sein de ",a.createElement(n.strong,null,"/routes/pizzas.js")," :"),"\n"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"// See existing code\r\nconst { authorize, isAdmin } = require('../utils/auths');\r\n\r\n// See existing code\r\n\r\n// Create a pizza to be added to the menu.\r\nrouter.post('/', authorize, isAdmin, (req, res) => {\r\n  const title = req?.body?.title?.length !== 0 ? req.body.title : undefined;\r\n  const content = req?.body?.content?.length !== 0 ? req.body.content : undefined;\r\n\r\n  if (!title || !content) return res.sendStatus(400); // error code '400 Bad request'\r\n\r\n  const createdPizza = createOnePizza(title, content);\r\n\r\n  return res.json(createdPizza);\r\n});\n")),"\n",a.createElement(n.p,null,"Ainsi, nous avons juste fait l'appel de deux fonctions middleware pour v√©rifier :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,a.createElement(n.strong,null,"que l'utilisateur est authentifi√©")," via ",a.createElement(n.strong,null,"authorize")," ; si tout est OK au niveau du token fournit par l'application cliente, ",a.createElement(n.strong,null,"authorize")," fait appel via ",a.createElement(n.strong,null,"next()")," √† la prochaine fonction middleware. Dans ce cas-ci, c'est ",a.createElement(n.strong,null,"isAdmin"),". S'il y a un probl√®me, ",a.createElement(n.strong,null,"authorize")," termine le traitement de la requ√™te en envoyant un code d'erreur au client et les prochaines fonctions middleware (",a.createElement(n.strong,null,"isAdmin"),", puis la fonction arrow) ne sont pas ex√©cut√©es."),"\n",a.createElement(n.li,null,a.createElement(n.strong,null,"que l'utilisateur est admin")," via ",a.createElement(n.strong,null,"isAdmin")," ; si tout est OK, que l'utilisateur authentifi√© est l'admin, ",a.createElement(n.strong,null,"isAdmin")," fait appel via ",a.createElement(n.strong,null,"next()")," √† la prochaine fonction middleware. Dans ce cas-ci, c'est la fonction arrow qui appelle ",a.createElement(n.code,null,"createOnePizza")," pour cr√©er la pizza, la fonction traitant l'op√©ration demand√©e. Si l'utilisateur authentifi√© n'est pas l'admin, alors ",a.createElement(n.strong,null,"isAdmin")," termine le traitement en envoyant un code d'erreur au client et la fonction traitant de l'op√©ration de cr√©ation n'est pas ex√©cut√©e."),"\n"),"\n",a.createElement(n.p,null,"Comment pouvons-nous tester l'op√©ration de cr√©ation d'une pizza ? Via REST Client.\r\nTentons le coup √† l'aide de cette requ√™te (elle est d√©j√† pr√©sente dans ",a.createElement(n.strong,null,"/REST Client/pizzas.http"),") :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-http"},'POST {{baseUrl}}/pizzas\r\nContent-Type: application/json\r\n\r\n{\r\n    "title":"Magic Green",\r\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\r\n}\n')),"\n",a.createElement(n.p,null,"Apr√®s avoir ex√©cut√© cette requ√™te, vous devriez avoir re√ßu un status code '",a.createElement(n.strong,null,"401 Unauthorized"),"'.\r\nEt bien oui, nous n'avons pas envoy√© de token, nous ne pouvons donc pas √™tre autoris√©.",a.createElement(n.br),"\n","Au prochain point nous allons voir comment utiliser REST Client pour sauvegarder de l'information, comme un token, suite √† une requ√™te vers une API."),"\n",a.createElement(n.h2,null,a.createElement("a",{id:"a4"}),"a.4) Client REST"),"\n",a.createElement(n.h3,null,"a.4.1) Client REST avec JWT"),"\n",a.createElement(n.p,null,"Au module 3, nous avons appris √† utiliser REST Client, l'extension de VS Code, pour faire des requ√™tes vers des API."),"\n",a.createElement(n.p,null,"Voici quelques notions suppl√©mentaire pour utiliser REST Client avec des ",a.createElement(n.strong,null,"JWT")," :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"Il est possible de cr√©er des ",a.createElement(n.strong,null,"Request Variables")," afin de r√©cup√©rer la r√©ponse associ√©e\r\n√† une requ√™te au sein d'une variable."),"\n",a.createElement(n.li,null,"On va donc pouvoir r√©cup√©rer le token, suite √† une requ√™te d'authentification,\r\nau sein d'une ",a.createElement(n.strong,null,"Request Variable"),", pour ensuite fournir ce token dans le\r\n¬´ ",a.createElement(n.strong,null,"Authorization header")," ¬ª de toutes les requ√™tes demandant une autorisation JWT."),"\n"),"\n",a.createElement(n.p,null,"Si vous souhaitez plus d'infos sur les ",a.createElement(n.strong,null,"Request Variables"),", vous pouvez consulter la ",a.createElement(n.a,{href:"https://github.com/Huachao/vscode-restclient#request-variables"},"documentation de REST Client")," ",a.createElement(n.a,{href:"/js2/references/#r55"},"[R.55]"),"."),"\n",a.createElement(n.p,null,"Voici comment mettre √† jour le script ",a.createElement(n.strong,null,"/REST Client/pizzas.http")," pour cr√©er une pizza en passant le token de l'utilisateur ",a.createElement(n.strong,null,"admin")," :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-http"},'### Create a pizza by using the admin account\r\n#### First login as the admin\r\n##### Define a request variable nammed admin :\r\n# @name admin\r\nPOST {{baseUrl}}/auths/login\r\nContent-Type: application/json\r\n\r\n{\r\n    "username":"admin",\r\n    "password":"admin"\r\n}\r\n\r\n#### Create a pizza with the admin token\r\nPOST {{baseUrl}}/pizzas\r\nContent-Type: application/json\r\nAuthorization: {{admin.response.body.token}}\r\n\r\n{\r\n    "title":"Magic Green",\r\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\r\n}\n')),"\n",a.createElement(n.p,null,"Pour tester l'op√©ration de cr√©ation de pizza, veuillez d'abord ex√©cuter la premi√®re requ√™te, puis la seconde donn√©e ci-dessus."),"\n",a.createElement(n.p,null,"A ce stade-ci, il serait aussi int√©ressant de tester certains cas d'erreurs associ√©s aux tokens. Veuillez compl√©ter le script ",a.createElement(n.strong,null,"/REST Client/pizzas.http")," avec :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-http"},'### 1. Create a pizza without a token\r\nPOST {{baseUrl}}/pizzas\r\nContent-Type: application/json\r\n\r\n{\r\n    "title":"Magic Green",\r\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\r\n}\r\n\r\n### 2. Create a pizza without being the admin, use manager account\r\n#### 2.1 First login as the manager\r\n##### 2.1.1 Define a request variable nammed manager\r\n# @name manager\r\nPOST {{baseUrl}}/auths/login\r\nContent-Type: application/json\r\n\r\n{\r\n    "username":"manager",\r\n    "password":"manager"\r\n}\r\n\r\n##### 2.1.2 Define a file variable to simplify the access to the token of manager\r\n@managerToken = {{manager.response.body.token}}\r\n\r\n#### 2.2 Try to create a pizza with the manager token\r\nPOST {{baseUrl}}/pizzas\r\nContent-Type: application/json\r\nAuthorization: {{managerToken}}\r\n\r\n{\r\n    "title":"Magic Green",\r\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\r\n}\n')),"\n",a.createElement(n.p,null,"Nous voyons qu'√† l'aide de REST Client, nous pouvons utiliser une ",a.createElement(n.strong,null,"File Variable")," pour allouer une partie de la r√©ponse faite √† une requ√™te.",a.createElement(n.br),"\n","Dans ce cas, on peut faire appel √† l'API en passant le token via la ",a.createElement(n.strong,null,"File Variable")," nomm√© ",a.createElement(n.strong,null,"managerToken")," (",a.createElement(n.code,null,"Authorization: {{managerToken}}"),") au lieu d'utiliser une partie seulement de la ",a.createElement(n.strong,null,"Request Variable")," nomm√©e ",a.createElement(n.strong,null,"manager")," (",a.createElement(n.code,null,"Authorization: {{manager.response.body.token}}"),").",a.createElement(n.br),"\n","Cela permet de cr√©er des requ√™tes plus concises."),"\n",a.createElement(n.h3,null,"a.4.2) Finaliser l'API et les requ√™tes associ√©es"),"\n",a.createElement(n.p,null,"Veuillez mettre √† jour votre RESTful API g√©rant les pizzas afin que toutes les op√©rations d'√©criture soient prot√©g√©es par une autorisation JWT, n'autorisant que l'utilisateur ",a.createElement(n.strong,null,"admin"),"."),"\n",a.createElement(n.p,null,"Voici le code √† mettre √† jour dans ",a.createElement(n.strong,null,"/routes/pizzas"),' pour correctement autoriser les op√©rations de suppression et de modification sur des ressources de type "pizzas":'),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"// Delete a pizza from the menu based on its id\r\nrouter.delete('/:id', authorize, isAdmin, (req, res) => {\r\n  const deletedPizza = deleteOnePizza(req.params.id);\r\n\r\n  if (!deletedPizza) return res.sendStatus(404);\r\n\r\n  return res.json(deletedPizza);\r\n});\r\n\r\n// Update a pizza based on its id and new values for its parameters\r\nrouter.patch('/:id', authorize, isAdmin, (req, res) => {\r\n  const title = req?.body?.title;\r\n  const content = req?.body?.content;\r\n\r\n  if ((!title && !content) || title?.length === 0 || content?.length === 0) {\r\n    return res.sendStatus(400);\r\n  }\r\n\r\n  const updatedPizza = updateOnePizza(req.params.id, { title, content });\r\n\r\n  if (!updatedPizza) return res.sendStatus(404);\r\n\r\n  return res.json(updatedPizza);\r\n});\n")),"\n",a.createElement(n.p,null,"Pour vous assurer que les op√©rations de suppression et de modification sont bien fonctionnelles, veuillez mettre √† jour les requ√™tes associ√©es afin d'utiliser un token. Veuillez mettre √† jour ",a.createElement(n.strong,null,"/REST Client/pizzas.http")," en ajoutant ces deux lignes :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-http"},'### Create a pizza by using the admin account\r\n#### First login as the admin\r\n##### Define a request variable nammed admin\r\n# @name admin\r\nPOST {{baseUrl}}/auths/login\r\nContent-Type: application/json\r\n\r\n{\r\n    "username":"admin",\r\n    "password":"admin"\r\n}\r\n\r\n#### Create a pizza with the admin token\r\nPOST {{baseUrl}}/pizzas\r\nContent-Type: application/json\r\nAuthorization: {{admin.response.body.token}}\r\n\r\n{\r\n    "title":"Magic Green",\r\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\r\n}\r\n\r\n### Delete pizza identified by 2 with the admin token\r\nDELETE {{baseUrl}}/pizzas/2\r\nAuthorization: {{admin.response.body.token}}\r\n\r\n### Update the pizza identified by 6 with the admin token\r\nPATCH {{baseUrl}}/pizzas/6\r\nContent-Type: application/json\r\nAuthorization: {{admin.response.body.token}}\r\n\r\n{\r\n    "title":"Magic Green 2"\r\n}\n')),"\n",a.createElement(n.p,null,"Veuillez ex√©cutez les requ√™tes de type DELETE et de type PATCH afin de vous assurer que l'API est en ordre."),"\n",a.createElement(n.p,null,"Si tout fonctionne bien, faites un ",a.createElement(n.strong,null,"commit")," de votre repo (",a.createElement(n.strong,null,"web2"),') avec le message\r\n"',a.createElement(n.strong,null,"auths"),'".'),"\n",a.createElement(n.p,null,"En cas de souci, vous pouvez utiliser le code du tutoriel ",a.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/auths"},"auths"),"."),"\n",a.createElement(n.h1,null,a.createElement("a",{id:"b"}),"b) Authentification & autorisation JWT via une IHM"),"\n",a.createElement(n.h2,null,a.createElement("a",{id:"b1"}),"b.1) Authentifier un utilisateur via une IHM & JWT"),"\n",a.createElement(n.p,null,"Pour authentifier un utilisateur via une IHM, il suffit de faire une requ√™te √† une RESTful API."),"\n",a.createElement(n.p,null,"G√©n√©ralement, l'utilisateur devra d'abord cr√©er son compte. Il utilisera un formulaire demandant au minimum un identifiant (username, adresse e-mail ou autres) et un password.",a.createElement(n.br),"\n","Dans le cadre d'une SPA, l'IHM fera appel √† une op√©ration de type ",a.createElement(n.strong,null,"register")," lorsque l'utilisateur soumet le formulaire."),"\n",a.createElement(n.p,null,"Par la suite, lorsque le compte de l'utilisateur existe, l'IHM fera appel √† une op√©ration de type ",a.createElement(n.strong,null,"login")," lorsque l'utilisateur tentera de se connecter √† l'aide d'un formulaire."),"\n",a.createElement(n.p,null,"Dans les deux cas, ",a.createElement(n.strong,null,"register")," ou ",a.createElement(n.strong,null,"login"),", le d√©veloppeur devra conna√Ætre les op√©rations mises √† disposition par l'API."),"\n",a.createElement(n.p,null,"Dans le cadre du site de la pizzeria, nous savons que l'API met √† disposition ces deux op√©rations :"),"\n",a.createElement(n.p,null,"| URI | M√©thode HTTP | Op√©ration |\r\n|---|---|---|---|\r\n| ",a.createElement(n.strong,null,"auths/login"),' | POST | V√©rifier les credentials d\'une ressource de type "users" et renvoyer le username et un token JWT si les credentials sont OK |\r\n| ',a.createElement(n.strong,null,"auths/register"),' | POST | Cr√©er une ressource de type "users" et renvoyer le username et un token JWT |'),"\n",a.createElement("br"),"\n",a.createElement(n.p,null,"Veuillez d√©marrer la derni√®re version de la RESTful API de la pizzeria. En cas de souci, vous pouvez utiliser ce code-ci :\r\n",a.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/auths"},"auths"),"."),"\n",a.createElement(n.p,null,"Nous allons maintenant continuer le d√©veloppement de l'IHM ",a.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/frontend/frontend-essentials/async-await"},"async-await")," pour que le formulaire de register et de login fassent appelle √† l'API et sauve temporairement le token renvoy√©."),"\n",a.createElement(n.p,null,"Au sein de votre repo ",a.createElement(n.strong,null,"web2"),", veuillez cr√©er le projet nomm√© ",a.createElement(n.strong,null,"/web2/tutorials/pizzeria/hmi/jwt-fetch")," sur base d'un copi√© coll√© de ",a.createElement(n.strong,null,"/web2/tutorials/pizzeria/hmi/async-await")," (ou ",a.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/frontend/frontend-essentials/basic-fetch"},"async-await"),")."),"\n",a.createElement(n.p,null,"Pour la suite du tutoriel, nous consid√©rons que tous les chemins absolus d√©marrent du r√©pertoire\r\n",a.createElement(n.strong,null,"/web2/tutorials/pizzeria/hmi/jwt-fetch"),"."),"\n",a.createElement(n.p,null,"Veuillez mettre √† jour le code de la ",a.createElement(n.strong,null,"RegisterPage")," afin de faire appel √† la m√©thode ",a.createElement(n.strong,null,"POST /auths/register")," et, si tout est OK, renvoyer l'utilisateur vers la ",a.createElement(n.strong,null,"HomePage")," via la fonction ",a.createElement(n.strong,null,"Navigate")," :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"import { clearPage, renderPageTitle } from '../../utils/render';\r\nimport Navigate from '../Router/Navigate';\r\n\r\nconst RegisterPage = () => {\r\n  clearPage();\r\n  renderPageTitle('Register');\r\n  renderRegisterForm();\r\n};\r\n\r\nfunction renderRegisterForm() {\r\n  const main = document.querySelector('main');\r\n  const form = document.createElement('form');\r\n  form.className = 'p-5';\r\n  const username = document.createElement('input');\r\n  username.type = 'text';\r\n  username.id = 'username';\r\n  username.placeholder = 'username';\r\n  username.required = true;\r\n  username.className = 'form-control mb-3';\r\n  const password = document.createElement('input');\r\n  password.type = 'password';\r\n  password.id = 'password';\r\n  password.required = true;\r\n  password.placeholder = 'password';\r\n  password.className = 'form-control mb-3';\r\n  const submit = document.createElement('input');\r\n  submit.value = 'Register';\r\n  submit.type = 'submit';\r\n  submit.className = 'btn btn-danger';\r\n  form.appendChild(username);\r\n  form.appendChild(password);\r\n  form.appendChild(submit);\r\n  main.appendChild(form);\r\n  form.addEventListener('submit', onRegister);\r\n}\r\n\r\nasync function onRegister(e) {\r\n  e.preventDefault();\r\n\r\n  const username = document.querySelector('#username').value;\r\n  const password = document.querySelector('#password').value;\r\n\r\n  const options = {\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n    }),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  const response = await fetch('/api/auths/register', options);\r\n\r\n  if (!response.ok) throw new Error(`fetch error : ${response.status} : ${response.statusText}`);\r\n\r\n  const authenticatedUser = await response.json();\r\n\r\n  console.log('Newly registered & authenticated user : ', authenticatedUser);\r\n\r\n  Navigate('/');\r\n}\r\n\r\nexport default RegisterPage;\r\n\n")),"\n",a.createElement(n.p,null,"Veuillez ex√©cuter le frontend et vous assurer que l'utilisateur que vous tentez de cr√©er est bien cr√©√© par votre API. Si tout fonctionne, vous aurez une confirmation dans la console de votre browser."),"\n",a.createElement(n.p,null,"Bien, nous souhaitons pour l'instant sauvegarder ",a.createElement(n.strong,null,"authenticatedUser")," de mani√®re temporaire, car cet objet contient comme info le username et le token de l'utilisateur."),"\n",a.createElement(n.p,null,"üí≠ Comment faire pour que cet objet soit disponible dans d'autres modules ?\r\nCette question nous permet d'explorer un propri√©t√© importante des ",a.createElement(n.strong,null,"export")," d'objets via ECMAScript : ce sont des objets immuables, c'est-√†-dire dont vous ne pouvez pas directement changer leurs valeurs. Comment faire alors pour offrir ",a.createElement(n.strong,null,"authenticatedUser")," ?",a.createElement(n.br),"\n","Nous allons offrir quatre nouvelles fonctions :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"une fonction qui renverra l'√©tat d'une variable ",a.createElement(n.strong,null,"authenticatedUser")," ;"),"\n",a.createElement(n.li,null,"une fonction qui permettra de modifier la variable ",a.createElement(n.strong,null,"authenticatedUser")," ;"),"\n",a.createElement(n.li,null,"une fonction qui indiquera si l'utilisateur est authentifi√© ou pas ;"),"\n",a.createElement(n.li,null,"une fonction qui permettra de faire un reset de l'utilisateur en cours (on utilisera cette fonction lors d'un logout)."),"\n"),"\n",a.createElement(n.p,null,"Veuillez cr√©er le fichier ",a.createElement(n.strong,null,"/src/utils/auths.js")," et y ajouter le code suivant :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"let currentUser;\r\n\r\nconst getAuthenticatedUser = () => currentUser;\r\n\r\nconst setAuthenticatedUser = (authenticatedUser) => {\r\n  currentUser = authenticatedUser;\r\n};\r\n\r\nconst isAuthenticated = () => currentUser !== undefined;\r\n\r\nconst clearAuthenticatedUser = () => {\r\n  currentUser = undefined;\r\n};\r\n\r\n// eslint-disable-next-line object-curly-newline\r\nexport { getAuthenticatedUser, setAuthenticatedUser, isAuthenticated, clearAuthenticatedUser };\n")),"\n",a.createElement(n.p,null,"Veuillez mettre √† jour le code de la ",a.createElement(n.strong,null,"RegisterPage")," afin de sauver en m√©moire vive l'utilisateur authentifi√©. Nous allons aussi pr√©parer la suite afin d'avoir une Navbar qui s'adaptera lorsqu'un utilisateur est authentifi√©, c'est pourquoi nous allons appeler le composant ",a.createElement(n.strong,null,"Navbar")," :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"import { setAuthenticatedUser } from '../../utils/auths';\r\nimport { clearPage, renderPageTitle } from '../../utils/render';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport Navigate from '../Router/Navigate';\r\n\r\nconst RegisterPage = () => {\r\n  clearPage();\r\n  renderPageTitle('Register');\r\n  renderRegisterForm();\r\n};\r\n\r\nfunction renderRegisterForm() {\r\n  const main = document.querySelector('main');\r\n  const form = document.createElement('form');\r\n  form.className = 'p-5';\r\n  const username = document.createElement('input');\r\n  username.type = 'text';\r\n  username.id = 'username';\r\n  username.placeholder = 'username';\r\n  username.required = true;\r\n  username.className = 'form-control mb-3';\r\n  const password = document.createElement('input');\r\n  password.type = 'password';\r\n  password.id = 'password';\r\n  password.required = true;\r\n  password.placeholder = 'password';\r\n  password.className = 'form-control mb-3';\r\n  const submit = document.createElement('input');\r\n  submit.value = 'Register';\r\n  submit.type = 'submit';\r\n  submit.className = 'btn btn-danger';\r\n  form.appendChild(username);\r\n  form.appendChild(password);\r\n  form.appendChild(submit);\r\n  main.appendChild(form);\r\n  form.addEventListener('submit', onRegister);\r\n}\r\n\r\nasync function onRegister(e) {\r\n  e.preventDefault();\r\n\r\n  const username = document.querySelector('#username').value;\r\n  const password = document.querySelector('#password').value;\r\n\r\n  const options = {\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n    }),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  const response = await fetch('/api/auths/register', options);\r\n\r\n  if (!response.ok) throw new Error(`fetch error : ${response.status} : ${response.statusText}`);\r\n\r\n  const authenticatedUser = await response.json();\r\n\r\n  console.log('Newly registered & authenticated user : ', authenticatedUser);\r\n\r\n  setAuthenticatedUser(authenticatedUser);\r\n\r\n  Navbar();\r\n\r\n  Navigate('/');\r\n}\r\n\r\nexport default RegisterPage;\n")),"\n",a.createElement(n.p,null,"Pour la ",a.createElement(n.strong,null,"LoginPage"),", les modifications √† faire sont les m√™mes :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"import { setAuthenticatedUser } from '../../utils/auths';\r\nimport { clearPage, renderPageTitle } from '../../utils/render';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport Navigate from '../Router/Navigate';\r\n\r\nconst LoginPage = () => {\r\n  clearPage();\r\n  renderPageTitle('Login');\r\n  renderRegisterForm();\r\n};\r\n\r\nfunction renderRegisterForm() {\r\n  const main = document.querySelector('main');\r\n  const form = document.createElement('form');\r\n  form.className = 'p-5';\r\n  const username = document.createElement('input');\r\n  username.type = 'text';\r\n  username.id = 'username';\r\n  username.placeholder = 'username';\r\n  username.required = true;\r\n  username.className = 'form-control mb-3';\r\n  const password = document.createElement('input');\r\n  password.type = 'password';\r\n  password.id = 'password';\r\n  password.required = true;\r\n  password.placeholder = 'password';\r\n  password.className = 'form-control mb-3';\r\n  const submit = document.createElement('input');\r\n  submit.value = 'Login';\r\n  submit.type = 'submit';\r\n  submit.className = 'btn btn-danger';\r\n  form.appendChild(username);\r\n  form.appendChild(password);\r\n  form.appendChild(submit);\r\n  main.appendChild(form);\r\n  form.addEventListener('submit', onLogin);\r\n}\r\n\r\nasync function onLogin(e) {\r\n  e.preventDefault();\r\n\r\n  const username = document.querySelector('#username').value;\r\n  const password = document.querySelector('#password').value;\r\n\r\n  const options = {\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n    }),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  const response = await fetch('/api/auths/login', options);\r\n\r\n  if (!response.ok) throw new Error(`fetch error : ${response.status} : ${response.statusText}`);\r\n\r\n  const authenticatedUser = await response.json();\r\n\r\n  console.log('Authenticated user : ', authenticatedUser);\r\n\r\n  setAuthenticatedUser(authenticatedUser);\r\n\r\n  Navbar();\r\n\r\n  Navigate('/');\r\n}\r\n\r\nexport default LoginPage;\n")),"\n",a.createElement(n.p,null,"Nous souhaitons maintenant faire en sorte que la Navbar affiche des √©l√©ments diff√©rents si l'utilisateur est authentifi√© au pas :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"s'il est authentifi√© : on affiche ",a.createElement(n.strong,null,"Home"),", ",a.createElement(n.strong,null,"Login"),", ",a.createElement(n.strong,null,"Register")," et le ",a.createElement(n.strong,null,"username")," de l'utilisateur connect√©."),"\n",a.createElement(n.li,null,"s'il est anonyme : on affiche ",a.createElement(n.strong,null,"Home"),", ",a.createElement(n.strong,null,"Add a pizza"),", ",a.createElement(n.strong,null,"Logout"),"."),"\n"),"\n",a.createElement(n.p,null,"Nous allons mettre √† jour la ",a.createElement(n.strong,null,"Navbar")," pour s'adapter √† l'authentification d'un utilisateur :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},'// eslint-disable-next-line no-unused-vars\r\nimport { Navbar as BootstrapNavbar } from \'bootstrap\';\r\nimport { getAuthenticatedUser, isAuthenticated } from \'../../utils/auths\';\r\n\r\nconst Navbar = () => {\r\n  renderNavbar();\r\n};\r\n\r\nfunction renderNavbar() {\r\n  const authenticatedUser = getAuthenticatedUser();\r\n\r\n  const anonymousUserNavbar = `\r\n<nav class="navbar navbar-expand-lg navbar-light bg-danger">\r\n      <div class="container-fluid">\r\n        <a class="navbar-brand" href="#">e-Pizzeria</a>\r\n        <button\r\n          class="navbar-toggler"\r\n          type="button"\r\n          data-bs-toggle="collapse"\r\n          data-bs-target="#navbarSupportedContent"\r\n          aria-controls="navbarSupportedContent"\r\n          aria-expanded="false"\r\n          aria-label="Toggle navigation"\r\n        >\r\n          <span class="navbar-toggler-icon"></span>\r\n        </button>\r\n        <div class="collapse navbar-collapse" id="navbarSupportedContent">\r\n          <ul class="navbar-nav me-auto mb-2 mb-lg-0">\r\n            <li class="nav-item">\r\n              <a class="nav-link active" aria-current="page" href="#" data-uri="/">Home</a>\r\n            </li>\r\n            <li id="loginItem" class="nav-item">\r\n              <a class="nav-link" href="#" data-uri="/login">Login</a>\r\n            </li>\r\n            <li id="registerItem" class="nav-item">\r\n              <a class="nav-link" href="#" data-uri="/register">Register</a>\r\n            </li>            \r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n`;\r\n\r\n  const authenticatedUserNavbar = `\r\n<nav class="navbar navbar-expand-lg navbar-light bg-danger">\r\n      <div class="container-fluid">\r\n        <a class="navbar-brand" href="#">e-Pizzeria</a>\r\n        <button\r\n          class="navbar-toggler"\r\n          type="button"\r\n          data-bs-toggle="collapse"\r\n          data-bs-target="#navbarSupportedContent"\r\n          aria-controls="navbarSupportedContent"\r\n          aria-expanded="false"\r\n          aria-label="Toggle navigation"\r\n        >\r\n          <span class="navbar-toggler-icon"></span>\r\n        </button>\r\n        <div class="collapse navbar-collapse" id="navbarSupportedContent">\r\n          <ul class="navbar-nav me-auto mb-2 mb-lg-0">\r\n            <li class="nav-item">\r\n              <a class="nav-link active" aria-current="page" href="#" data-uri="/">Home</a>\r\n            </li>          \r\n            <li class="nav-item">\r\n              <a class="nav-link" href="#" data-uri="/add-pizza">Add a pizza</a>\r\n            </li>\r\n            <li class="nav-item">\r\n              <a class="nav-link" href="#" data-uri="/logout">Logout</a>\r\n            </li>    \r\n            <li class="nav-item">\r\n              <a class="nav-link disabled" href="#">${authenticatedUser?.username}</a>\r\n            </li>           \r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n`;\r\n\r\n  const navbar = document.querySelector(\'#navbarWrapper\');\r\n\r\n  navbar.innerHTML = isAuthenticated() ? authenticatedUserNavbar : anonymousUserNavbar;\r\n}\r\n\r\nexport default Navbar;\n')),"\n",a.createElement(n.p,null,"Ce code est quasi enti√®rement neuf. On a rajout√© l'√©l√©ment qui permettra de r√©aliser le logout d'un utilisateur. Avant d'aller plus loin, veuillez tester l'application.",a.createElement(n.br),"\n","Loguez-vous avec l'utilisateur ",a.createElement(n.strong,null,"admin")," (et le password ",a.createElement(n.strong,null,"admin"),") et v√©rifier que vous √™tes bien redirig√© vers la HomePage une fois authentifi√©, que la Navbar contient bien les √©l√©ments attendus, dont le ",a.createElement(n.strong,null,"username"),".",a.createElement(n.br),"\n","Veuillez maintenant tester un clic sur l'√©l√©ment ",a.createElement(n.strong,null,"Add a pizza")," de la Navbar. Il ne se passe rien...",a.createElement(n.br),"\n","üí≠ Pourquoi les clics ne sont plus pris en compte ?",a.createElement(n.br),"\n","En fait, regardons le code de notre ",a.createElement(n.strong,null,"Router"),", pour la gestion des clics sur la ",a.createElement(n.strong,null,"Navbar")," :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"function onNavBarClick() {\r\n  const navItems = document.querySelectorAll('.nav-link');\r\n\r\n  navItems.forEach((item) => {\r\n    item.addEventListener('click', (e) => {\r\n      e.preventDefault();\r\n      const uri = e.target?.dataset?.uri;\r\n      const componentToRender = routes[uri];\r\n      if (!componentToRender) throw Error(`The ${uri} ressource does not exist.`);\r\n\r\n      componentToRender();\r\n      window.history.pushState({}, '', uri);\r\n    });\r\n  });\r\n}\n")),"\n",a.createElement(n.p,null,"En fait, tant dans ",a.createElement(n.strong,null,"LoginPage")," que dans ",a.createElement(n.strong,null,"RegisterPage"),", nous faisons appel √† la fonction ",a.createElement(n.strong,null,a.createElement(n.code,null,"Navbar")),' qui fait un "rerender" (r√©affichage) de la Navbar. Ainsi, tous les √©l√©ments de la barre de navigation sont "rerender", et donc comme le ',a.createElement(n.strong,null,"Router")," n'est pas r√©appel√©, la fonction ",a.createElement(n.strong,null,a.createElement(n.code,null,"onNavBarClick"))," n'est pas r√©ex√©cut√©e. Ainsi, m√™me si les nouveaux √©l√©ments de la Navbar ont la classe CSS ",a.createElement(n.strong,null,a.createElement(n.code,null,"nav-link")),", leurs √©couteurs d'√©v√©nements de type click n'existent pas."),"\n",a.createElement(n.p,null,"üí≠ Comment corriger cela ?\r\nOn pourrait se dire qu'il suffit de faire appel √† la fonction ",a.createElement(n.strong,null,a.createElement(n.code,null,"onNavBarClick"))," dans la ",a.createElement(n.strong,null,"Navbar"),". Cette solution ne fonctionnerait pas car nous aurions des d√©pendances cycliques, la Navbar devrait faire appel aux routes, qui elles font appel aux pages, les pages faisant appel √† la Navbar...",a.createElement(n.br),"\n","D√®s lors, le mieux serait de mettre un √©couteur d'√©v√©nements au niveau du wrapper de la Navbar.",a.createElement(n.br),"\n","Comme le wrapper n'est jamais r√©initialis√©, tout sera en ordre.",a.createElement(n.br),"\n","Veuillez donc mettre √† jour la fonction ",a.createElement(n.strong,null,a.createElement(n.code,null,"onNavBarClick"))," de ",a.createElement(n.strong,null,"/src/Components/Router/Router.js")," :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"function onNavBarClick() {\r\n  const navbarWrapper = document.querySelector('#navbarWrapper');\r\n\r\n  navbarWrapper.addEventListener('click', (e) => {\r\n    e.preventDefault();\r\n    const navBarItemClicked = e.target;\r\n    const uri = navBarItemClicked?.dataset?.uri;\r\n    if (uri) {\r\n      const componentToRender = routes[uri];\r\n      if (!componentToRender) throw Error(`The ${uri} ressource does not exist.`);\r\n\r\n      componentToRender();\r\n      window.history.pushState({}, '', uri);\r\n    }\r\n  });\r\n}\n")),"\n",a.createElement(n.p,null,"Veuillez noter que le ",a.createElement(n.strong,null,"navbarWrapper")," est initialis√© au sein du composant ",a.createElement(n.strong,null,"Header"),".",a.createElement(n.br),"\n","Dans la nouvelle version du code du ",a.createElement(n.strong,null,"Router"),", le gestionnaire de clic est ajout√© au niveau de ce wrapper. Gr√¢ce √† l'event objet ",a.createElement(n.strong,null,a.createElement(n.code,null,"e")),", on acc√®de √† l'√©l√©ment sur lequel on a cliqu√© gr√¢ce √† la propri√©t√© ",a.createElement(n.strong,null,a.createElement(n.code,null,"target")),". On retrouve donc l'√©l√©ment de la navbar sur lequel on a cliqu√© tr√®s facilement."),"\n",a.createElement(n.p,null,"Veuillez tester votre IHM et v√©rifier qu'une fois logu√©, vous puissiez bien voyager entre les pages."),"\n",a.createElement(n.p,null,"Il reste maintenant √† cr√©er un composant permettant de faire un logout. On souhaite que ce composant de logout supprime l'utilisateur authentifi√©, r√©affiche la Navbar pour un utilisateur anonyme et redirige l'utilisateur vers la page de login."),"\n",a.createElement(n.p,null,"Pour ce faire, veuillez cr√©er le dossier et le fichier ",a.createElement(n.strong,null,"/src/Components/Logout/Logout.js")," et y ajouter ce code :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"import { clearAuthenticatedUser } from '../../utils/auths';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport Navigate from '../Router/Navigate';\r\n\r\nconst Logout = () => {\r\n  clearAuthenticatedUser();\r\n  Navbar();\r\n  Navigate('/login');\r\n};\r\n\r\nexport default Logout;\n")),"\n",a.createElement(n.p,null,"Attention, m√™me si nous avons mis √† jour la ",a.createElement(n.strong,null,"Navbar")," et cr√©√© le composant ",a.createElement(n.strong,null,"Logout"),", le boilerplate du frontend impose de rajouter une route au sein du ",a.createElement(n.strong,null,"Router")," pour qu'un clic sur l'√©l√©ment ",a.createElement(n.strong,null,"Logout")," de la ",a.createElement(n.strong,null,"Navbar")," am√®ne √† appeler le composant ",a.createElement(n.strong,null,"Logout"),".\r\nVeuillez donc mettre √† jour ",a.createElement(n.strong,null,a.createElement(n.code,null,"routes"))," au sein de ",a.createElement(n.strong,null,"/src/Components/Router/Router.js")," :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"import Logout from '../Logout/Logout';\r\nimport AddPizzaPage from '../Pages/AddPizzaPage';\r\nimport HomePage from '../Pages/HomePage';\r\nimport LoginPage from '../Pages/LoginPage';\r\nimport RegisterPage from '../Pages/RegisterPage';\r\n\r\nconst routes = {\r\n  '/': HomePage,\r\n  '/login': LoginPage,\r\n  '/register': RegisterPage,\r\n  '/add-pizza': AddPizzaPage,\r\n  '/logout': Logout,\r\n};\n")),"\n",a.createElement(n.p,null,"Veuillez maintenant tester le login et le logout. Tout devrait √™tre fonctionnel !",a.createElement(n.br),"\n","Il nous reste √† faire en sorte que l'on puisse autoriser l'op√©ration de cr√©ation de pizza."),"\n",a.createElement(n.h2,null,a.createElement("a",{id:"b2"}),"b.2) Autoriser l'appel √† une op√©ration prot√©g√©e"),"\n",a.createElement(n.p,null,"Nous allons maintenant voir comment, √† partir d'une IHM, nous pouvons utiliser un token pour acc√©der √† une op√©ration d'une RESTful API."),"\n",a.createElement(n.p,null,"Veuillez vous assurer que la derni√®re version de la RESTful API de la pizzeria est bien d√©marr√©e. En cas de souci, vous pouvez utiliser ce code-ci :\r\n",a.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/auths"},"auths"),"."),"\n",a.createElement(n.p,null,"Veuillez vous connecter √† l'IHM ",a.createElement(n.strong,null,"jwt-fetch")," √† l'aide du compte ",a.createElement(n.strong,null,"manager")," et tentez d'ajouter une pizza. Cela ne devrait pas fonctionner. Veuillez regarder dans la console : il devrait y avoir une erreur qui s'affiche avec le \"status code\" ",a.createElement(n.strong,null,"401 : Unauthorized"),".",a.createElement(n.br),"\n","En effet, l'API attend un token pour autoriser l'op√©ration de cr√©ation d'une pizza."),"\n",a.createElement(n.p,null,"Nous allons donc mettre √† jour ",a.createElement(n.strong,null,"/src/Components/Pages/AddPizzaPage.js")," pour ajouter le token de l'utilisateur authentifi√© au sein du header de la requ√™te (il n'y a que trois lignes √† rajouter) :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"import { getAuthenticatedUser } from '../../utils/auths';\r\nimport { clearPage, renderPageTitle } from '../../utils/render';\r\nimport Navigate from '../Router/Navigate';\r\n\r\nconst AddPizzaPage = () => {\r\n  clearPage();\r\n  renderPageTitle('Add a pizza to the menu');\r\n  renderAddPizzaForm();\r\n};\r\n\r\nfunction renderAddPizzaForm() {\r\n  const main = document.querySelector('main');\r\n  const form = document.createElement('form');\r\n  form.className = 'p-5';\r\n  const title = document.createElement('input');\r\n  title.type = 'text';\r\n  title.id = 'title';\r\n  title.placeholder = 'title of your pizza';\r\n  title.required = true;\r\n  title.className = 'form-control mb-3';\r\n  const content = document.createElement('input');\r\n  content.type = 'text';\r\n  content.id = 'content';\r\n  content.required = true;\r\n  content.placeholder = 'Content of your pizza';\r\n  content.className = 'form-control mb-3';\r\n  const submit = document.createElement('input');\r\n  submit.value = 'Add pizza to the menu';\r\n  submit.type = 'submit';\r\n  submit.className = 'btn btn-danger';\r\n  form.appendChild(title);\r\n  form.appendChild(content);\r\n  form.appendChild(submit);\r\n  main.appendChild(form);\r\n  form.addEventListener('submit', onAddPizza);\r\n}\r\n\r\nasync function onAddPizza(e) {\r\n  e.preventDefault();\r\n\r\n  const title = document.querySelector('#title').value;\r\n  const content = document.querySelector('#content').value;\r\n\r\n  const authenticatedUser = getAuthenticatedUser();\r\n\r\n  const options = {\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      title,\r\n      content,\r\n    }),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: authenticatedUser.token,\r\n    },\r\n  };\r\n\r\n  const response = await fetch('/api/pizzas', options);\r\n\r\n  if (!response.ok) throw new Error(`fetch error : ${response.status} : ${response.statusText}`);\r\n\r\n  const newPizza = await response.json();\r\n\r\n  console.log('New pizza added : ', newPizza);\r\n\r\n  Navigate('/');\r\n}\r\n\r\nexport default AddPizzaPage;\r\n\n")),"\n",a.createElement(n.p,null,"Veuillez vous connecter √† l'IHM √† l'aide du compte ",a.createElement(n.strong,null,"manager")," et tentez d'ajouter une pizza. Cela ne devrait toujours pas fonctionner. Veuillez regarder dans la console : il devrait y avoir une erreur qui s'affiche avec le \"status code\" ",a.createElement(n.strong,null,"403 : Forbidden"),".",a.createElement(n.br),"\n","En effet, l'API attend un token pour autoriser l'op√©ration de cr√©ation d'une pizza, mais seulement ",a.createElement(n.strong,null,"admin")," a le privil√®ge d'ajouter une pizza au menu !"),"\n",a.createElement(n.p,null,"D√©connectez-vous (logout), reconnectez-vous √† l'aide du compte ",a.createElement(n.strong,null,"admin"),", et ajoutez une pizza.\r\nVoila ! Le site devrait √™tre enti√®rement fonctionnel !"),"\n",a.createElement(n.p,null,"Si tout fonctionne bien, faites un ",a.createElement(n.strong,null,"commit")," de votre repo (",a.createElement(n.strong,null,"web2"),') avec le message\r\n"',a.createElement(n.strong,null,"jwt-fetch"),'".'),"\n",a.createElement(n.p,null,"En cas de souci, vous pouvez utiliser le code du tutoriel :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"pour le frontend : ",a.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/frontend/frontend-essentials/jwt-fetch"},"jwt-fetch"),"."),"\n",a.createElement(n.li,null,"pour l'API : ",a.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/auths"},"auths"),"."),"\n"),"\n",a.createElement(n.p,null,'üí≠ Est-ce que c\'est "safe" que notre IHM affiche le menu "Add a pizza" pour un utilisateur qui n\'est pas l\'admin ?',a.createElement(n.br),"\n","En fait oui, c'est \"safe\", vous l'avez test√©. L'API ne doit jamais faire confiance aux applications clientes pour appliquer la s√©curit√©. Ainsi, m√™me si le frontend autorise l'acc√®s √† des op√©rations qui ne devraient pas √™tre permises, au regard des autorisations appliqu√©es par l'API, √ßa n'a pas d'importance point de vue s√©curit√©.",a.createElement(n.br),"\n","De la m√™me fa√ßon, c'est pour √ßa qu'une API doit aussi toujours valider les param√®tres qu'elle re√ßoit. Elle ne peut pas faire confiance aux applications clientes, comme par exemple √† une application web tournant dans un browser, pour valider tous les champs d'un formulaire avant de faire la requ√™te.",a.createElement(n.br),"\n","La raison est simple, l'API est d√©velopp√©e ind√©pendamment des applications clientes, elle ne peut pas supposer que les requ√™tes seront toujours bien construites."),"\n",a.createElement(n.p,null,"üí≠ OK, tout est \"safe\" si l'API fait toutes les v√©rifications n√©cessaires. N√©anmoins, n'y a-t-il pas des r√®gles de bonnes pratiques au niveau des IHM, pour ne pas permettre de faire n'importe quelles requ√™tes vers des API ?",a.createElement(n.br),"\n","Et bien oui, au niveau des IHM, pour des questions d'",a.createElement(n.strong,null,"ergonomie"),", d'exp√©rience utilisateur, on va faire en sorte :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"de ne pas offrir des op√©rations qui ne seront pas autoris√©es. Par exemple, dans le cadre de ce tutoriel sur un site permettant de g√©rer une pizzeria, si l'utilisateur n'est pas ",a.createElement(n.strong,null,"admin"),", alors il ne faut pas frustrer les utilisateurs en leur faisant croire qu'ils ont acc√®s √† l'op√©ration de cr√©er une pizza ! Imaginez-vous, vous cr√©er une nouvelle pizza de 32 ingr√©dients, et lors de la soumission, vous recevez un message comme quoi vous n'√™tes pas l'admin du site et que vous n'avez donc pas le droit de cr√©er une pizza üò≤!"),"\n",a.createElement(n.li,null,"de ne pas demander du travail √† une API quand l'IHM peut d√©tecter que ce n'est pas utile.\r\nAinsi, quand une IHM offre des formulaires, qui am√®neront √† des requ√™tes vers des API, on √©vitera d'autoriser la soumission des donn√©es tant que les champs n'ont pas √©t√© valid√©s. Tout ce que l'IHM peut valider c√¥t√© client, elle doit le faire. Le feedback sera plus rapide pour l'utilisateur, et les ressources de l'API seront √©conomis√©es (pas d'appel inutile)."),"\n"),"\n",a.createElement(n.p,null,"N'h√©sitez donc pas √† mettre √† jour ce tutoriel pour faire en sorte de n'afficher \"Add a pizza\" que si l'utilisateur est ",a.createElement(n.strong,null,"admin"),"."),"\n",a.createElement(n.p,null,"üí≠ Ca n'est pas un peu \"cheap\" que seul l'utilisateur ",a.createElement(n.strong,null,"admin")," puisse avoir le privil√®ge d'administrateur du site ?",a.createElement(n.br),"\n","H√© bien oui, c'est \"cheap\". G√©n√©ralement, dans le cadre d'applications plus robustes, nous allons ajouter un ou plusieurs r√¥les aux utilisateurs. Par exemple, dans le cadre d'applications o√π les r√¥les sont simples, qu'il n'y a jamais qu'un seul r√¥le associ√© √† un utilisateur, il suffirait d'ajouter au niveau de l'API la propri√©t√© ",a.createElement(n.strong,null,"role")," aux utilisateurs. Par exemple, la majorit√© des utilisateurs pourrait avoir un r√¥le dont la valeur serait ",a.createElement(n.strong,null,"default"),", et une minorit√© d'utilisateur auraient le r√¥le d'",a.createElement(n.strong,null,"admin"),"..."),"\n",a.createElement(n.p,null,"On n'affiche actuellement ",a.createElement(n.strong,null,"pas de message d'erreur")," √† l'utilisateur lorsque la r√©ponse d'une API renvoie une erreur. Pour am√©liorer l'exp√©rience de l'utilisateur, ce serait une am√©lioration √† faire."),"\n",a.createElement(n.p,null,"Finalement, lorsqu'on ferme le browser et revient sur l'application par la suite, on n'est plus authentifi√©. Nous allons donc prochainement voir comment nous pourrions sauvegarder des donn√©es de session c√¥t√©-client, dans le browser."),"\n",a.createElement(n.h2,null,a.createElement("a",{id:"b3"})," b.3) Probl√®mes de s√©curit√©"),"\n",a.createElement(n.p,null,"Il y a un probl√®me de s√©curit√© majeur actuellement. Nous pourrions √™tre victime d'attaques de type XSS : des injections de JS malicieux sont possibles üò® !",a.createElement(n.br),"\n","De plus, si quelqu'un a acc√®s au fichier ",a.createElement(n.strong,null,"/data/users.json")," pr√©sent sur l'API, il a acc√®s √† tous les passwords des utilisateurs en clair üò® !"),"\n",a.createElement(n.p,null,"Nous allons r√©aliser un exercice avant de traiter des probl√®mes de s√©curit√©."),"\n",a.createElement(n.h1,null,a.createElement("a",{id:"c"})," c) Exercice 7.1 : Authentification & autorisation au sein de myMovies"),"\n",a.createElement(n.p,null,"Lors de l'exercice pr√©c√©dent (Exercice 6.2), vous aviez une application qui permettait normalement de g√©rer des films, mais qui n'√©tait pas s√©curis√©e."),"\n",a.createElement(n.p,null,"A cet exercice, veuillez introduire l'authentification d'utilisateur via ces deux nouveaux cas d'utilisation :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"UC5 : un utilisateur doit pouvoir cr√©er un compte (register)."),"\n",a.createElement(n.li,null,"UC6 : un utilisateur doit pouvoir se loguer (login)."),"\n",a.createElement(n.li,null,"UC7 : un utilisateur doit pouvoir se d√©connecter (logout)."),"\n"),"\n",a.createElement(n.p,null,"Vous allez continuer le d√©veloppement du frontend de ",a.createElement(n.strong,null,"myMovies")," r√©alis√© au module 3 (Exercice 3.1) et de la RESTful API d√©velopp√©e au module 5 (Exercice 5.2)."),"\n",a.createElement(n.p,null,"L'application ",a.createElement(n.strong,null,"myMovies")," doit maintenant autoriser les op√©rations suivantes aux utilisateurs authentifi√©s uniquement :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"UC2 : l'ajout d'une ressource de type films via un formulaire d'ajout d'un film."),"\n",a.createElement(n.li,null,"UC3 : la suppression d'un film."),"\n",a.createElement(n.li,null,"UC4 : la mise √† jour des donn√©es d'un film (√† l'exception de l'id associ√© √† un film)."),"\n"),"\n",a.createElement(n.p,null,"Comme auparavant, cette op√©ration est permise pour tous les utilisateurs, anonymes ou authentifi√©s :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"UC1 : l'affichage, sous forme de tableau, de toutes les ressources de type films."),"\n"),"\n",a.createElement(n.p,null,"Vous allez devoir mettre √† jour tant l'API que le frontend."),"\n",a.createElement(n.p,null,"Voici les op√©rations qui doivent √™tre mises √† disposition par votre API :"),"\n",a.createElement(n.h5,null,'Op√©rations sur les ressources de type "auths"'),"\n",a.createElement(n.p,null,"| URI | M√©thode HTTP | Auths? | Op√©ration |\r\n|---|---|---|---|\r\n| ",a.createElement(n.strong,null,"auths/register"),' | POST | Non | Cr√©er une ressource de type "users" et renvoyer le username et un token JWT |\r\n| ',a.createElement(n.strong,null,"auths/login"),' | POST | Non | V√©rifier les credentials d\'une ressource de type "users" et renvoyer le username et un token JWT si les credentials sont OK |'),"\n",a.createElement("br"),"\n",a.createElement(n.h5,null,'Op√©rations sur les ressources de type "films" (ou "movies", selon votre choix)'),"\n",a.createElement(n.p,null,"| URI | M√©thode HTTP | Auths? | Op√©ration |\r\n|---|---|---|---|\r\n| ",a.createElement(n.strong,null,"films")," | GET | Non | READ ALL : Lire toutes les ressources de la collection |\r\n| ",a.createElement(n.strong,null,"films?minimum-duration=value")," | GET | Non | READ ALL FILTERED : Lire toutes les ressources de la collection selon le filtre donn√© |\r\n| ",a.createElement(n.strong,null,a.createElement(n.code,null,"films/{id}"))," | GET | Non | READ ONE : Lire la ressource identifi√©e |\r\n| ",a.createElement(n.strong,null,"films")," | POST | JWT | CREATE ONE : Cr√©er une ressource bas√©e sur les donn√©es de la requ√™te |\r\n| ",a.createElement(n.strong,null,a.createElement(n.code,null,"films/{id}"))," | DELETE | JWT | DELETE ONE : Effacer la ressource identifi√©e |\r\n| ",a.createElement(n.strong,null,a.createElement(n.code,null,"films/{id}"))," | PATCH | JWT | UPDATE ONE : Mettre √† jour les propri√©t√©s de la ressource par les valeurs donn√©es dans la requ√™te, pour une ou plusieurs propri√©t√©s |"),"\n",a.createElement("br"),"\n",a.createElement(n.p,null,"Afin de r√©aliser cet exercice, voici les contraintes d'impl√©mentation :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"Commencez par mettre √† jour l'API pour ajouter les op√©rations de register, de login, ainsi que les autorisations pour les fonctions d'√©critures sur des ressources de type films. Utilisez le contenu de votre r√©pertoire d'exercices ",a.createElement(n.strong,null,"/exercises/module5/5.2")," comme point de d√©part pour cr√©er, dans votre repository local et votre web repository (normalement appel√© ",a.createElement(n.strong,null,"web2"),"), le r√©pertoire nomm√© ",a.createElement(n.strong,null,"/exercises/module7/7.1/api"),"."),"\n",a.createElement(n.li,null,"Veuillez tester votre API via REST Client pour vous assurer que les autorisations JWT fonctionnent correctement. Quand tout est OK, vous pouvez passer au d√©veloppement de votre frontend."),"\n",a.createElement(n.li,null,"Pour le frontend, utilisez le contenu de votre r√©pertoire d'exercices ",a.createElement(n.strong,null,"/exercises/module6/6.2")," comme point de d√©part pour cr√©er, dans votre repository local et\r\nvotre web repository (normalement appel√© ",a.createElement(n.strong,null,"web2"),"), le r√©pertoire nomm√©\r\n",a.createElement(n.strong,null,"/exercises/module7/7.1/hmi"),"."),"\n",a.createElement(n.li,null,"Veuillez utiliser le proxy de votre frontend afin de contourner les probl√®mes associ√© √† la gestion des CORS."),"\n",a.createElement(n.li,null,"Veuillez d√©velopper de mani√®re incr√©mentale votre IHM, use case par use case, en v√©rifiant le bon fonctionnement de chaque cas d'utilisation avant de passer au d√©veloppement de l'UC suivant.",a.createElement(n.br),"\n","Nous vous recommandons de commencer par le m√©canisme d'authentification en ajoutant l'UC5 et l'UC6. Notez qu'il est facile de d√©marrer avec l'UC6 pour le login d'admin qui existe d√©j√† au niveau de l'API par d√©faut."),"\n",a.createElement(n.li,null,"Pensez √† bien mettre √† jour votre ",a.createElement(n.strong,null,"Navbar")," pour afficher les bons menus :","\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"si l'utilisateur est anonyme : liens uniquement vers la HomePage, vers l'UC1 (view movies), UC5 (login) & UC6 (register) ;"),"\n",a.createElement(n.li,null,"si l'utilisateur est authentifi√© : liens uniquement vers la HomePage, vers l'UC1 (view movies) / UC2 (create) / UC3 (delete) / UC4 (update), UC7 (logout)."),"\n"),"\n"),"\n",a.createElement(n.li,null,"Faites attention, il n'est pas autoris√©, pour des raisons d'ergonomie, que le frontend offre les fonctionnalit√©s d'√©criture de ressources si l'utilisateur n'est pas authentifi√© : UC2 (create), UC3 (delete) et UC4 (update) sont des op√©rations invisibles pour un utilisateur anonyme."),"\n"),"\n",a.createElement(n.h4,null,"ü§ù Tips"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"Cet exercice est l'application du tutoriel vu dans ce module-ci. N'h√©sitez pas donc √† rejouer les √©tapes vues dans le tutoriel au niveau de votre API et √† copier / coller les fichiers utiles (",a.createElement(n.strong,null,"authorize.js"),", ",a.createElement(n.strong,null,"users.js"),", ",a.createElement(n.strong,null,"auths.js"),"...) : ",a.createElement(n.a,{href:"#a"},"a) Authentification s√©curis√©e et autorisation d'acc√®s aux op√©rations d'une RESTful API via JWT"),"."),"\n",a.createElement(n.li,null,"N'oubliez pas de tester chaque op√©ration. Par exemple, il faut bien v√©rifier que l'on ne puisse pas cr√©er une pizza sans token via REST Client."),"\n",a.createElement(n.li,null,"Occupez-vous ensuite du frontend en copiant collant les fichiers utiles trouv√©s dans le tutoriel associ√© √† cette partie (",a.createElement(n.strong,null,"RegisterPage"),", ",a.createElement(n.strong,null,"LoginPage"),", ",a.createElement(n.strong,null,"Logout"),", ",a.createElement(n.strong,null,"auths"),", ",a.createElement(n.strong,null,"Navbar"),"...) : ",a.createElement(n.a,{href:"#b"},"b) Utilisation de JWT au sein d'une IHM"),".",a.createElement(n.br),"\n","Attention √† ne pas oublier de mettre √† jour votre Router (nouvelles pages pour le register, le login et le logout), la Navbar (diff√©rent affichage pour un utilisateur anonyme que pour un utilisateur connect√©), d'ajouter les token dans le header de vos requ√™tes via fetch..."),"\n",a.createElement(n.li,null,"Concernant le Router, il faut mettre √† jour ",a.createElement(n.code,null,"onNavBarClick")," pour que les gestionnaires d'ev√©n√©ments restent attach√©s m√™me quand la Navbar est r√©affich√©e."),"\n",a.createElement(n.li,null,"üí≠ Comment rendre invisible les op√©rations d'√©criture de films ?",a.createElement(n.br),"\n","Par exemple, vous pourriez afficher les boutons ",a.createElement(n.strong,null,"Delete")," et ",a.createElement(n.strong,null,"Save")," que si l'utilisateur est authentifi√©.",a.createElement(n.br),"\n","De m√™me, si l'utilisateur est anonyme, les cellules associ√©es aux films ne devraient pas √™tre √©ditables."),"\n"),"\n",a.createElement(n.p,null,"Veuillez faire un ",a.createElement(n.strong,null,"commit"),' de votre code avec le message suivant :\r\n"',a.createElement(n.strong,null,"myMovies : module 7 : auths"),'"".'),"\n",a.createElement(n.p,null,"NB : Le code de vos applications se trouve dans votre repository local et\r\nvotre web repository (normalement appel√© ",a.createElement(n.strong,null,"web2"),") dans les r√©pertoires nomm√©s\r\n",a.createElement(n.strong,null,"/exercises/module7/7.1/api")," et ",a.createElement(n.strong,null,"/exercises/module7/7.1/hmi"),"."),"\n",a.createElement(n.h1,null,a.createElement("a",{id:"d"})," d) S√©curisation de RESTful API"),"\n",a.createElement(n.h2,null,a.createElement("a",{id:"d1"})," d.1) Introduction"),"\n",a.createElement(n.p,null,"La s√©curisation d'API est une probl√©matique complexe. Nous n'allons pas aller dans les d√©tails de cette probl√©matique, juste offrir une solution √† deux probl√©matiques simples √† traiter."),"\n",a.createElement(n.h2,null,a.createElement("a",{id:"d2"})," d.2) Protection contre les attaques XSS"),"\n",a.createElement(n.h3,null,"d.2.1) Une attaque XSS, c'est quoi ?"),"\n",a.createElement(n.p,null,"Les attaques ",a.createElement(n.strong,null,"XSS"),", ou ",a.createElement(n.strong,null,"Cross-Site Scripting"),", sont un type d'injection de scripts malicieux dans une application web."),"\n",a.createElement(n.p,null,"Imaginez le forum web d'une banque et ce sc√©nario :"),"\n",a.createElement(t,{name:"xss.png",minWidth:"500px",maxWidth:"700px"}),"\n",a.createElement(n.p,null,"L'API de la banque permet d'enregistrer des messages qui sont associ√©s √† des forums sur lesquels leurs clients peuvent poster des messages.",a.createElement(n.br),"\n","Si l'API de la banque √©tait mal s√©curis√©e et qu'elle permettait d'enregistrer n'importe quels types d'information en tant que \"messages\" du forum, il serait possible √† un attaquant d'injecter du JS malicieux dans l'API.",a.createElement(n.br),"\n","Plus tard, lors de l'affichage des messages par le forum de la banque (",a.createElement(n.code,null,"https://forum.my-bank.com "),"), le JS malicieux pourra s'ex√©cuter dans le browser de n'importe quel utilisateur.",a.createElement(n.br),"\n","Vous avez vu que via du JS, on peut envoyer de l'information n'importe o√π, notamment √† l'aide de ",a.createElement(n.strong,null,"fetch"),". Ce qui permettrait donc √† un hacker, via son script malicieux, d'envoyer des cookies contenant des infos sensibles √† son API malicieuse, en vue de futures attaques encore plus diaboliques, comme notamment vider le compte en banque d'utilisateurs."),"\n",a.createElement(n.p,null,"La protection contre des attaques XSS se fait √† diff√©rents niveaux. Ca n'est pas l'objet de ce cours de voir cela en d√©tails, mais nous verrons un technique simple pour √©viter certaines attaques XSS."),"\n",a.createElement(n.h3,null,"d.2.2) R√©aliser une attaque XSS"),"\n",a.createElement(n.p,null,"Nous allons maintenant r√©aliser une attaque XSS sur le site de la pizzeria."),"\n",a.createElement(n.p,null,"Veuillez lancer le frontend ",a.createElement(n.strong,null,"jwt-fetch")," et le backend ",a.createElement(n.strong,null,"auths")," du site de la pizzeria. En cas de soucis :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"pour le frontend : ",a.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/frontend/frontend-essentials/jwt-fetch"},"jwt-fetch"),"."),"\n",a.createElement(n.li,null,"pour l'API : ",a.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/auths"},"auths"),"."),"\n"),"\n",a.createElement(n.p,null,"Evidemment, un hackeur, pour tenter l'attaque XSS, doit d'abord trouver un moyen d'usurper la session d'",a.createElement(n.strong,null,"admin"),". Nous ne verrons pas dans ce cours le genre d'attaques qui permettrait de le faire. Nous allons consid√©rer que cette premi√®re attaque est r√©ussie et nous allons prendre le r√¥le d'un hackeur pouvant acc√©der au compte ",a.createElement(n.strong,null,"admin"),"."),"\n",a.createElement(n.p,null,"Veuillez vous loguer √† l'aide du compte ",a.createElement(n.strong,null,"admin")," (et le password ",a.createElement(n.strong,null,"admin"),").",a.createElement(n.br),"\n","Veuillez vous rendre sur la page ",a.createElement(n.strong,null,"Add a pizza"),"."),"\n",a.createElement(n.p,null,"Pour le titre de la pizza, vous pouvez ajouter n'importe quoi.\r\nDans le contenu de la pizza, veuillez ajouter cela et soumettre :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-text"},'<img src="#" onerror="alert(\'You have been hacked !\')">\n')),"\n",a.createElement(n.p,null,"En fait, nous avons ajout√© une balise ",a.createElement(n.strong,null,a.createElement(n.code,null,"img"))," contenant du inline JS. ",a.createElement(n.strong,null,a.createElement(n.code,null,"oneerror"))," est un gestionnaire d'√©v√©nements qui sera d'office appel√© car la source (",a.createElement(n.strong,null,a.createElement(n.code,null,'src="#"'))," ) donn√© √† ",a.createElement(n.strong,null,a.createElement(n.code,null,"img"))," n'est pas une image."),"\n",a.createElement(n.p,null,'Maintenant, tout utilisateur connect√© ou pas qui se loguera sur le site va ex√©cuter ce script "malicieux". Il verra le pop-up appara√Ætre avec le message "You have been hacked !".',a.createElement(n.br),"\n","En effet, le menu des pizzas, tel qu'il est construit, est bas√© sur toutes les ressources de type \"pizzas\" renvoy√©es par l'API, dont une des pizzas contient le JS malicieux qui est ex√©cut√© dans une cellule de la table via ce code de la ",a.createElement(n.strong,null,"HomePage")," de l'IHM :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"function getAllTableLinesAsString(menu) {\r\n  let pizzaTableLines = '';\r\n\r\n  menu?.forEach((pizza) => {\r\n    pizzaTableLines += `<tr>\r\n      <td>${pizza.title}</td>\r\n      <td>${pizza.content}</td>\r\n    </tr>`;\r\n  });\r\n\r\n  return pizzaTableLines;\r\n}\n")),"\n",a.createElement(n.h3,null,"d.2.3) Emp√™cher les attaques XSS"),"\n",a.createElement(n.p,null,"Par rapport √† l'attaque pr√©c√©dente, le plus simple pour prot√©ger de l'attaque pourrait √™tre de faire en sorte que l'application cliente n'interpr√®te pas d'HTML / JS / CSS envoy√© par l'API."),"\n",a.createElement(n.p,null,"Ici, dans la ",a.createElement(n.strong,null,"HomePage"),", on utilise la propri√©t√© ",a.createElement(n.strong,null,a.createElement(n.code,null,"innerHTML"))," d'une ",a.createElement(n.strong,null,a.createElement(n.code,null,"td")),". Ainsi, l'HTML et l'inline JS associ√© est ex√©cut√©. Si l'on utilisais la propri√©t√© ",a.createElement(n.strong,null,a.createElement(n.code,null,"innerText"))," des ",a.createElement(n.strong,null,a.createElement(n.code,null,"td")),", alors, ni l'HTML et le JS serait interpr√©t√© par le browser, et donc pas de possibilit√© de script malicieux au niveau de la ",a.createElement(n.strong,null,"HomePage"),"."),"\n",a.createElement(n.p,null,"Oui, mais si nous allions vers cette solution, cela serait probl√©matique si nous souhaitions r√©ellement d√©velopper plusieurs applications clientes, il faudrait toujours faire attention √† cette contrainte."),"\n",a.createElement(n.p,null,"D√®s lors, nous allons pr√©f√©rer la solution o√π nous s√©curisons l'API. Ainsi, peu importe l'application cliente d√©velopp√©e, il devrait y avoir moins d'angles d'attaques."),"\n",a.createElement(n.p,null,"Au niveau de l'API, nous allons √©chapper les caract√®res dangereux, principalement ",a.createElement(n.strong,null,a.createElement(n.code,null,'"')),", ",a.createElement(n.strong,null,a.createElement(n.code,null,"'")),", ",a.createElement(n.strong,null,a.createElement(n.code,null,"&")),", ",a.createElement(n.strong,null,a.createElement(n.code,null,"<")),", ",a.createElement(n.strong,null,a.createElement(n.code,null,">")),"."),"\n",a.createElement(n.p,null,"Nous allons utiliser la librairie ",a.createElement(n.strong,null,a.createElement(n.a,{href:"https://www.npmjs.com/package/escape-html"},"escape-html"))," sous Node.js √©chappant les string pour une utilisation des string transform√©es en HTML."),"\n",a.createElement(n.p,null,"Nous allons maintenant continuer le d√©veloppement de l'API ",a.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/auths"},"auths")," et la s√©curiser."),"\n",a.createElement(n.p,null,"Au sein de votre repo ",a.createElement(n.strong,null,"web2"),", veuillez cr√©er le projet nomm√© ",a.createElement(n.strong,null,"/web2/tutorials/pizzeria/api/safe")," sur base d'un copi√© coll√© de ",a.createElement(n.strong,null,"/web2/tutorials/pizzeria/api/auths")," (ou ",a.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/auths"},"auths"),"."),"\n",a.createElement(n.p,null,"Pour la suite du tutoriel, nous consid√©rons que tous les chemins absolus d√©marrent du r√©pertoire\r\n",a.createElement(n.strong,null,"/web2/tutorials/pizzeria/api/safe"),"."),"\n",a.createElement(n.p,null,"Veuillez installer la librairie ",a.createElement(n.strong,null,"escape-html")," au sein de votre projet ",a.createElement(n.strong,null,"safe")," :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-bash"},"npm i escape-html\n")),"\n",a.createElement(n.p,null,"Nous allons supprimer, s'il existe, le fichier reprenant le code malicieux introduit pr√©c√©demment : veuillez supprimer le fichier ",a.createElement(n.strong,null,"/data/pizzas.json"),"."),"\n",a.createElement(n.p,null,"Nous allons √† pr√©sent mettre √† jour le mod√®le de pizzas pour √©chapper les caract√®res dangereux.\r\nVeuillez modifier ",a.createElement(n.strong,null,"/models/pizzas.js")," :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"const escape = require('escape-html');\r\n// other bits of code\r\n\r\nfunction createOnePizza(title, content) {\r\n  const pizzas = parse(jsonDbPath, defaultPizzas);\r\n\r\n  const createdPizza = {\r\n    id: getNextId(),\r\n    title: escape(title),\r\n    content: escape(content),\r\n  };\r\n\r\n  pizzas.push(createdPizza);\r\n\r\n  serialize(jsonDbPath, pizzas);\r\n\r\n  return createdPizza;\r\n}\n")),"\n",a.createElement(n.p,null,"Nous allons maintenant tester si tout est r√©gl√© au niveau de l'attaque XSS.",a.createElement(n.br),"\n","Veuillez vous loguer √† l'aide du compte ",a.createElement(n.strong,null,"admin")," (et le password ",a.createElement(n.strong,null,"admin"),").",a.createElement(n.br),"\n","Veuillez vous rendre sur la page ",a.createElement(n.strong,null,"Add a pizza"),"."),"\n",a.createElement(n.p,null,"Comme pr√©c√©demment :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"Pour le titre de la pizza, vous pouvez ajouter n'importe quoi."),"\n",a.createElement(n.li,null,"Dans le contenu de la pizza, veuillez ajouter cela et soumettre :"),"\n"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-text"},'<img src="#" onerror="alert(\'You have been hacked !\')">\n')),"\n",a.createElement(n.p,null,"Maintenant, tout utilisateur connect√© verra simplement appara√Ætre, quand il affiche la ",a.createElement(n.strong,null,"HomePage"),", le menu des pizzas avec :"),"\n",a.createElement(t,{name:"hacked.png",minWidth:"500px",maxWidth:"744px"}),"\n",a.createElement(n.p,null,"Il n'y a plus de code JavaScript malicieux qui peut s'ex√©cuter c√¥t√© client üéâ !"),"\n",a.createElement(n.p,null,"Nous allons maintenant r√©gler les probl√®mes de passwords mis en clair dans un fichier de l'API."),"\n",a.createElement(n.h2,null,a.createElement("a",{id:"d3"})," d.3) S√©curisation des passwords"),"\n",a.createElement(n.p,null,"Nous souhaitons maintenant assurer que les passwords enregistr√©s dans un support de donn√©es (un fichier ou une base de donn√©es) ne puissent pas √™tre r√©cup√©r√©s."),"\n",a.createElement(n.p,null,"üëç Pour ce faire, il est recommand√© d'hacher les passwords avant de les enregistrer au niveau d'une API."),"\n",a.createElement(n.p,null,'Afin de se prot√©ger contre les "hash attacks", on utilise du ',a.createElement(n.strong,null,"salt")," :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"un ",a.createElement(n.strong,null,"salt")," : c'est une donn√©e al√©atoire qui est utilis√© en entr√©e d'une fonction qui hache des donn√©es. Ainsi, si un hackeur utilise une base de donn√©es de passwords hach√©s, il devra en plus trouver le bon ",a.createElement(n.strong,null,"salt")," pour que son attaque puisse fonctionner."),"\n",a.createElement(n.li,null,a.createElement(n.strong,null,"salt round")," : nombre de fois que l'op√©ration de hachage est faite, rendant les attaques de force brute plus lente et donc difficile ; une valeur de ",a.createElement(n.strong,null,"10")," semble √™tre g√©n√©ralement raisonnable et recommend√©e."),"\n"),"\n",a.createElement(n.p,null,"Pour hacher sous Node.js, nous utiliserons la librairie ",a.createElement(n.a,{href:"https://www.npmjs.com/package/bcrypt"},"bcrypt"),"."),"\n",a.createElement(n.p,null,"Veuillez installer la librairie ",a.createElement(n.strong,null,"bcrypt")," au sein de votre nouveau projet ",a.createElement(n.strong,null,"safe")," :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-bash"},"npm i bcrypt\n")),"\n",a.createElement(n.p,null,"En r√©sum√©, nous allons utiliser :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"la fonction asynchrone ",a.createElement(n.strong,null,a.createElement(n.code,null,"hash"))," de ",a.createElement(n.strong,null,"bcrypt")," pour hacher un password ;"),"\n",a.createElement(n.li,null,"la fonction asynchrone ",a.createElement(n.strong,null,a.createElement(n.code,null,"compare"))," de ",a.createElement(n.strong,null,"bcrypt")," pour comparer un password en clair √† un password hach√© ; si le r√©sultat est positif, cela signifie que le password fournit pour un utilisateur correspond au password initial."),"\n"),"\n",a.createElement(n.p,null,"Nous pr√©f√©rons utiliser les librairies asynchrone afin de laisser l'API plus disponible √† g√©rer des requ√™tes clientes et pas bloquer celles-ci jusqu'√† la fin d'une op√©ration de ",a.createElement(n.strong,null,"bcrypt"),"."),"\n",a.createElement(n.p,null,"Veuillez effacer le fichier ",a.createElement(n.strong,null,"/data/users.json")," contenant les credentials d'utilisateurs o√π les passwords ne sont pas hach√©s."),"\n",a.createElement(n.p,null,'Nous allons maintenant mettre √† jour le mod√®le de "users" pour utiliser ',a.createElement(n.strong,null,"bcrypt"),". Veuillez modifier ",a.createElement(n.strong,null,"/models/users.js")," :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"const jwt = require('jsonwebtoken');\r\nconst bcrypt = require('bcrypt');\r\nconst path = require('node:path');\r\nconst { parse, serialize } = require('../utils/json');\r\n\r\nconst jwtSecret = 'ilovemypizza!';\r\nconst lifetimeJwt = 24 * 60 * 60 * 1000; // in ms : 24 * 60 * 60 * 1000 = 24h\r\n\r\nconst saltRounds = 10;\r\n\r\nconst jsonDbPath = path.join(__dirname, '/../data/users.json');\r\n\r\nconst defaultUsers = [\r\n  {\r\n    id: 1,\r\n    username: 'admin',\r\n    password: bcrypt.hashSync('admin', saltRounds),\r\n  },\r\n];\r\n\r\nasync function login(username, password) {\r\n  const userFound = readOneUserFromUsername(username);\r\n  if (!userFound) return undefined;\r\n\r\n  const passwordMatch = await bcrypt.compare(password, userFound.password);\r\n  if (!passwordMatch) return undefined;\r\n\r\n  const token = jwt.sign(\r\n    { username }, // session data added to the payload (payload : part 2 of a JWT)\r\n    jwtSecret, // secret used for the signature (signature part 3 of a JWT)\r\n    { expiresIn: lifetimeJwt }, // lifetime of the JWT (added to the JWT payload)\r\n  );\r\n\r\n  const authenticatedUser = {\r\n    username,\r\n    token,\r\n  };\r\n\r\n  return authenticatedUser;\r\n}\r\n\r\nasync function register(username, password) {\r\n  const userFound = readOneUserFromUsername(username);\r\n  if (userFound) return undefined;\r\n\r\n  await createOneUser(username, password);\r\n\r\n  const token = jwt.sign(\r\n    { username }, // session data added to the payload (payload : part 2 of a JWT)\r\n    jwtSecret, // secret used for the signature (signature part 3 of a JWT)\r\n    { expiresIn: lifetimeJwt }, // lifetime of the JWT (added to the JWT payload)\r\n  );\r\n\r\n  const authenticatedUser = {\r\n    username,\r\n    token,\r\n  };\r\n\r\n  return authenticatedUser;\r\n}\r\n\r\nfunction readOneUserFromUsername(username) {\r\n  const users = parse(jsonDbPath, defaultUsers);\r\n  const indexOfUserFound = users.findIndex((user) => user.username === username);\r\n  if (indexOfUserFound < 0) return undefined;\r\n\r\n  return users[indexOfUserFound];\r\n}\r\n\r\nasync function createOneUser(username, password) {\r\n  const users = parse(jsonDbPath, defaultUsers);\r\n\r\n  const hashedPassword = await bcrypt.hash(password, saltRounds);\r\n\r\n  const createdUser = {\r\n    id: getNextId(),\r\n    username,\r\n    password: hashedPassword,\r\n  };\r\n\r\n  users.push(createdUser);\r\n\r\n  serialize(jsonDbPath, users);\r\n\r\n  return createdUser;\r\n}\r\n\r\nfunction getNextId() {\r\n  const users = parse(jsonDbPath, defaultUsers);\r\n  const lastItemIndex = users?.length !== 0 ? users.length - 1 : undefined;\r\n  if (lastItemIndex === undefined) return 1;\r\n  const lastId = users[lastItemIndex]?.id;\r\n  const nextId = lastId + 1;\r\n  return nextId;\r\n}\r\n\r\nmodule.exports = {\r\n  login,\r\n  register,\r\n  readOneUserFromUsername,\r\n};\n")),"\n",a.createElement(n.p,null,"Voici les modifications apport√©es :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"pour cr√©er un password hash√© : on utilise la fonction asynchrone ",a.createElement(n.code,null,"hash")," pour cr√©er le password hach√©. D√®s lors, ",a.createElement(n.code,null,"createOneUser")," devient asynchrone. De plus, comme ",a.createElement(n.code,null,"createOneUser")," est devenue asynchrone, dans ",a.createElement(n.code,null,"register"),", pour cha√Æner le traitement de cr√©ation du token, on met un ",a.createElement(n.strong,null,"await")," √† l'appel de ",a.createElement(n.code,null,"createOneUser"),". Et comme un ",a.createElement(n.strong,null,"await")," est ajout√© au sein de ",a.createElement(n.code,null,"register"),", il faut mettre un ",a.createElement(n.strong,null,"async")," √† la m√©thode ",a.createElement(n.code,null,"register"),". Attention, du coup, comme ",a.createElement(n.code,null,"register")," est devenue asynchrone, il faudra faire attention √† bien cha√Æner les traitements l√† o√π ",a.createElement(n.code,null,"register")," est appel√©, dans le router ",a.createElement(n.strong,null,"auths"),"."),"\n",a.createElement(n.li,null,"pour v√©rifier qu'un password match √† un password hach√© : on utilise la fonction asynchrone ",a.createElement(n.code,null,"compare")," que l'on cha√Æne √† la cr√©ation du token √† l'aide de ",a.createElement(n.strong,null,"await"),". D√®s lors, la fonction ",a.createElement(n.code,null,"login")," doit elle aussi √™tre d√©clar√©e ",a.createElement(n.strong,null,"async"),". Attention, du coup, comme ",a.createElement(n.code,null,"login")," est devenue asynchrone, il faudra faire attention √† bien cha√Æner les traitements l√† o√π ",a.createElement(n.code,null,"login")," est appel√©, dans le router ",a.createElement(n.strong,null,"auths"),"."),"\n",a.createElement(n.li,null,"pour cr√©er l'utilisateur ",a.createElement(n.strong,null,"admin")," se trouvant dans les ",a.createElement(n.strong,null,"defaultUsers"),", on souhaite indiquer comme ",a.createElement(n.strong,null,"password"),' le password hach√© correspondant au password "admin". Pour se simplifier la vie, on appelle la fonction synchrone ',a.createElement(n.code,null,"hashSync")," (voir ligne 16). Bien √©videmment, dans une application plus robuste, on √©vitera d'hardcoder ce genre de secrets dans les sources de notre application."),"\n"),"\n",a.createElement(n.p,null,"Afin de traiter des deux fonctions du mod√®le ",a.createElement(n.strong,null,"users")," qui sont devenues asynchrones, ",a.createElement(n.code,null,"login")," et ",a.createElement(n.code,null,"register"),", nous allons modifier le router ",a.createElement(n.strong,null,"/routes/auths")," :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"const express = require('express');\r\nconst { register, login } = require('../models/users');\r\n\r\nconst router = express.Router();\r\n\r\n/* Register a user */\r\nrouter.post('/register', async (req, res) => {\r\n  const username = req?.body?.username?.length !== 0 ? req.body.username : undefined;\r\n  const password = req?.body?.password?.length !== 0 ? req.body.password : undefined;\r\n\r\n  if (!username || !password) return res.sendStatus(400); // 400 Bad Request\r\n\r\n  const authenticatedUser = await register(username, password);\r\n\r\n  if (!authenticatedUser) return res.sendStatus(409); // 409 Conflict\r\n\r\n  return res.json(authenticatedUser);\r\n});\r\n\r\n/* Login a user */\r\nrouter.post('/login', async (req, res) => {\r\n  const username = req?.body?.username?.length !== 0 ? req.body.username : undefined;\r\n  const password = req?.body?.password?.length !== 0 ? req.body.password : undefined;\r\n\r\n  if (!username || !password) return res.sendStatus(400); // 400 Bad Reques\r\n\r\n  const authenticatedUser = await login(username, password);\r\n\r\n  if (!authenticatedUser) return res.sendStatus(401); // 401 Unauthorized\r\n\r\n  return res.json(authenticatedUser);\r\n});\r\n\r\nmodule.exports = router;\n")),"\n",a.createElement(n.p,null,"Nous avons simplement cha√Æn√© les r√©ponses √† faire au client seulement une fois les op√©ration ",a.createElement(n.code,null,"register")," et ",a.createElement(n.code,null,"login")," termin√©es. Pour ce faire, nous avons pr√©c√©d√© le nom de ces m√©thodes par ",a.createElement(n.strong,null,"await"),". Nous avons donc du ajouter ",a.createElement(n.strong,null,"async")," aux fonctions middleware s'occupant des routes ",a.createElement(n.strong,null,"POST /auths/register")," et ",a.createElement(n.strong,null,"POST /auths/login"),"."),"\n",a.createElement(n.p,null,"Veuillez v√©rifier que votre application fonctionne correctement.",a.createElement(n.br),"\n","Via l'IHM, veuillez faire un register d'un nouvel utilisateur.",a.createElement(n.br),"\n","Au niveau de l'API, allez voir le contenu du nouveau fichier ",a.createElement(n.strong,null,"/data/users.json"),". Les passwords devraient maintenant √™tre hach√©s, comme par exemple :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-json"},'[\r\n  {\r\n    "id": 1,\r\n    "username": "admin",\r\n    "password": "$2b$10$RioLKlPFyYFEhv/46gR7dufDkke07eDpWH9tBt/A4Z9tJh0oJnnf2"\r\n  },\r\n  {\r\n    "id": 2,\r\n    "username": "manager",\r\n    "password": "$2b$10$NZZ1zxOPdby6gl4Dw8K0Q.v4ZRWTbh1Ta7qcYzH5G4SrO5z71H0kO"\r\n  }\r\n]\n')),"\n",a.createElement(n.p,null,"Si tout fonctionne bien, faites un ",a.createElement(n.strong,null,"commit")," de votre repo (",a.createElement(n.strong,null,"web2"),') avec le message\r\n"',a.createElement(n.strong,null,"api-safe"),'".'),"\n",a.createElement(n.p,null,"En cas de souci, vous pouvez utiliser le code du tutoriel :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"pour le frontend : ",a.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/frontend/frontend-essentials/jwt-fetch"},"jwt-fetch"),"."),"\n",a.createElement(n.li,null,"pour l'API : ",a.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/safe"},"safe"),"."),"\n"),"\n",a.createElement(n.h1,null,a.createElement("a",{id:"e"})," e) Exercice 7.2 : S√©curisation de l'API de myMovies"),"\n",a.createElement(n.p,null,"A l'exercice pr√©c√©dent (Exercice 7.1), vous avez d√©velopp√© le m√©canisme d'authentification et d'autorisation d'acc√®s √† des op√©rations de votre RESTful API g√©rant des films."),"\n",a.createElement(n.p,null,"N√©anmoins, cette API n'est pas encore s√©curis√©e. Les passwords sont disponibles en clair dans un fichier JSON et il est possible de faire des attaques XSS."),"\n",a.createElement(n.p,null,'Commencez par hacker votre site en faisant une injection de Javascript. Ce script "malicieux" affichera un pop-up √† chaque utilisateur affichant la liste des films ; ce pop-up sera suffisamment explicite pour que vos utilisateurs sachent qu\'ils ont √©t√© pirat√©s.'),"\n",a.createElement(n.p,null,"Ensuite, veuillez s√©curiser l'API pour √©chapper les caract√®res dangereux et pour hacher les password."),"\n",a.createElement(n.p,null,"Afin de r√©aliser cet exercice, voici les contraintes d'impl√©mentation :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"Pour le frontend, il n'y a rien √† d√©velopper, veuillez ex√©cuter  le contenu de votre r√©pertoire d'exercices ",a.createElement(n.strong,null,"/exercises/module7/7.1/hmi"),"."),"\n",a.createElement(n.li,null,"Pour l'API, utilisez le contenu de votre r√©pertoire d'exercices ",a.createElement(n.strong,null,"/exercises/module7/7.1/api")," comme point de d√©part pour cr√©er, dans votre repository local et\r\nvotre web repository (normalement appel√© ",a.createElement(n.strong,null,"web2"),"), le r√©pertoire nomm√©\r\n",a.createElement(n.strong,null,"/exercises/module7/7.2/api"),"."),"\n"),"\n",a.createElement(n.h4,null,"ü§ù Tips"),"\n",a.createElement(n.p,null,"Cet exercice est l'application du tutoriel vu dans ce module-ci. N'h√©sitez pas donc √† rejouer les √©tapes vues dans le tutoriel au niveau de votre API : ",a.createElement(n.a,{href:"#d"},"d) S√©curisation de RESTful API"),"."),"\n",a.createElement(n.p,null,"‚ö° N'oubliez pas que vos m√©thodes de login et de register deviennent asynchrones, cela impose de bien cha√Æner les traitements dans le router, sinon vous risquez de renvoyer des objets vides en r√©ponses aux requ√™tes."),"\n",a.createElement(n.p,null,"Veuillez faire un ",a.createElement(n.strong,null,"commit"),' de votre code avec le message suivant :\r\n"',a.createElement(n.strong,null,"myMovies : module 7 : safe api"),'"".'),"\n",a.createElement(n.p,null,"NB : Le code de vos applications se trouve dans votre repository local et\r\nvotre web repository (normalement appel√© ",a.createElement(n.strong,null,"web2"),") dans le r√©pertoire nomm√©\r\n",a.createElement(n.strong,null,"/exercises/module7/7.2/api"),"."),"\n",a.createElement(n.h1,null,a.createElement("a",{id:"f"})," f) üç¨ Exercice 7.3 : Auto-refresh de myMovies"),"\n",a.createElement(n.p,null,"S'il vous reste du temps, il serait vraiment int√©ressant de faire en sorte que cycliquement, tous les 5 secondes par exemple, l'affichage de la liste de films se mette automatiquement √† jour."),"\n",a.createElement(n.p,null,"Ainsi, si d'autres utilisateurs ajoutent un film, vous les verrez directement appara√Ætre dans votre fen√™tre."),"\n",a.createElement(n.p,null,"‚ö° Attention que si le composant d'affichage des films est utilis√© pour permettre de directement mettre √† jour un film, celui-ci ne doit pas se r√©afficher si un utilisateur est en train de mettre √† jour un film."),"\n",a.createElement(n.h4,null,"ü§ù Tips"),"\n",a.createElement(n.p,null,"Pensez √† la fonction ",a.createElement(n.strong,null,a.createElement(n.code,null,"setInterval")),"."),"\n",a.createElement(n.p,null,"Vous pouvez faire un ",a.createElement(n.strong,null,"commit"),' de votre code avec le message suivant :\r\n"',a.createElement(n.strong,null,"myMovies : module 7 : auto-refresh"),'"".'),"\n",a.createElement(n.p,null,"NB : Le code de vos applications se trouverait dans votre repository local et\r\nvotre web repository (normalement appel√© ",a.createElement(n.strong,null,"web2"),") dans le r√©pertoire nomm√©\r\n",a.createElement(n.strong,null,"/exercises/module7/7.3/hmi"),"."),"\n",a.createElement(n.h1,null,a.createElement("a",{id:"g"})," g) üç¨ Exercice 7.4 : Gestion de la navigation lors de l'auto-refresh de myMovies"),"\n",a.createElement(n.p,null,"üí≠ Que peut-il se passer de d√©sagr√©able si un utilisateur passe rapidement de la page listant les informations d'un film vers la page d'ajout d'un film ?"),"\n",a.createElement(n.p,null,"Comme le render de tous les films et une action asynchrone, il est possible que celui-ci soit r√©alis√© apr√®s que l'utilisateur ait quitt√© la page d'affichage des films. Cela peut √™tre g√™nant, car si vous √™tes sur le composant pour ajouter un film, vous ne souhaitez pas que votre formulaire d'ajout d'un film soit remplac√©, de mani√®re erron√©e, par la liste des films !"),"\n",a.createElement(n.p,null,"Nous vous proposons d'impl√©menter ces deux fonctions :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"Stopper les futurs appels de ",a.createElement(n.strong,null,"fetch"),", les appels automatiques vers vos APIs (",a.createElement(n.strong,null,"setInterval")," et ",a.createElement(n.strong,null,"clearInterval"),") quand il y a un clic sur un lien ;"),"\n",a.createElement(n.li,null,"Stopper les appels de ",a.createElement(n.strong,null,"fetch")," en cours vers vos APIs quand il y a un clic sur un lien. En effet, si votre API doit renvoyer beaucoup de donn√©es, notamment quand il y a des images √† communiquer, il est possible que cela prenne plusieurs secondes avant que l'API vous r√©ponde."),"\n"),"\n",a.createElement(n.h4,null,"ü§ù Tips"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"Pensez aux fonctions ",a.createElement(n.strong,null,a.createElement(n.code,null,"setInterval"))," et ",a.createElement(n.strong,null,a.createElement(n.code,null,"clearInterval")),"."),"\n",a.createElement(n.li,null,"Pour stopper un fetch en cours, vous pouvez utiliser un ",a.createElement(n.strong,null,"AbortControlller"),". Toute l'info est disponible sur la ",a.createElement(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/AbortController"},"Documentation MDN"),"."),"\n"),"\n",a.createElement(n.p,null,"Vous pouvez faire un ",a.createElement(n.strong,null,"commit"),' de votre code avec le message suivant :\r\n"',a.createElement(n.strong,null,"myMovies : module 7 : auto-refresh improved"),'"".'),"\n",a.createElement(n.p,null,"NB : Le code de vos applications se trouverait dans votre repository local et\r\nvotre web repository (normalement appel√© ",a.createElement(n.strong,null,"web2"),") dans le r√©pertoire nomm√©\r\n",a.createElement(n.strong,null,"/exercises/module7/7.4/hmi"),"."))}var s=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?a.createElement(n,e,a.createElement(l,e)):l(e)};var i=t(4854),u=t(1263),o=t(5679),c=t(307),m=t(7410),d=t(9523),p=t(8075),E=t(9063),g=t(1631),f=t(6896),v=t(2770),h=t(7008),b=t(9771),z=t(1218),q=(t(5258),t(9394)),w=t(4579),y=t(9653),P=t(9256),j=t(6488),x=t(5175),A=t(158),I=t(6044);const S={Link:i.Link,Image:o.Z,Section:c.Z,Content:m.Z,Background:d.Z,SectionHeader:p.Z,SectionFooter:E.Z,PageHeader:g.Z,CodeBlock:v.Z,LinkFile:h.Z,ScrollableImage:b.Z,PublicProjectsView:z.Z,AuthenticatedBlock:q.Z,UnAuthenticatedBlock:w.Z,NestedMdxBlock:y.Z,YoutubeImage:P.Z,InternalPageMenu:j.Z,InternalPageMenuItem:x.Z,InternalPageTitle:A.Z,PathViewer:I.k,PathViewerItem:I.F};function k(e){var n,t,l,s,i;let{data:{mdx:o,allImages:c},children:m}=e;return S.PageHeader=(0,f.u)(g.Z,null==o?void 0:o.frontmatter),a.createElement(u.Z,Object.assign({},null!=o&&o.frontmatter?{frontmatter:o.frontmatter}:{},null!=o&&null!==(n=o.frontmatter)&&void 0!==n&&n.navbarExtraStyles?{navbarExtraStyles:o.frontmatter.navbarExtraStyles}:{},null!=o&&null!==(t=o.frontmatter)&&void 0!==t&&t.headerImage?{headerImage:o.frontmatter.headerImage}:{},null!=o&&null!==(l=o.frontmatter)&&void 0!==l&&l.featuredImage?{featuredImage:o.frontmatter.featuredImage}:{},null!=o&&null!==(s=o.frontmatter)&&void 0!==s&&s.title?{pageTitle:o.frontmatter.title}:{},c&&c.length>0?{allImages:c}:{}),a.createElement(r.Zo,{components:S},a.createElement("div",{className:null!=o&&null!==(i=o.frontmatter)&&void 0!==i&&i.autoMargin?"page page--auto-margin":"page"},m)))}function T(e){return a.createElement(k,e,a.createElement(s,e))}}}]);
//# sourceMappingURL=component---src-templates-mdx-pages-js-content-file-path-src-mdx-pages-modules-7-fr-mdx-8b1da1db1302332be20d.js.map