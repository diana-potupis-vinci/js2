{"version":3,"file":"e7581508581f1a663385d54dedd53d97dbbfdd37-71cb682ef7525dc5a583.js","mappings":"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","sources":["webpack://myjscourse/./node_modules/extend/index.js","webpack://myjscourse/./src/components/auth/authenticated-block.js","webpack://myjscourse/./src/components/auth/unauthenticated-block.js","webpack://myjscourse/./src/components/file/link-file.js","webpack://myjscourse/./src/components/image/scrollable-image.js","webpack://myjscourse/./src/components/internal-page-menu/internal-page-menu-item.js","webpack://myjscourse/./src/components/internal-page-menu/internal-page-menu.js","webpack://myjscourse/./node_modules/ramda/es/internal/_isPlaceholder.js","webpack://myjscourse/./node_modules/ramda/es/internal/_curry1.js","webpack://myjscourse/./node_modules/ramda/es/internal/_isArray.js","webpack://myjscourse/./node_modules/ramda/es/internal/_reduce.js","webpack://myjscourse/./node_modules/ramda/es/internal/_has.js","webpack://myjscourse/./node_modules/ramda/es/internal/_isArguments.js","webpack://myjscourse/./node_modules/ramda/es/keys.js","webpack://myjscourse/./node_modules/ramda/es/internal/_isInteger.js","webpack://myjscourse/./node_modules/ramda/es/internal/_objectIs.js","webpack://myjscourse/./node_modules/ramda/es/internal/_toISOString.js","webpack://myjscourse/./node_modules/ramda/es/internal/_objectAssign.js","webpack://myjscourse/./node_modules/ramda/es/internal/_xpromap.js","webpack://myjscourse/./node_modules/ramda/es/trim.js","webpack://myjscourse/./src/components/internal-page-menu/menu-title.js","webpack://myjscourse/./node_modules/unist-util-stringify-position/lib/index.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/vfile-message/lib/index.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/vfile/lib/minpath.browser.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/vfile/lib/minproc.browser.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/vfile/lib/minurl.shared.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/vfile/lib/minurl.browser.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/vfile/lib/index.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/bail/index.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/is-plain-obj/index.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/trough/index.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/unified/lib/index.js","webpack://myjscourse/./node_modules/mdast-util-to-string/lib/index.js","webpack://myjscourse/./node_modules/micromark-util-chunked/index.js","webpack://myjscourse/./node_modules/micromark-util-combine-extensions/index.js","webpack://myjscourse/./node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","webpack://myjscourse/./node_modules/micromark-util-character/index.js","webpack://myjscourse/./node_modules/micromark-factory-space/index.js","webpack://myjscourse/./node_modules/micromark/lib/initialize/content.js","webpack://myjscourse/./node_modules/micromark/lib/initialize/document.js","webpack://myjscourse/./node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://myjscourse/./node_modules/micromark-util-subtokenize/index.js","webpack://myjscourse/./node_modules/micromark-core-commonmark/lib/content.js","webpack://myjscourse/./node_modules/micromark/lib/initialize/flow.js","webpack://myjscourse/./node_modules/micromark/lib/initialize/text.js","webpack://myjscourse/./node_modules/micromark-util-resolve-all/index.js","webpack://myjscourse/./node_modules/micromark/lib/create-tokenizer.js","webpack://myjscourse/./node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://myjscourse/./node_modules/micromark-core-commonmark/lib/list.js","webpack://myjscourse/./node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://myjscourse/./node_modules/micromark-factory-destination/index.js","webpack://myjscourse/./node_modules/micromark-factory-label/index.js","webpack://myjscourse/./node_modules/micromark-factory-title/index.js","webpack://myjscourse/./node_modules/micromark-factory-whitespace/index.js","webpack://myjscourse/./node_modules/micromark-util-normalize-identifier/index.js","webpack://myjscourse/./node_modules/micromark-core-commonmark/lib/definition.js","webpack://myjscourse/./node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://myjscourse/./node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://myjscourse/./node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://myjscourse/./node_modules/micromark-util-html-tag-name/index.js","webpack://myjscourse/./node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://myjscourse/./node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://myjscourse/./node_modules/decode-named-character-reference/index.dom.js","webpack://myjscourse/./node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://myjscourse/./node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://myjscourse/./node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://myjscourse/./node_modules/micromark-core-commonmark/lib/label-end.js","webpack://myjscourse/./node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://myjscourse/./node_modules/micromark-util-classify-character/index.js","webpack://myjscourse/./node_modules/micromark-core-commonmark/lib/attention.js","webpack://myjscourse/./node_modules/micromark-core-commonmark/lib/autolink.js","webpack://myjscourse/./node_modules/micromark-core-commonmark/lib/html-text.js","webpack://myjscourse/./node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://myjscourse/./node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://myjscourse/./node_modules/micromark-core-commonmark/lib/code-text.js","webpack://myjscourse/./node_modules/micromark/lib/constructs.js","webpack://myjscourse/./node_modules/micromark/lib/preprocess.js","webpack://myjscourse/./node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://myjscourse/./node_modules/micromark-util-decode-string/index.js","webpack://myjscourse/./node_modules/mdast-util-from-markdown/lib/index.js","webpack://myjscourse/./node_modules/micromark/lib/postprocess.js","webpack://myjscourse/./node_modules/micromark/lib/parse.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/remark-parse/index.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/remark-parse/lib/index.js","webpack://myjscourse/./node_modules/micromark-util-sanitize-uri/index.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/unist-util-is/lib/index.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/unist-util-visit-parents/lib/index.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/unist-util-visit/lib/index.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/unist-util-position/lib/index.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-definitions/lib/index.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/revert.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://myjscourse/./node_modules/trim-lines/index.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/footnote.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table-row.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/state.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/unist-util-generated/lib/index.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/index.js","webpack://myjscourse/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/footer.js","webpack://myjscourse/./node_modules/remark-rehype/lib/index.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/property-information/lib/util/schema.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/property-information/lib/util/merge.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/property-information/lib/normalize.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/property-information/lib/util/info.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/property-information/lib/util/types.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/property-information/lib/util/defined-info.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/property-information/lib/util/create.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/property-information/lib/xlink.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/property-information/lib/xml.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/property-information/lib/xmlns.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/property-information/lib/aria.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/property-information/lib/html.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/property-information/lib/svg.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/property-information/index.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/unist-util-is/lib/index.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/unist-util-visit-parents/lib/index.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/unist-util-visit/lib/index.js","webpack://myjscourse/./node_modules/react-markdown/lib/rehype-filter.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/hast-util-whitespace/index.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/property-information/lib/find.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/property-information/lib/hast-to-react.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/style-to-object/index.mjs","webpack://myjscourse/./node_modules/react-markdown/lib/uri-transformer.js","webpack://myjscourse/./node_modules/react-markdown/lib/ast-to-react.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/comma-separated-tokens/index.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/space-separated-tokens/index.js","webpack://myjscourse/./node_modules/react-markdown/lib/react-markdown.js","webpack://myjscourse/./node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","webpack://myjscourse/./node_modules/micromark-extension-gfm-footnote/lib/syntax.js","webpack://myjscourse/./node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","webpack://myjscourse/./node_modules/micromark-extension-gfm-table/lib/syntax.js","webpack://myjscourse/./node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","webpack://myjscourse/./node_modules/mdast-util-gfm-autolink-literal/node_modules/ccount/index.js","webpack://myjscourse/./node_modules/mdast-util-find-and-replace/node_modules/unist-util-is/lib/index.js","webpack://myjscourse/./node_modules/mdast-util-find-and-replace/node_modules/unist-util-visit-parents/lib/index.js","webpack://myjscourse/./node_modules/mdast-util-find-and-replace/lib/index.js","webpack://myjscourse/./node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","webpack://myjscourse/./node_modules/mdast-util-gfm-autolink-literal/lib/index.js","webpack://myjscourse/./node_modules/mdast-util-to-markdown/lib/util/association.js","webpack://myjscourse/./node_modules/mdast-util-to-markdown/lib/util/container-flow.js","webpack://myjscourse/./node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","webpack://myjscourse/./node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","webpack://myjscourse/./node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","webpack://myjscourse/./node_modules/mdast-util-to-markdown/lib/util/safe.js","webpack://myjscourse/./node_modules/mdast-util-to-markdown/lib/util/track.js","webpack://myjscourse/./node_modules/mdast-util-gfm-footnote/lib/index.js","webpack://myjscourse/./node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","webpack://myjscourse/./node_modules/mdast-util-gfm-strikethrough/lib/index.js","webpack://myjscourse/./node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","webpack://myjscourse/./node_modules/markdown-table/index.js","webpack://myjscourse/./node_modules/mdast-util-gfm-table/lib/index.js","webpack://myjscourse/./node_modules/mdast-util-to-markdown/lib/handle/list-item.js","webpack://myjscourse/./node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","webpack://myjscourse/./node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","webpack://myjscourse/./node_modules/mdast-util-gfm-task-list-item/lib/index.js","webpack://myjscourse/./node_modules/remark-gfm/index.js","webpack://myjscourse/./node_modules/micromark-extension-gfm/index.js","webpack://myjscourse/./node_modules/mdast-util-gfm/lib/index.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/unist-util-position/lib/index.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/unist-util-is/lib/index.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/unist-util-visit-parents/lib/index.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/property-information/lib/util/schema.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/property-information/lib/util/merge.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/property-information/lib/normalize.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/property-information/lib/util/info.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/property-information/lib/util/types.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/property-information/lib/util/defined-info.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/property-information/lib/util/create.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/property-information/lib/xlink.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/property-information/lib/xml.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/property-information/lib/xmlns.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/property-information/lib/aria.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/property-information/lib/html.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/property-information/lib/svg.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/property-information/index.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/property-information/lib/find.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/hast-util-parse-selector/lib/index.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/space-separated-tokens/index.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/comma-separated-tokens/index.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/hastscript/lib/core.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/hastscript/lib/svg.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/hastscript/lib/html.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/web-namespaces/index.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/hast-util-from-parse5/lib/index.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/vfile-location/lib/index.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/zwitch/index.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/hast-util-to-parse5/lib/index.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/html-void-elements/index.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/hast-util-raw/lib/index.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/unist-util-visit/lib/index.js","webpack://myjscourse/./node_modules/rehype-raw/index.js","webpack://myjscourse/./src/components/mdx/nested-mdx-block.js","webpack://myjscourse/./src/components/page-header.js","webpack://myjscourse/./src/components/path-viewer/path-viewer.js","webpack://myjscourse/./src/components/public-projects/public-projects-view.js","webpack://myjscourse/./src/components/section-footer.js","webpack://myjscourse/./node_modules/inline-style-parser/index.js","webpack://myjscourse/./node_modules/is-buffer/index.js","webpack://myjscourse/./node_modules/lodash/_arrayReduce.js","webpack://myjscourse/./node_modules/lodash/_asciiWords.js","webpack://myjscourse/./node_modules/lodash/_basePropertyOf.js","webpack://myjscourse/./node_modules/lodash/_baseToString.js","webpack://myjscourse/./node_modules/lodash/_createCompounder.js","webpack://myjscourse/./node_modules/lodash/_deburrLetter.js","webpack://myjscourse/./node_modules/lodash/_hasUnicodeWord.js","webpack://myjscourse/./node_modules/lodash/_unicodeWords.js","webpack://myjscourse/./node_modules/lodash/deburr.js","webpack://myjscourse/./node_modules/lodash/isSymbol.js","webpack://myjscourse/./node_modules/lodash/snakeCase.js","webpack://myjscourse/./node_modules/lodash/toString.js","webpack://myjscourse/./node_modules/lodash/words.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/react-is/index.js","webpack://myjscourse/./node_modules/react-markdown/node_modules/style-to-object/index.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/parse5/lib/common/doctype.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/parse5/lib/common/error-codes.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/parse5/lib/common/foreign-content.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/parse5/lib/common/html.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/parse5/lib/common/unicode.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/parse5/lib/extensions/error-reporting/mixin-base.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/parse5/lib/extensions/error-reporting/parser-mixin.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/parse5/lib/extensions/error-reporting/preprocessor-mixin.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/parse5/lib/extensions/error-reporting/tokenizer-mixin.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/parse5/lib/extensions/location-info/open-element-stack-mixin.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/parse5/lib/extensions/location-info/parser-mixin.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/parse5/lib/extensions/location-info/tokenizer-mixin.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/parse5/lib/extensions/position-tracking/preprocessor-mixin.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/parse5/lib/parser/formatting-element-list.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/parse5/lib/parser/index.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/parse5/lib/parser/open-element-stack.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/parse5/lib/tokenizer/index.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/parse5/lib/tokenizer/named-entity-data.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/parse5/lib/tokenizer/preprocessor.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/parse5/lib/tree-adapters/default.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/parse5/lib/utils/merge-options.js","webpack://myjscourse/./node_modules/rehype-raw/node_modules/parse5/lib/utils/mixin.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","import React from \"react\";\r\nimport { AuthenticatedTemplate } from \"@azure/msal-react\";\r\n\r\nimport NestedMdxBlock from \"../mdx/nested-mdx-block\";\r\n\r\nconst AuthenticatedBlock = ({ children }) => {\r\n  if (!children) return null;\r\n\r\n  return (\r\n    <AuthenticatedTemplate>\r\n      <NestedMdxBlock children={children} />\r\n    </AuthenticatedTemplate>\r\n  );\r\n};\r\n\r\nexport default AuthenticatedBlock;\r\n","import React from \"react\";\r\nimport { UnauthenticatedTemplate } from \"@azure/msal-react\";\r\n\r\nimport NestedMdxBlock from \"../mdx/nested-mdx-block\";\r\n\r\nconst UnAuthenticatedBlock = ({ children }) => {\r\n  if (!children) return null;\r\n\r\n  return (\r\n    <UnauthenticatedTemplate>\r\n      <NestedMdxBlock children={children} />\r\n    </UnauthenticatedTemplate>\r\n  );\r\n};\r\n\r\nexport default UnAuthenticatedBlock;\r\n","import React from \"react\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\nimport { GatsbyImage, StaticImage } from \"gatsby-plugin-image\";\r\n\r\n/**\r\n * Based on a name of a file (WARNING : there cannot be duplicates), provide a link to this file\r\n *\r\n * It is also possible to provide as name the source of an external file that shall contain\r\n * http:// or https:// to get an external link.\r\n * @param {*} param0\r\n * @returns\r\n */\r\nconst LinkFile = ({ children, name, ...other }) => {\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      allFile {\r\n        edges {\r\n          node {\r\n            relativePath\r\n            publicURL\r\n            base\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  if (\r\n    (name && name.toLowerCase().includes(\"http://\")) ||\r\n    (name && name.toLowerCase().includes(\"https://\"))\r\n  )\r\n    return (\r\n      <a href={name} {...other}>\r\n        {children}\r\n      </a>\r\n    );\r\n\r\n  const requiredFile = data.allFile.edges.find(\r\n    (file) => file.node.base === name\r\n  );\r\n  if (!requiredFile) {\r\n    return (\r\n      <div>\r\n        <h3 style={{ color: \"red\" }}>The file {name} does not exist !</h3>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <a href={requiredFile.node.publicURL} {...other}>\r\n      {children}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default LinkFile;\r\n","import React from \"react\";\r\nimport Image from \"../image\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\n\r\nconst ScrollableImage = ({ children, name, alt, minWidth, maxWidth }) => {\r\n  let style = {};\r\n  if (minWidth) style.minWidth = minWidth;\r\n  if (maxWidth) style.maxWidth = maxWidth;\r\n  const isSVG = name.includes(\".svg\");\r\n  const isGif = name.includes(\".gif\");\r\n\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      allFile {\r\n        edges {\r\n          node {\r\n            relativePath\r\n            publicURL\r\n            base\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  if (isSVG || isGif) {\r\n    const requiredSvgOrGif = data.allFile.edges.find(\r\n      (file) => file.node.base === name\r\n    );\r\n    if (!requiredSvgOrGif) {\r\n      return (\r\n        <div>\r\n          <h3 style={{ color: \"red\" }}>The file {name} does not exist !</h3>\r\n          {children}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"scrollable-image\">\r\n        <div className=\"scrollable-image__wrapper\" style={style}>\r\n          <img\r\n            src={requiredSvgOrGif.node.publicURL}\r\n            alt={alt}\r\n            style={{ height: \"100%\", width: \"100%\", zIndex: 2 }}\r\n          >\r\n            {children}\r\n          </img>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"scrollable-image\">\r\n      <div className=\"scrollable-image__wrapper\" style={style}>\r\n        <Image {...{ name, alt }}>{children}</Image>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrollableImage;\r\n","import React, { useContext } from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { snakeCase } from 'lodash';\r\n\r\nimport { NavigationContext } from '../contexts/navigation-context';\r\n\r\n/**\r\n * Menu item for an internal page menu\r\n * startOfLeadingString : by default an empty String, these are special chars that we want to add\r\n * prior to each menu title : \"a.\" for example.\r\n * numbered : by default at false. If true, it leads to adding the numbering after the startOfLeadingString\r\n * numbering : value to be added after the startOfLeadingString if numbered is true.\r\n * endOfLeadingString : by default an empty String, these are special chars that we want to add\r\n * prior to each menu title : \")\" for example.\r\n * page : is the relative URL to the page that the menu item shall forward to.\r\n * @returns\r\n */\r\nconst InternalPageMenuItem = ({\r\n  children,\r\n  className,\r\n  id,\r\n  startOfLeadingString = '',\r\n  numbered = false,\r\n  numbering = '',\r\n  endOfLeadingString = '',\r\n  to,\r\n}) => {\r\n  const itemTextInSnakeCase = snakeCase(children);\r\n\r\n  const { activePageMenuItem, setActivePageMenuItem } =\r\n    useContext(NavigationContext);\r\n\r\n  const isMenuItemActive = activePageMenuItem === itemTextInSnakeCase;\r\n\r\n  return (\r\n    <Link to={to ? to : '#' + itemTextInSnakeCase} className={`${className} ${\r\n      isMenuItemActive ? className + '--selected' : ''\r\n    }`}\r\n    id={`item_${itemTextInSnakeCase}`}>\r\n      {`${startOfLeadingString}${\r\n        numbered ? numbering : ''\r\n      }${endOfLeadingString}${children}`}\r\n    </Link>\r\n  ); \r\n};\r\n\r\nexport default InternalPageMenuItem;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n/**\r\n * An internal page menu made up of InternalPageMenu item.\r\n * It does automatically render relative links based on the texte given in the value of\r\n * InternalPageMenuItem.\r\n * Here we clone the children elements to pass some extra datas from the parent element...\r\n * startOfLeadingString : by default an empty String, these are special chars that we want to add\r\n * prior to each menu title : \"a.\" for example.\r\n * numbered : by default at false. If true, it leads to adding the \"index + 1\" value of the InternalPageMenuItem\r\n * after the startOfLeadingString\r\n * endOfLeadingString : by default an empty String, these are special chars that we want to add\r\n * prior to each menu title : \")\" for example.\r\n * @param {*} param0\r\n * @returns\r\n */\r\nconst InternalPageMenu = ({\r\n  children,\r\n  startOfLeadingString = '',\r\n  endOfLeadingString = '',\r\n  numbered = false,\r\n  className = 'page-menu',\r\n}) => {\r\n\r\n  \r\n\r\n  return (\r\n    <div className={className}>\r\n      {React.Children.map(children, (child, index) =>\r\n        React.cloneElement(child, {\r\n          id: index,\r\n          startOfLeadingString,\r\n          numbered,\r\n          numbering: index + 1,\r\n          endOfLeadingString,      \r\n          className: className + \"__item\",\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InternalPageMenu;\r\n","export default function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","import _isArrayLike from \"./_isArrayLike.js\";\nimport _xwrap from \"./_xwrap.js\";\nimport bind from \"../bind.js\";\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx += 1;\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    step = iter.next();\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","import _has from \"./_has.js\";\nvar toString = Object.prototype.toString;\n\nvar _isArguments =\n/*#__PURE__*/\nfunction () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nexport default _isArguments;","import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\nimport _isArguments from \"./internal/_isArguments.js\"; // cover IE < 9 keys issues\n\nvar hasEnumBug = !\n/*#__PURE__*/\n{\n  toString: null\n}.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug\n\nvar hasArgsEnumBug =\n/*#__PURE__*/\nfunction () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n};\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values, R.toPairs\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\n\n\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ?\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) :\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n\n  var prop, nIdx;\n  var ks = [];\n\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n\n      nIdx -= 1;\n    }\n  }\n\n  return ks;\n});\nexport default keys;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nexport default typeof Object.is === 'function' ? Object.is : _objectIs;","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","import _has from \"./_has.js\"; // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n\n  while (idx < length) {\n    var source = arguments[idx];\n\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n\n    idx += 1;\n  }\n\n  return output;\n}\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _curry3 from \"./_curry3.js\";\nimport _xfBase from \"./_xfBase.js\";\nimport _promap from \"./_promap.js\";\n\nvar XPromap =\n/*#__PURE__*/\nfunction () {\n  function XPromap(f, g, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.g = g;\n  }\n\n  XPromap.prototype['@@transducer/init'] = _xfBase.init;\n  XPromap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XPromap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, _promap(this.f, this.g, input));\n  };\n\n  return XPromap;\n}();\n\nvar _xpromap =\n/*#__PURE__*/\n_curry3(function _xpromap(f, g, xf) {\n  return new XPromap(f, g, xf);\n});\n\nexport default _xpromap;","import _curry1 from \"./internal/_curry1.js\";\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\n\nvar trim = !hasProtoTrim ||\n/*#__PURE__*/\nws.trim() || !\n/*#__PURE__*/\nzeroWidth.trim() ?\n/*#__PURE__*/\n_curry1(function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n}) :\n/*#__PURE__*/\n_curry1(function trim(str) {\n  return str.trim();\n});\nexport default trim;","import React, { useEffect, useContext, useState, useRef } from 'react';\r\nimport { snakeCase } from 'lodash';\r\n\r\nimport { NavigationContext } from '../contexts/navigation-context';\r\nimport { is } from 'ramda';\r\nimport { SettingsInputSvideo } from '@material-ui/icons';\r\n\r\n/**\r\n * Title that should be linked to an InternalPageMenuItem. There should be an item\r\n * with the same value that is given to the InternalPageTitle. In this way, the anchor added to this\r\n * title will be linked to the InternalPageMenuItem link.\r\n * level : is the level for the title (1 is equivalent of h1). By default there is no level, therefore the\r\n * level is to be given in the MDX.\r\n * @returns\r\n */\r\nconst InternalPageTitle = ({ children, className, level }) => {\r\n  const [isInView, setIsInView] = useState(false);\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  const ref = useRef(null);\r\n\r\n  const internalPageMenuItemId = snakeCase(children);\r\n  const Tag = `h${level}`;\r\n\r\n  const {\r\n    activePageMenuItem,\r\n    setActivePageMenuItem,\r\n    activePageMenuItemIsVisible,\r\n    setActivePageMenuItemIsVisible,\r\n  } = useContext(NavigationContext);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting) {\r\n          setIsInView(true);\r\n        } else setIsInView(false);\r\n      },\r\n      {\r\n        threshold: 1,\r\n        rootMargin: '0px 0px 0px 0px',\r\n      }\r\n    );\r\n\r\n    observer.observe(ref.current);\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      if (isInView) {\r\n        if (!isVisible) {\r\n          // the item has just appeared above the half of viewport, it shall be shown\r\n          if (isElementAboveHalfViewport(ref.current)) {\r\n            setActivePageMenuItem(internalPageMenuItemId);\r\n            setIsVisible(true);\r\n          }\r\n        } else if (!isElementAboveHalfViewport(ref.current)) {\r\n          /* the user scroll up, there is an item\r\n          visible but it is below the half of viewport...\r\n          the active item should be the one above this element*/\r\n\r\n          const titles = Array.from(\r\n            document.querySelectorAll('.internal-page-title')\r\n          );\r\n          const previousVisibleItemIndex = titles.findIndex(\r\n            (element) => element.id === internalPageMenuItemId\r\n          );\r\n          if (previousVisibleItemIndex === -1 || previousVisibleItemIndex === 0) return;\r\n         \r\n          const currentVisibleItemId = titles[previousVisibleItemIndex - 1].id;\r\n          setActivePageMenuItem(currentVisibleItemId);\r\n        } else {\r\n          // the user scroll up until an item is above the half of the view port, show it\r\n          setActivePageMenuItem(internalPageMenuItemId);\r\n          setIsVisible(true);\r\n        }\r\n      } else {\r\n        setIsVisible(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, [isInView, isVisible]);\r\n\r\n  return level ? (\r\n    <Tag className={className}>\r\n      <a\r\n        id={internalPageMenuItemId}\r\n        className=\"internal-page-title\"\r\n        ref={ref}\r\n      />\r\n      {children}\r\n    </Tag>\r\n  ) : (\r\n    <span>\r\n      <a\r\n        id={internalPageMenuItemId}\r\n        className=\"internal-page-title\"\r\n        ref={ref}\r\n      />\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nfunction isElementAboveHalfViewport(element) {\r\n  const elementRect = element.getBoundingClientRect();\r\n  const viewportHeight =\r\n    window.innerHeight || document.documentElement.clientHeight;\r\n\r\n  return elementRect.top < viewportHeight / 2;\r\n}\r\n\r\nexport default InternalPageTitle;\r\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        // @ts-expect-error: micromark types need to accept `null`.\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    // @ts-expect-error Patched.\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template {import('react').ElementType} T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = index\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n}\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst protocolAutolink = {\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n\n/** @type {ConstructRecord} */\nconst text = {}\n\n// To do: next major: expose functions that yields extension.\n\n/**\n * Extension for `micromark` that can be passed in `extensions` to enable GFM\n * autolink literal syntax.\n *\n * @type {Extension}\n */\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, protocolAutolink]\ntext[104] = [emailAutolink, protocolAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean | undefined} */\n  let dot\n  /** @type {boolean} */\n  let data\n  return start\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n    if (code === 64) {\n      effects.consume(code)\n      return emailDomain\n    }\n    return nok(code)\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(\n        emailDomainDotTrail,\n        emailDomainAfter,\n        emailDomainDot\n      )(code)\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true\n      effects.consume(code)\n      return emailDomain\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code)\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code)\n    dot = true\n    return emailDomain\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return wwwStart\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww')\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(\n      wwwPrefix,\n      effects.attempt(domain, effects.attempt(path, wwwAfter), nok),\n      nok\n    )(code)\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this\n  let buffer = ''\n  let seen = false\n  return protocolStart\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if (\n      (code === 72 || code === 104) &&\n      previousProtocol.call(self, self.previous) &&\n      !previousUnbalanced(self.events)\n    ) {\n      effects.enter('literalAutolink')\n      effects.enter('literalAutolinkHttp')\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase()\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code)\n        return protocolSlashesInside\n      }\n    }\n    return nok(code)\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code)\n      if (seen) {\n        return afterProtocol\n      }\n      seen = true\n      return protocolSlashesInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null ||\n      asciiControl(code) ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code)\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0\n  return wwwPrefixInside\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++\n      effects.consume(code)\n      return wwwPrefixInside\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code)\n      return wwwPrefixAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment\n  /** @type {boolean | undefined} */\n  let seen\n  return domainInside\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code)\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return domainAfter(code)\n    }\n    seen = true\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment\n      underscoreInLastSegment = undefined\n    }\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code)\n    }\n    return ok(code)\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0\n  let sizeClose = 0\n  return pathInside\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++\n      effects.consume(code)\n      return pathInside\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code)\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 38 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 60 ||\n      code === 63 ||\n      code === 93 ||\n      code === 95 ||\n      code === 126\n    ) {\n      return effects.check(trail, ok, pathAtPunctuation)(code)\n    }\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    effects.consume(code)\n    return pathInside\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++\n    }\n    effects.consume(code)\n    return pathInside\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 63 ||\n      code === 95 ||\n      code === 126\n    ) {\n      effects.consume(code)\n      return trail\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code)\n      return trailCharRefStart\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code)\n      return trailBracketAfter\n    }\n    if (\n      // `<` is an end.\n      code === 60 ||\n      // So is whitespace.\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (\n      code === null ||\n      code === 40 ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return trail(code)\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharRefInside(code) : nok(code)\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code)\n      return trail\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return trailCharRefInside\n    }\n\n    // It’s not a trail.\n    return nok(code)\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code)\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 91 ||\n    code === 93 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code)\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code))\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n  while (index--) {\n    const token = events[index][1]\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    }\n\n    // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1]\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    }\n\n    // Exit if we’ve walked far enough.\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n  return start\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token | undefined} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker'\n\n  // The whole (without `!`):\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  // The `^` marker\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  }\n  // Increment the end 1 character.\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n\n  /** @type {Array<Event>} */\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context],\n    // The `[`\n    events[index + 3],\n    events[index + 4],\n    // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context],\n    // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context],\n    // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n  let data\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteCallString')\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code)\n      }\n      effects.enter('gfmFootnoteCallLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteCallLabelMarker')\n      effects.exit('gfmFootnoteCall')\n      return ok\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? callEscape : callData\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n    return callData(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n  let identifier\n  let size = 0\n  /** @type {boolean | undefined} */\n  let data\n  return start\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelAtMarker\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      effects.enter('chunkString').contentType = 'string'\n      return labelInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      if (!defined.includes(identifier)) {\n        defined.push(identifier)\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(\n        effects,\n        whitespaceAfter,\n        'gfmFootnoteDefinitionWhitespace'\n      )\n    }\n    return nok(code)\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde.\n *\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\n\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {}\n  let single = options_.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n  if (single === null || single === undefined) {\n    single = true\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open &&\n            // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            }\n\n            // Opening.\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ]\n            const insideSpan = context.parser.constructs.insideSpan.null\n            if (insideSpan) {\n              // Between.\n              splice(\n                nextEvents,\n                nextEvents.length,\n                0,\n                // @ts-expect-error: to do: update `mdast-util-types` to allow explicit `undefined`s.\n                resolveAll(insideSpan, events.slice(open + 1, index), context)\n              )\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n    return events\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous)\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  markdownSpace\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\n\n// To do: next major: expose function to make extension.\n\n/**\n * Extension for `micromark` that can be passed in `extensions`, to\n * enable GFM task list items syntax.\n *\n * @type {Extension}\n */\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null ||\n      // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n    return nok(code)\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code)\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )(code)\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, 'whitespace')\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {Extract<Node, MdastParent>} Parent\n * @typedef {Exclude<Parent, Root>} ContentParent\n *\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[Root, ...Array<ContentParent>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | undefined | null}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {string | RegExp} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n *   Several find and replaces, in object form.\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n * @typedef {string | ReplaceFunction} Replace\n *   Thing to replace with.\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore.\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param tree\n *   Tree to change.\n * @param find\n *   Patterns to find.\n * @param replace\n *   Things to replace with (when `find` is `Find`) or configuration.\n * @param options\n *   Configuration (when `find` is not `Find`).\n * @returns\n *   Given, modified, tree.\n */\n// To do: next major: remove `find` & `replace` combo, remove schema.\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   (<Tree extends Node>(tree: Tree, find: Find, replace?: Replace | null | undefined, options?: Options | null | undefined) => Tree) &\n   *   (<Tree extends Node>(tree: Tree, schema: FindAndReplaceSchema | FindAndReplaceList, options?: Options | null | undefined) => Tree)\n   * )}\n   **/\n  (\n    /**\n     * @template {Node} Tree\n     * @param {Tree} tree\n     * @param {Find | FindAndReplaceSchema | FindAndReplaceList} find\n     * @param {Replace | Options | null | undefined} [replace]\n     * @param {Options | null | undefined} [options]\n     * @returns {Tree}\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options | null | undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      // To do next major: don’t return the given tree.\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types.js').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent | undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = parents[index]\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error: TS doesn’t understand but it’s perfect.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * Handle a text node which is not in an ignored parent.\n       *\n       * @param {Text} node\n       *   Text node.\n       * @param {Array<Parent>} parents\n       *   Parents.\n       * @returns {VisitorResult}\n       *   Result.\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          const position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            // @ts-expect-error: stack is fine.\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          // It wasn’t a match after all.\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * Turn a schema into pairs.\n *\n * @param {FindAndReplaceSchema | FindAndReplaceList} schema\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n// To do: next major: expose functions instead of extensions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM autolink literals.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Link | Array<PhrasingContent> | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('../types.js').AssociationId} AssociationId\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * Get an identifier from an association to match it to others.\n *\n * Associations are nodes that match to something else through an ID:\n * <https://github.com/syntax-tree/mdast#association>.\n *\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another:\n * controversially, character escapes and references don’t work in this\n * matching: `&copy;` does not match `©`, and `\\+` does not match `+`.\n *\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character\n * escapes and all character references.\n *\n * @type {AssociationId}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('../types.js').FlowContent} FlowContent\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * @param {Parent & {children: Array<FlowContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nexport function containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  const tracker = state.createTracker(info)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(\n        tracker.move(between(child, children[index + 1], parent, state))\n      )\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n * @param {Node} left\n * @param {Node} right\n * @param {Parent} parent\n * @param {State} state\n * @returns {string}\n */\nfunction between(left, right, parent, state) {\n  let index = state.join.length\n\n  while (index--) {\n    const result = state.join[index](left, right, parent, state)\n\n    if (result === true || result === 1) {\n      break\n    }\n\n    if (typeof result === 'number') {\n      return '\\n'.repeat(1 + result)\n    }\n\n    if (result === false) {\n      return '\\n\\n<!---->\\n\\n'\n    }\n  }\n\n  return '\\n\\n'\n}\n","/**\n * @typedef {import('../types.js').IndentLines} IndentLines\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @type {IndentLines}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n * @typedef {import('../types.js').ConstructName} ConstructName\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').SafeConfig} SafeConfig\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * Make a string safe for embedding in markdown constructs.\n *\n * In markdown, almost all punctuation characters can, in certain cases,\n * result in something.\n * Whether they do is highly subjective to where they happen and in what\n * they happen.\n *\n * To solve this, `mdast-util-to-markdown` tracks:\n *\n * * Characters before and after something;\n * * What “constructs” we are in.\n *\n * This information is then used by this function to escape or encode\n * special characters.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {string | null | undefined} input\n *   Raw value to make safe.\n * @param {SafeConfig} config\n *   Configuration.\n * @returns {string}\n *   Serialized markdown safe for embedding.\n */\nexport function safe(state, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n\n    if (!patternInScope(state.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('../types.js').CreateTracker} CreateTracker\n * @typedef {import('../types.js').TrackCurrent} TrackCurrent\n * @typedef {import('../types.js').TrackMove} TrackMove\n * @typedef {import('../types.js').TrackShift} TrackShift\n */\n\n/**\n * Track positional info in the output.\n *\n * @type {CreateTracker}\n */\nexport function track(config) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = config || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @type {TrackCurrent}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @type {TrackShift}\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past some generated markdown.\n   *\n   * @type {TrackMove}\n   */\n  function move(input) {\n    // eslint-disable-next-line unicorn/prefer-default-parameters\n    const value = input || ''\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n// To do: next major: rename `context` -> `state`, `safeOptions` to `info`, use\n// utilities on `state`.\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteReference')\n  const subexit = context.enter('reference')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteDefinition')\n  const subexit = context.enter('label')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    indentLines(containerFlow(node, context, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').PhrasingContent} PhrasingContent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @param {Parent & {children: Array<PhrasingContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nexport function containerPhrasing(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = info.before\n\n  indexStack.push(-1)\n  let tracker = state.createTracker(info)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = state.handle.handlers[children[index + 1].type]\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, state, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = info.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = state.createTracker(info)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: expose functions.\n// To do: next major: use `state`, state utilities.\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [\n    {\n      character: '~',\n      inConstruct: 'phrasing',\n      notInConstruct: constructsWithoutStrikethrough\n    }\n  ],\n  handlers: {delete: handleDelete}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n *\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells.\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters.\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n// To do: next major: use `state` and `state` utilities from `mdast-util-to-markdown`.\n// To do: next major: use `defaultHandlers.inlineCode`.\n// To do: next major: expose functions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM tables.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  /** @type {Array<'left' | 'right' | 'center' | 'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parent | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\n/**\n * @typedef {Extract<Root | Content, Parent>} Parents\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: rename `context` -> `state`, `safeOptions` -> `info`, use\n// `track` from `state`.\n// To do: next major: replace exports with functions.\n// To do: next major: use `defaulthandlers.listItem`.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM task list items.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM task list items.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parents} */ (this.stack[this.stack.length - 2])\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name.\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector.\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: fine.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Content | Root} Node\n *   Any concrete `hast` node.\n * @typedef {Root | Element} HResult\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {string | number} HStyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, HStyleValue>} HStyle\n *   Supported value of a `style` prop.\n * @typedef {string | number | boolean | null | undefined} HPrimitiveValue\n *   Primitive property value.\n * @typedef {Array<string | number>} HArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {HPrimitiveValue | HArrayValue} HPropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: HPropertyValue | HStyle}} HProperties\n *   Acceptable value for element properties.\n *\n * @typedef {string | number | null | undefined} HPrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<Node | HPrimitiveChild>} HArrayChild\n *   List of children.\n * @typedef {Node | HPrimitiveChild | HArrayChild} HChild\n *   Acceptable child value.\n */\n\nimport {find, normalize} from 'property-information'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {parse as spaces} from 'space-separated-tokens'\nimport {parse as commas} from 'comma-separated-tokens'\n\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n * @param {string} defaultTagName\n * @param {Array<string>} [caseSensitive]\n */\nexport function core(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  const h =\n    /**\n     * @type {{\n     *   (): Root\n     *   (selector: null | undefined, ...children: Array<HChild>): Root\n     *   (selector: string, properties?: HProperties, ...children: Array<HChild>): Element\n     *   (selector: string, ...children: Array<HChild>): Element\n     * }}\n     */\n    (\n      /**\n       * Hyperscript compatible DSL for creating virtual hast trees.\n       *\n       * @param {string | null} [selector]\n       * @param {HProperties | HChild} [properties]\n       * @param {Array<HChild>} children\n       * @returns {HResult}\n       */\n      function (selector, properties, ...children) {\n        let index = -1\n        /** @type {HResult} */\n        let node\n\n        if (selector === undefined || selector === null) {\n          node = {type: 'root', children: []}\n          // @ts-expect-error Properties are not supported for roots.\n          children.unshift(properties)\n        } else {\n          node = parseSelector(selector, defaultTagName)\n          // Normalize the name.\n          node.tagName = node.tagName.toLowerCase()\n          if (adjust && own.call(adjust, node.tagName)) {\n            node.tagName = adjust[node.tagName]\n          }\n\n          // Handle props.\n          if (isProperties(properties, node.tagName)) {\n            /** @type {string} */\n            let key\n\n            for (key in properties) {\n              if (own.call(properties, key)) {\n                // @ts-expect-error `node.properties` is set.\n                addProperty(schema, node.properties, key, properties[key])\n              }\n            }\n          } else {\n            children.unshift(properties)\n          }\n        }\n\n        // Handle children.\n        while (++index < children.length) {\n          addChild(node.children, children[index])\n        }\n\n        if (node.type === 'element' && node.tagName === 'template') {\n          node.content = {type: 'root', children: node.children}\n          node.children = []\n        }\n\n        return node\n      }\n    )\n\n  return h\n}\n\n/**\n * @param {HProperties | HChild} value\n * @param {string} name\n * @returns {value is HProperties}\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n * @param {Properties} properties\n * @param {string} key\n * @param {HStyle | HPropertyValue} value\n * @returns {void}\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {HPropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<string | number>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // @ts-expect-error Assume no booleans in array.\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // @ts-expect-error Assume no booleans in `className`.\n    result = properties.className.concat(result)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<Content>} nodes\n * @param {HChild} value\n * @returns {void}\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n * @param {string} name\n * @param {HPrimitiveValue} value\n * @returns {HPrimitiveValue}\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {HStyle} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n */\n\nimport {svg} from 'property-information'\nimport {core} from './core.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\nexport const s = core(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n */\n\nimport {html} from 'property-information'\nimport {core} from './core.js'\n\nexport const h = core(html, 'div')\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in.\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes.\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements.\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {Schema} schema\n *   Current schema.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n * @property {boolean} location\n *   Whether location info was found.\n */\n\nimport {h, s} from 'hastscript'\nimport {html, svg, find} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | VFile | null | undefined} [options]\n *   Configuration.\n * @returns {Node}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const options_ = options || {}\n  /** @type {Options} */\n  let settings\n  /** @type {VFile | undefined} */\n  let file\n\n  if (isFile(options_)) {\n    file = options_\n    settings = {}\n  } else {\n    file = options_.file || undefined\n    settings = options_\n  }\n\n  return one(\n    {\n      schema: settings.space === 'svg' ? svg : html,\n      file,\n      verbose: settings.verbose,\n      location: false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Node}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Node} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // @ts-expect-error: always defined as we give valid input.\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      // @ts-expect-error Types are out of date.\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<Content>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<Content>} */\n  const result = []\n\n  while (++index < nodes.length) {\n    // @ts-expect-error Assume no roots in `nodes`.\n    result[index] = one(state, nodes[index])\n  }\n\n  return result\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    /** @type {Root} */\n    // @ts-expect-error Types are wrong.\n    const content = one(state, reference.content)\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Node} to\n *   hast node.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Node} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      node.data = {\n        position: {\n          // @ts-expect-error: assume not `undefined`.\n          opening: position(location.startTag),\n          closing: location.endTag ? position(location.endTag) : null,\n          properties: props\n        }\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n  // @ts-expect-error `undefined` is fine.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n\n/**\n * Check if something is a file.\n *\n * @param {VFile | Options} value\n *   File or options.\n * @returns {value is VFile}\n *   Whether `value` is a file.\n */\nfunction isFile(value) {\n  return 'messages' in value\n}\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').Value} Value\n */\n\n/**\n * @typedef Point\n *   unist point, where `line` and `column` can be `undefined`.\n * @property {number | undefined} line\n *   Line.\n * @property {number | undefined} column\n *   Column.\n * @property {number | undefined} [offset]\n *   Offset.\n *\n * @typedef PointLike\n *   unist point, allowed as input.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @callback ToPoint\n *   Get a line/column-based `point` from `offset`.\n * @param {number | null | undefined} [offset]\n *   Something that should be an `offset.\n * @returns {Point}\n *   Point, line/column are undefined for invalid or out of bounds input.\n *\n * @callback ToOffset\n *   Get an offset from a line/column-based `point`.\n * @param {Point | null | undefined} [point]\n *   Something that should be a `point.\n * @returns {number}\n *   Offset or `-1` for invalid or out of bounds input.\n *\n * @typedef Location\n *   Accessors for index.\n * @property {ToPoint} toPoint\n *   Get a line/column-based `point` from `offset`.\n * @property {ToOffset} toOffset\n *   Get an offset from a line/column-based `point`.\n */\n\n/**\n * Index the given document so you can translate between line/column and offset\n * based positional info.\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /** @type {Array<number>} */\n  const indices = []\n  const search = /\\r?\\n|\\r/g\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /** @type {ToPoint} */\n  function toPoint(offset) {\n    let index = -1\n\n    if (\n      typeof offset === 'number' &&\n      offset > -1 &&\n      offset < indices[indices.length - 1]\n    ) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n\n    return {line: undefined, column: undefined, offset: undefined}\n  }\n\n  /** @type {ToOffset} */\n  function toOffset(point) {\n    const line = point && point.line\n    const column = point && point.column\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      const offset = (indices[line - 2] || 0) + column - 1 || 0\n\n      if (offset > -1 && offset < indices[indices.length - 1]) {\n        return offset\n      }\n    }\n\n    return -1\n  }\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5Fragment\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['documentType']} P5Doctype\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['parentNode']} P5Parent\n * @typedef {import('parse5').Token.Attribute} P5Attribute\n * @typedef {Exclude<P5Node, P5Document | P5Fragment>} P5Child\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Content} Content\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {'html' | 'svg'} Space\n *\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in.\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {html, svg, find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nconst own = {}.hasOwnProperty\n\n/** @type {(from: Node, schema: Schema) => P5Node} */\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to Parse5’s AST.\n *\n * @param {Node} tree\n *   Tree to transform.\n * @param {Options | Space | null | undefined} [options]\n *   Configuration.\n * @returns {P5Node}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const space = options && typeof options === 'object' ? options.space : options\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n * @param {Schema} schema\n *   Current schema.\n * @returns {P5Document}\n */\nfunction root(node, schema) {\n  /** @type {P5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n * @param {Schema} schema\n *   Current schema.\n * @returns {P5Fragment}\n */\nfunction fragment(node, schema) {\n  /** @type {P5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n * @returns {P5Doctype}\n */\nfunction doctype(node) {\n  /** @type {P5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    // @ts-expect-error: change to `null` in a major?\n    parentNode: undefined\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n * @returns {P5Text}\n */\nfunction text(node) {\n  /** @type {P5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    // @ts-expect-error: no `parentNode`\n    parentNode: undefined\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n * @returns {P5Comment}\n */\nfunction comment(node) {\n  /** @type {P5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    // @ts-expect-error: no `parentNode`\n    parentNode: undefined\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n * @param {Schema} schema\n *   Current schema.\n * @returns {P5Element}\n *   `parse5` node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<P5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  /** @type {P5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: html and svg both have a space.\n    namespaceURI: webNamespaces[currentSchema.space],\n    childNodes: [],\n    // @ts-expect-error: no `parentNode`\n    parentNode: undefined\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<string | number> | string | number | boolean | null | undefined} value\n *   hast property value.\n * @returns {P5Attribute | void}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === undefined ||\n    value === null ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {P5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<Content>} children\n *   List of children.\n * @param {P5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<P5Child>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<P5Child>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {P5Child} */\n      // @ts-expect-error assume no document.\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Node} from\n *   hast node.\n * @param {P5Node} to\n *   `parse5` node.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      // @ts-expect-error assume this is set.\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      // @ts-expect-error assume this is set.\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'isindex',\n  'keygen',\n  'link',\n  'menuitem',\n  'meta',\n  'nextid',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('parse5').Document} P5Document\n * @typedef {import('parse5').DocumentFragment} P5Fragment\n * @typedef {Omit<import('parse5').Element, 'parentNode'>} P5Element\n * @typedef {import('parse5').Attribute} P5Attribute\n * @typedef {Omit<import('parse5').Location, 'startOffset' | 'endOffset'> & {startOffset: number|undefined, endOffset: number|undefined}} P5Location\n * @typedef {import('parse5').ParserOptions} P5ParserOptions\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {import('../complex-types').Raw} Raw\n *\n * @typedef {Omit<Comment, 'value'> & {value: {stitch: Node}}} Stitch\n *\n * @typedef Options\n * @property {Array<string>} [passThrough]\n *   List of custom hast node types to pass through (keep) in hast.\n *   If the passed through nodes have children, those children are expected to\n *   be hast and will be handled.\n *\n * @typedef HiddenTokenizer\n * @property {Array<HiddenLocationTracker>} __mixins\n *   Way too simple, but works for us.\n * @property {HiddenPreprocessor} preprocessor\n * @property {(value: string) => void} write\n * @property {() => number} _consume\n * @property {Array<HiddenToken>} tokenQueue\n * @property {string} state\n * @property {string} returnState\n * @property {number} charRefCode\n * @property {Array<number>} tempBuff\n * @property {Function} _flushCodePointsConsumedAsCharacterReference\n * @property {string} lastStartTagName\n * @property {number} consumedAfterSnapshot\n * @property {boolean} active\n * @property {HiddenToken|undefined} currentCharacterToken\n * @property {HiddenToken|undefined} currentToken\n * @property {unknown} currentAttr\n * @property {Function} NAMED_CHARACTER_REFERENCE_STATE\n * @property {Function} NUMERIC_CHARACTER_REFERENCE_END_STATE\n *\n * @typedef {Record<string, unknown> & {location: P5Location}} HiddenToken\n *\n * @typedef HiddenPreprocessor\n * @property {string|undefined} html\n * @property {number} pos\n * @property {number} lastGapPos\n * @property {number} lastCharPos\n * @property {Array<number>} gapStack\n * @property {boolean} skipNextNewLine\n * @property {boolean} lastChunkWritten\n * @property {boolean} endOfChunkHit\n *\n * @typedef HiddenLocationTracker\n * @property {P5Location|undefined} currentAttrLocation\n * @property {P5Location} ctLoc\n * @property {HiddenPosTracker} posTracker\n *\n * @typedef HiddenPosTracker\n * @property {boolean} isEol\n * @property {number} lineStartPos\n * @property {number} droppedBufferSize\n * @property {number} offset\n * @property {number} col\n * @property {number} line\n */\n\n// @ts-expect-error: untyped.\nimport Parser from 'parse5/lib/parser/index.js'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nconst inTemplateMode = 'IN_TEMPLATE_MODE'\nconst dataState = 'DATA_STATE'\nconst characterToken = 'CHARACTER_TOKEN'\nconst startTagToken = 'START_TAG_TOKEN'\nconst endTagToken = 'END_TAG_TOKEN'\nconst commentToken = 'COMMENT_TOKEN'\nconst doctypeToken = 'DOCTYPE_TOKEN'\n\n/** @type {P5ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Given a hast tree and an optional vfile (for positional info), return a new\n * parsed-again hast tree.\n *\n * @param tree\n *   Original hast tree.\n * @param file\n *   Virtual file for positional info, optional.\n * @param options\n *   Configuration.\n */\nexport const raw =\n  /**\n   * @type {(\n   *   ((tree: Node, file: VFile|undefined, options?: Options) => Node) &\n   *   ((tree: Node, options?: Options) => Node)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {VFile} [file]\n     * @param {Options} [options]\n     */\n    function (tree, file, options) {\n      let index = -1\n      const parser = new Parser(parseOptions)\n      const one = zwitch('type', {\n        handlers: {root, element, text, comment, doctype, raw: handleRaw},\n        // @ts-expect-error: hush.\n        unknown\n      })\n      /** @type {boolean|undefined} */\n      let stitches\n      /** @type {HiddenTokenizer|undefined} */\n      let tokenizer\n      /** @type {HiddenPreprocessor|undefined} */\n      let preprocessor\n      /** @type {HiddenPosTracker|undefined} */\n      let posTracker\n      /** @type {HiddenLocationTracker|undefined} */\n      let locationTracker\n\n      if (isOptions(file)) {\n        options = file\n        file = undefined\n      }\n\n      if (options && options.passThrough) {\n        while (++index < options.passThrough.length) {\n          // @ts-expect-error: hush.\n          one.handlers[options.passThrough[index]] = stitch\n        }\n      }\n\n      const result = fromParse5(\n        documentMode(tree) ? document() : fragment(),\n        file\n      )\n\n      if (stitches) {\n        visit(result, 'comment', (node, index, parent) => {\n          const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n          if (stitch.value.stitch && parent !== null && index !== null) {\n            // @ts-expect-error: assume the stitch is allowed.\n            parent.children[index] = stitch.value.stitch\n            return index\n          }\n        })\n      }\n\n      // Unpack if possible and when not given a `root`.\n      if (\n        tree.type !== 'root' &&\n        result.type === 'root' &&\n        result.children.length === 1\n      ) {\n        return result.children[0]\n      }\n\n      return result\n\n      /**\n       * @returns {P5Fragment}\n       */\n      function fragment() {\n        /** @type {P5Element} */\n        const context = {\n          nodeName: 'template',\n          tagName: 'template',\n          attrs: [],\n          namespaceURI: webNamespaces.html,\n          childNodes: []\n        }\n        /** @type {P5Element} */\n        const mock = {\n          nodeName: 'documentmock',\n          tagName: 'documentmock',\n          attrs: [],\n          namespaceURI: webNamespaces.html,\n          childNodes: []\n        }\n        /** @type {P5Fragment} */\n        const doc = {nodeName: '#document-fragment', childNodes: []}\n\n        parser._bootstrap(mock, context)\n        parser._pushTmplInsertionMode(inTemplateMode)\n        parser._initTokenizerForFragmentParsing()\n        parser._insertFakeRootElement()\n        parser._resetInsertionMode()\n        parser._findFormInFragmentContext()\n\n        tokenizer = parser.tokenizer\n        /* c8 ignore next */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        preprocessor = tokenizer.preprocessor\n        locationTracker = tokenizer.__mixins[0]\n        posTracker = locationTracker.posTracker\n\n        one(tree)\n\n        resetTokenizer()\n\n        parser._adoptNodes(mock.childNodes[0], doc)\n\n        return doc\n      }\n\n      /**\n       * @returns {P5Document}\n       */\n      function document() {\n        /** @type {P5Document} */\n        const doc = parser.treeAdapter.createDocument()\n\n        parser._bootstrap(doc, undefined)\n        tokenizer = parser.tokenizer\n        /* c8 ignore next */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        preprocessor = tokenizer.preprocessor\n        locationTracker = tokenizer.__mixins[0]\n        posTracker = locationTracker.posTracker\n\n        one(tree)\n\n        resetTokenizer()\n\n        return doc\n      }\n\n      /**\n       * @param {Array<Content>} nodes\n       * @returns {void}\n       */\n      function all(nodes) {\n        let index = -1\n\n        /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n        if (nodes) {\n          while (++index < nodes.length) {\n            one(nodes[index])\n          }\n        }\n      }\n\n      /**\n       * @param {Root} node\n       * @returns {void}\n       */\n      function root(node) {\n        all(node.children)\n      }\n\n      /**\n       * @param {Element} node\n       * @returns {void}\n       */\n      function element(node) {\n        resetTokenizer()\n        parser._processInputToken(startTag(node))\n\n        all(node.children)\n\n        if (!htmlVoidElements.includes(node.tagName)) {\n          resetTokenizer()\n          parser._processInputToken(endTag(node))\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @returns {void}\n       */\n      function text(node) {\n        resetTokenizer()\n        parser._processInputToken({\n          type: characterToken,\n          chars: node.value,\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Doctype} node\n       * @returns {void}\n       */\n      function doctype(node) {\n        resetTokenizer()\n        parser._processInputToken({\n          type: doctypeToken,\n          name: 'html',\n          forceQuirks: false,\n          publicId: '',\n          systemId: '',\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Comment|Stitch} node\n       * @returns {void}\n       */\n      function comment(node) {\n        resetTokenizer()\n        parser._processInputToken({\n          type: commentToken,\n          data: node.value,\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Raw} node\n       * @returns {void}\n       */\n      function handleRaw(node) {\n        const start = pointStart(node)\n        const line = start.line || 1\n        const column = start.column || 1\n        const offset = start.offset || 0\n\n        /* c8 ignore next 4 */\n        if (!preprocessor) throw new Error('Expected `preprocessor`')\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        if (!posTracker) throw new Error('Expected `posTracker`')\n        if (!locationTracker) throw new Error('Expected `locationTracker`')\n\n        // Reset preprocessor:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/tokenizer/preprocessor.js#L17>.\n        preprocessor.html = undefined\n        preprocessor.pos = -1\n        preprocessor.lastGapPos = -1\n        preprocessor.lastCharPos = -1\n        preprocessor.gapStack = []\n        preprocessor.skipNextNewLine = false\n        preprocessor.lastChunkWritten = false\n        preprocessor.endOfChunkHit = false\n\n        // Reset preprocessor mixin:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/position-tracking/preprocessor-mixin.js>.\n        posTracker.isEol = false\n        posTracker.lineStartPos = -column + 1 // Looks weird, but ensures we get correct positional info.\n        posTracker.droppedBufferSize = offset\n        posTracker.offset = 0\n        posTracker.col = 1\n        posTracker.line = line\n\n        // Reset location tracker:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js>.\n        locationTracker.currentAttrLocation = undefined\n        locationTracker.ctLoc = createParse5Location(node)\n\n        // See the code for `parse` and `parseFragment`:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/parser/index.js#L371>.\n        tokenizer.write(node.value)\n        parser._runParsingLoop(null)\n\n        // Character references hang, so if we ended there, we need to flush\n        // those too.\n        // We reset the preprocessor as if the document ends here.\n        // Then one single call to the relevant state does the trick, parse5\n        // consumes the whole token.\n        if (\n          tokenizer.state === 'NAMED_CHARACTER_REFERENCE_STATE' ||\n          tokenizer.state === 'NUMERIC_CHARACTER_REFERENCE_END_STATE'\n        ) {\n          preprocessor.lastChunkWritten = true\n          tokenizer[tokenizer.state](tokenizer._consume())\n        }\n      }\n\n      /**\n       * @param {Node} node\n       */\n      function stitch(node) {\n        stitches = true\n\n        /** @type {Node} */\n        let clone\n\n        // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n        // passed through node).\n        if ('children' in node) {\n          clone = {\n            ...node,\n            children: raw(\n              {type: 'root', children: node.children},\n              file,\n              options\n              // @ts-expect-error Assume a given parent yields a parent.\n            ).children\n          }\n        } else {\n          clone = {...node}\n        }\n\n        // Hack: `value` is supposed to be a string, but as none of the tools\n        // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n        // through.\n        comment({type: 'comment', value: {stitch: clone}})\n      }\n\n      function resetTokenizer() {\n        /* c8 ignore next 2 */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        if (!posTracker) throw new Error('Expected `posTracker`')\n\n        // Process final characters if they’re still there after hibernating.\n        // Similar to:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js#L95>.\n        const token = tokenizer.currentCharacterToken\n\n        if (token) {\n          token.location.endLine = posTracker.line\n          token.location.endCol = posTracker.col + 1\n          token.location.endOffset = posTracker.offset + 1\n          parser._processInputToken(token)\n        }\n\n        // Reset tokenizer:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/tokenizer/index.js#L218-L234>.\n        // Especially putting it back in the `data` state is useful: some elements,\n        // like textareas and iframes, change the state.\n        // See GH-7.\n        // But also if broken HTML is in `raw`, and then a correct element is given.\n        // See GH-11.\n        tokenizer.tokenQueue = []\n        tokenizer.state = dataState\n        tokenizer.returnState = ''\n        tokenizer.charRefCode = -1\n        tokenizer.tempBuff = []\n        tokenizer.lastStartTagName = ''\n        tokenizer.consumedAfterSnapshot = -1\n        tokenizer.active = false\n        tokenizer.currentCharacterToken = undefined\n        tokenizer.currentToken = undefined\n        tokenizer.currentAttr = undefined\n      }\n    }\n  )\n/**\n * @param {Element} node\n * @returns {HiddenToken}\n */\nfunction startTag(node) {\n  /** @type {P5Location} */\n  const location = Object.assign(createParse5Location(node))\n  // @ts-expect-error extra positional info.\n  location.startTag = Object.assign({}, location)\n\n  // Untyped token.\n  return {\n    type: startTagToken,\n    tagName: node.tagName,\n    selfClosing: false,\n    attrs: attributes(node),\n    location\n  }\n}\n\n/**\n * @param {Element} node\n * @returns {Array<P5Attribute>}\n */\nfunction attributes(node) {\n  return toParse5({\n    tagName: node.tagName,\n    type: 'element',\n    properties: node.properties,\n    children: []\n    // @ts-expect-error Assume element.\n  }).attrs\n}\n\n/**\n * @param {Element} node\n * @returns {HiddenToken}\n */\nfunction endTag(node) {\n  /** @type {P5Location} */\n  const location = Object.assign(createParse5Location(node))\n  // @ts-expect-error extra positional info.\n  location.startTag = Object.assign({}, location)\n\n  // Untyped token.\n  return {\n    type: endTagToken,\n    tagName: node.tagName,\n    attrs: [],\n    location\n  }\n}\n\n/**\n * @param {Node} node\n */\nfunction unknown(node) {\n  throw new Error('Cannot compile `' + node.type + '` node')\n}\n\n/**\n * @param {Node} node\n * @returns {boolean}\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName === 'html'))\n  )\n}\n\n/**\n * @param {Node|Stitch} node\n * @returns {P5Location}\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  return {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n}\n\n/**\n * @param {VFile|Options|undefined} value\n * @return {value is Options}\n */\nfunction isOptions(value) {\n  return Boolean(value && !('message' in value && 'messages' in value))\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} Options\n * @typedef {import('hast-util-raw')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Plugin to parse the tree again (and raw nodes).\n * Keeping positional info OK.  🙌\n *\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root>}\n */\nexport default function rehypeRaw(options = {}) {\n  return (tree, file) => {\n    // Assume that when a root was given, it’s also returned.\n    const result = /** @type {Root} */ (raw(tree, file, options))\n    return result\n  }\n}\n","import React from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport remarkGfm from \"remark-gfm\";\r\nimport rehypeRaw from \"rehype-raw\";\r\n\r\nconst NestedMdxBlock = ({ children }) => {\r\n  if (children === undefined) return null;\r\n\r\n  const childrenAsReactElements = convertAllChildrenToReactElement(children);\r\n\r\n  return childrenAsReactElements;\r\n};\r\n\r\nconst convertAllChildrenToReactElement = (children) => {\r\n  const childrenAsReactElements = [];\r\n\r\n  if (Array.isArray(children)) {\r\n    children.forEach((element) => {\r\n      const potentiallyConvertedReactElement =\r\n        getReactElementFromAnyChild(element);\r\n      childrenAsReactElements.push(potentiallyConvertedReactElement);\r\n    });\r\n  } else {\r\n    const potentiallyConvertedReactElement =\r\n      getReactElementFromAnyChild(children);\r\n    childrenAsReactElements.push(potentiallyConvertedReactElement);\r\n  }\r\n  return childrenAsReactElements;\r\n};\r\n\r\nconst getReactElementFromAnyChild = (child) => {\r\n  if (React.isValidElement(child)) {\r\n    return child;\r\n  } else {\r\n    const markdownStringConvertedToReactElement =\r\n      getReactElementFromMarkdownString(child);\r\n    return markdownStringConvertedToReactElement;\r\n  }\r\n};\r\n\r\nconst getReactElementFromMarkdownString = (markdownString) => {\r\n  return (\r\n    <ReactMarkdown\r\n      children={markdownString}\r\n      remarkPlugins={[remarkGfm]}\r\n      rehypePlugins={[rehypeRaw]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NestedMdxBlock;\r\n","import React from \"react\";\r\nconst PageHeader = ({ children, className, frontmatter }) => {\r\n  const classValue = `section__header ${className ? className : \"\"}`;\r\n  console.log(\"frontmatter:\", frontmatter);\r\n  return (\r\n    <div className={classValue}>\r\n      <h3>{frontmatter.title}</h3>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React, { useContext } from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { snakeCase } from 'lodash';\r\n\r\nimport { NavigationContext } from '../contexts/navigation-context';\r\n\r\nconst PathViewer = ({ className = 'path-viewer', children }) => {\r\n  return <div className={className}>{children}</div>;\r\n};\r\n\r\nconst PathViewerItem = ({\r\n  className = 'path-viewer__item',\r\n  children,\r\n  to,\r\n  selected,\r\n}) => {\r\n  const itemTextInSnakeCase = snakeCase(children);\r\n\r\n  let path;\r\n  if (selected) {\r\n    path = '#';\r\n  } else if (to) {\r\n    path = to;\r\n  } else {\r\n    path = '#' + itemTextInSnakeCase;\r\n  }\r\n\r\n  return (\r\n    <Link\r\n      to={path}\r\n      className={`${className} ${selected ? className + '--selected' : ''}`}\r\n      id={`item_${itemTextInSnakeCase}`}\r\n    >\r\n      {children}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport { PathViewer, PathViewerItem };\r\n","import React from \"react\";\r\nimport { Link, graphql, useStaticQuery } from \"gatsby\";\r\nimport YoutubeImage from \"../image/youtube-image.js\";\r\nimport he from \"he\";\r\n\r\nconst PublicProjectsView = ({ projectGroupName }) => {\r\n  console.log(\"groupName start\", projectGroupName);\r\n  const data = useStaticQuery(\r\n    graphql`\r\n      query allPublicProjects {\r\n        allPublicProjects {\r\n          edges {\r\n            node {\r\n              name\r\n              description\r\n              presentationUrl\r\n              frontendProductionUrl\r\n              frontendRepo\r\n              backendRepo\r\n              projectGroupName\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n\r\n  const { edges: projects } = data.allPublicProjects;\r\n\r\n  // filter the projects for the required year\r\n  const filteredProjects = projects.filter(\r\n    ({ node: project }) => project.projectGroupName === projectGroupName\r\n  );\r\n\r\n  console.log(\"groupName 2\", projectGroupName);\r\n  console.log(\"prior to filtering :\", projects);\r\n  console.log(\"filtered projects :\", filteredProjects);\r\n\r\n  return (\r\n    <div className=\"index\">\r\n      {filteredProjects.map(({ node: project }, index) => (\r\n        <div className=\"index__card\" key={index}>\r\n          <div className=\"index__card__header\">{he.decode(project.name)}</div>\r\n\r\n          <div className=\"index__card__content\">\r\n            {project.description !== undefined ? (\r\n              <>\r\n                <div className=\"index__card__content__title\">Description</div>\r\n                <div className=\"index__card__content__description\">\r\n                  {he.decode(project.description)}\r\n                </div>\r\n              </>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"index__card__content\">\r\n            {project.presentationUrl !== undefined ? (\r\n              <>\r\n                <div className=\"index__card__content__title\">\r\n                  Vidéo de présentation\r\n                </div>\r\n                <div className=\"index__card__content__description\">\r\n                  <YoutubeImage src={project.presentationUrl} />\r\n                </div>\r\n              </>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"index__card__content\">\r\n            {project.frontendProductionUrl !== undefined ? (\r\n              <>\r\n                <div className=\"index__card__content__title\">URL du site</div>\r\n                <div className=\"index__card__content__description\">\r\n                  <a href={project.frontendProductionUrl} target=\"_blank\">\r\n                    {project.frontendProductionUrl}\r\n                  </a>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"index__card__content\">\r\n            {project.frontendRepo !== undefined ? (\r\n              <>\r\n                <div className=\"index__card__content__title\">Repo frontend</div>\r\n                <div className=\"index__card__content__description\">\r\n                  <a href={project.frontendRepo} target=\"_blank\">\r\n                    {project.frontendRepo}\r\n                  </a>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"index__card__content\">\r\n            {project.backendRepo !== undefined ? (\r\n              <>\r\n                <div className=\"index__card__content__title\">Repo backend</div>\r\n                <div className=\"index__card__content__description\">\r\n                  <a href={project.backendRepo} target=\"_blank\">\r\n                    {project.backendRepo}\r\n                  </a>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PublicProjectsView;\r\n","import React from \"react\";\r\nconst SectionFooter = ({ children, className}) => {\r\n    const classValue = `section__footer ${className ? className : \"\"}`;\r\n\r\n    return <div className={classValue}>{children}</div>;\r\n};\r\nexport default SectionFooter;\r\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n","var basePropertyOf = require('./_basePropertyOf');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 's'\n};\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\nmodule.exports = deburrLetter;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n","var deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the snake cased string.\n * @example\n *\n * _.snakeCase('Foo Bar');\n * // => 'foo_bar'\n *\n * _.snakeCase('fooBar');\n * // => 'foo_bar'\n *\n * _.snakeCase('--FOO-BAR--');\n * // => 'foo_bar'\n */\nvar snakeCase = createCompounder(function(result, word, index) {\n  return result + (index ? '_' : '') + word.toLowerCase();\n});\n\nmodule.exports = snakeCase;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","'use strict';\n\nconst { DOCUMENT_MODE } = require('./html');\n\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\n\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//'\n];\n\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = QUIRKS_MODE_PUBLIC_ID_PREFIXES.concat([\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//'\n]);\n\nconst QUIRKS_MODE_PUBLIC_IDS = ['-//w3o//dtd w3 html strict 3.0//en//', '-/w3c/dtd html 4.0 transitional/en', 'html'];\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\n\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = LIMITED_QUIRKS_PUBLIC_ID_PREFIXES.concat([\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//'\n]);\n\n//Utils\nfunction enquoteDoctypeId(id) {\n    const quote = id.indexOf('\"') !== -1 ? \"'\" : '\"';\n\n    return quote + id + quote;\n}\n\nfunction hasPrefix(publicId, prefixes) {\n    for (let i = 0; i < prefixes.length; i++) {\n        if (publicId.indexOf(prefixes[i]) === 0) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n//API\nexports.isConforming = function(token) {\n    return (\n        token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID)\n    );\n};\n\nexports.getDocumentMode = function(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n\n    const systemId = token.systemId;\n\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n\n    let publicId = token.publicId;\n\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n\n        if (QUIRKS_MODE_PUBLIC_IDS.indexOf(publicId) > -1) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n\n    return DOCUMENT_MODE.NO_QUIRKS;\n};\n\nexports.serializeContent = function(name, publicId, systemId) {\n    let str = '!DOCTYPE ';\n\n    if (name) {\n        str += name;\n    }\n\n    if (publicId) {\n        str += ' PUBLIC ' + enquoteDoctypeId(publicId);\n    } else if (systemId) {\n        str += ' SYSTEM';\n    }\n\n    if (systemId !== null) {\n        str += ' ' + enquoteDoctypeId(systemId);\n    }\n\n    return str;\n};\n","'use strict';\n\nmodule.exports = {\n    controlCharacterInInputStream: 'control-character-in-input-stream',\n    noncharacterInInputStream: 'noncharacter-in-input-stream',\n    surrogateInInputStream: 'surrogate-in-input-stream',\n    nonVoidHtmlElementStartTagWithTrailingSolidus: 'non-void-html-element-start-tag-with-trailing-solidus',\n    endTagWithAttributes: 'end-tag-with-attributes',\n    endTagWithTrailingSolidus: 'end-tag-with-trailing-solidus',\n    unexpectedSolidusInTag: 'unexpected-solidus-in-tag',\n    unexpectedNullCharacter: 'unexpected-null-character',\n    unexpectedQuestionMarkInsteadOfTagName: 'unexpected-question-mark-instead-of-tag-name',\n    invalidFirstCharacterOfTagName: 'invalid-first-character-of-tag-name',\n    unexpectedEqualsSignBeforeAttributeName: 'unexpected-equals-sign-before-attribute-name',\n    missingEndTagName: 'missing-end-tag-name',\n    unexpectedCharacterInAttributeName: 'unexpected-character-in-attribute-name',\n    unknownNamedCharacterReference: 'unknown-named-character-reference',\n    missingSemicolonAfterCharacterReference: 'missing-semicolon-after-character-reference',\n    unexpectedCharacterAfterDoctypeSystemIdentifier: 'unexpected-character-after-doctype-system-identifier',\n    unexpectedCharacterInUnquotedAttributeValue: 'unexpected-character-in-unquoted-attribute-value',\n    eofBeforeTagName: 'eof-before-tag-name',\n    eofInTag: 'eof-in-tag',\n    missingAttributeValue: 'missing-attribute-value',\n    missingWhitespaceBetweenAttributes: 'missing-whitespace-between-attributes',\n    missingWhitespaceAfterDoctypePublicKeyword: 'missing-whitespace-after-doctype-public-keyword',\n    missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers:\n        'missing-whitespace-between-doctype-public-and-system-identifiers',\n    missingWhitespaceAfterDoctypeSystemKeyword: 'missing-whitespace-after-doctype-system-keyword',\n    missingQuoteBeforeDoctypePublicIdentifier: 'missing-quote-before-doctype-public-identifier',\n    missingQuoteBeforeDoctypeSystemIdentifier: 'missing-quote-before-doctype-system-identifier',\n    missingDoctypePublicIdentifier: 'missing-doctype-public-identifier',\n    missingDoctypeSystemIdentifier: 'missing-doctype-system-identifier',\n    abruptDoctypePublicIdentifier: 'abrupt-doctype-public-identifier',\n    abruptDoctypeSystemIdentifier: 'abrupt-doctype-system-identifier',\n    cdataInHtmlContent: 'cdata-in-html-content',\n    incorrectlyOpenedComment: 'incorrectly-opened-comment',\n    eofInScriptHtmlCommentLikeText: 'eof-in-script-html-comment-like-text',\n    eofInDoctype: 'eof-in-doctype',\n    nestedComment: 'nested-comment',\n    abruptClosingOfEmptyComment: 'abrupt-closing-of-empty-comment',\n    eofInComment: 'eof-in-comment',\n    incorrectlyClosedComment: 'incorrectly-closed-comment',\n    eofInCdata: 'eof-in-cdata',\n    absenceOfDigitsInNumericCharacterReference: 'absence-of-digits-in-numeric-character-reference',\n    nullCharacterReference: 'null-character-reference',\n    surrogateCharacterReference: 'surrogate-character-reference',\n    characterReferenceOutsideUnicodeRange: 'character-reference-outside-unicode-range',\n    controlCharacterReference: 'control-character-reference',\n    noncharacterCharacterReference: 'noncharacter-character-reference',\n    missingWhitespaceBeforeDoctypeName: 'missing-whitespace-before-doctype-name',\n    missingDoctypeName: 'missing-doctype-name',\n    invalidCharacterSequenceAfterDoctypeName: 'invalid-character-sequence-after-doctype-name',\n    duplicateAttribute: 'duplicate-attribute',\n    nonConformingDoctype: 'non-conforming-doctype',\n    missingDoctype: 'missing-doctype',\n    misplacedDoctype: 'misplaced-doctype',\n    endTagWithoutMatchingOpenElement: 'end-tag-without-matching-open-element',\n    closingOfElementWithOpenChildElements: 'closing-of-element-with-open-child-elements',\n    disallowedContentInNoscriptInHead: 'disallowed-content-in-noscript-in-head',\n    openElementsLeftAfterEof: 'open-elements-left-after-eof',\n    abandonedHeadElementChild: 'abandoned-head-element-child',\n    misplacedStartTagForHeadElement: 'misplaced-start-tag-for-head-element',\n    nestedNoscriptInHead: 'nested-noscript-in-head',\n    eofInElementThatCanContainOnlyText: 'eof-in-element-that-can-contain-only-text'\n};\n","'use strict';\n\nconst Tokenizer = require('../tokenizer');\nconst HTML = require('./html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES;\nconst ATTRS = HTML.ATTRS;\n\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml'\n};\n\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = {\n    attributename: 'attributeName',\n    attributetype: 'attributeType',\n    basefrequency: 'baseFrequency',\n    baseprofile: 'baseProfile',\n    calcmode: 'calcMode',\n    clippathunits: 'clipPathUnits',\n    diffuseconstant: 'diffuseConstant',\n    edgemode: 'edgeMode',\n    filterunits: 'filterUnits',\n    glyphref: 'glyphRef',\n    gradienttransform: 'gradientTransform',\n    gradientunits: 'gradientUnits',\n    kernelmatrix: 'kernelMatrix',\n    kernelunitlength: 'kernelUnitLength',\n    keypoints: 'keyPoints',\n    keysplines: 'keySplines',\n    keytimes: 'keyTimes',\n    lengthadjust: 'lengthAdjust',\n    limitingconeangle: 'limitingConeAngle',\n    markerheight: 'markerHeight',\n    markerunits: 'markerUnits',\n    markerwidth: 'markerWidth',\n    maskcontentunits: 'maskContentUnits',\n    maskunits: 'maskUnits',\n    numoctaves: 'numOctaves',\n    pathlength: 'pathLength',\n    patterncontentunits: 'patternContentUnits',\n    patterntransform: 'patternTransform',\n    patternunits: 'patternUnits',\n    pointsatx: 'pointsAtX',\n    pointsaty: 'pointsAtY',\n    pointsatz: 'pointsAtZ',\n    preservealpha: 'preserveAlpha',\n    preserveaspectratio: 'preserveAspectRatio',\n    primitiveunits: 'primitiveUnits',\n    refx: 'refX',\n    refy: 'refY',\n    repeatcount: 'repeatCount',\n    repeatdur: 'repeatDur',\n    requiredextensions: 'requiredExtensions',\n    requiredfeatures: 'requiredFeatures',\n    specularconstant: 'specularConstant',\n    specularexponent: 'specularExponent',\n    spreadmethod: 'spreadMethod',\n    startoffset: 'startOffset',\n    stddeviation: 'stdDeviation',\n    stitchtiles: 'stitchTiles',\n    surfacescale: 'surfaceScale',\n    systemlanguage: 'systemLanguage',\n    tablevalues: 'tableValues',\n    targetx: 'targetX',\n    targety: 'targetY',\n    textlength: 'textLength',\n    viewbox: 'viewBox',\n    viewtarget: 'viewTarget',\n    xchannelselector: 'xChannelSelector',\n    ychannelselector: 'yChannelSelector',\n    zoomandpan: 'zoomAndPan'\n};\n\nconst XML_ATTRS_ADJUSTMENT_MAP = {\n    'xlink:actuate': { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK },\n    'xlink:arcrole': { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK },\n    'xlink:href': { prefix: 'xlink', name: 'href', namespace: NS.XLINK },\n    'xlink:role': { prefix: 'xlink', name: 'role', namespace: NS.XLINK },\n    'xlink:show': { prefix: 'xlink', name: 'show', namespace: NS.XLINK },\n    'xlink:title': { prefix: 'xlink', name: 'title', namespace: NS.XLINK },\n    'xlink:type': { prefix: 'xlink', name: 'type', namespace: NS.XLINK },\n    'xml:base': { prefix: 'xml', name: 'base', namespace: NS.XML },\n    'xml:lang': { prefix: 'xml', name: 'lang', namespace: NS.XML },\n    'xml:space': { prefix: 'xml', name: 'space', namespace: NS.XML },\n    xmlns: { prefix: '', name: 'xmlns', namespace: NS.XMLNS },\n    'xmlns:xlink': { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }\n};\n\n//SVG tag names adjustment map\nconst SVG_TAG_NAMES_ADJUSTMENT_MAP = (exports.SVG_TAG_NAMES_ADJUSTMENT_MAP = {\n    altglyph: 'altGlyph',\n    altglyphdef: 'altGlyphDef',\n    altglyphitem: 'altGlyphItem',\n    animatecolor: 'animateColor',\n    animatemotion: 'animateMotion',\n    animatetransform: 'animateTransform',\n    clippath: 'clipPath',\n    feblend: 'feBlend',\n    fecolormatrix: 'feColorMatrix',\n    fecomponenttransfer: 'feComponentTransfer',\n    fecomposite: 'feComposite',\n    feconvolvematrix: 'feConvolveMatrix',\n    fediffuselighting: 'feDiffuseLighting',\n    fedisplacementmap: 'feDisplacementMap',\n    fedistantlight: 'feDistantLight',\n    feflood: 'feFlood',\n    fefunca: 'feFuncA',\n    fefuncb: 'feFuncB',\n    fefuncg: 'feFuncG',\n    fefuncr: 'feFuncR',\n    fegaussianblur: 'feGaussianBlur',\n    feimage: 'feImage',\n    femerge: 'feMerge',\n    femergenode: 'feMergeNode',\n    femorphology: 'feMorphology',\n    feoffset: 'feOffset',\n    fepointlight: 'fePointLight',\n    fespecularlighting: 'feSpecularLighting',\n    fespotlight: 'feSpotLight',\n    fetile: 'feTile',\n    feturbulence: 'feTurbulence',\n    foreignobject: 'foreignObject',\n    glyphref: 'glyphRef',\n    lineargradient: 'linearGradient',\n    radialgradient: 'radialGradient',\n    textpath: 'textPath'\n});\n\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = {\n    [$.B]: true,\n    [$.BIG]: true,\n    [$.BLOCKQUOTE]: true,\n    [$.BODY]: true,\n    [$.BR]: true,\n    [$.CENTER]: true,\n    [$.CODE]: true,\n    [$.DD]: true,\n    [$.DIV]: true,\n    [$.DL]: true,\n    [$.DT]: true,\n    [$.EM]: true,\n    [$.EMBED]: true,\n    [$.H1]: true,\n    [$.H2]: true,\n    [$.H3]: true,\n    [$.H4]: true,\n    [$.H5]: true,\n    [$.H6]: true,\n    [$.HEAD]: true,\n    [$.HR]: true,\n    [$.I]: true,\n    [$.IMG]: true,\n    [$.LI]: true,\n    [$.LISTING]: true,\n    [$.MENU]: true,\n    [$.META]: true,\n    [$.NOBR]: true,\n    [$.OL]: true,\n    [$.P]: true,\n    [$.PRE]: true,\n    [$.RUBY]: true,\n    [$.S]: true,\n    [$.SMALL]: true,\n    [$.SPAN]: true,\n    [$.STRONG]: true,\n    [$.STRIKE]: true,\n    [$.SUB]: true,\n    [$.SUP]: true,\n    [$.TABLE]: true,\n    [$.TT]: true,\n    [$.U]: true,\n    [$.UL]: true,\n    [$.VAR]: true\n};\n\n//Check exit from foreign content\nexports.causesExit = function(startTagToken) {\n    const tn = startTagToken.tagName;\n    const isFontWithAttrs =\n        tn === $.FONT &&\n        (Tokenizer.getTokenAttr(startTagToken, ATTRS.COLOR) !== null ||\n            Tokenizer.getTokenAttr(startTagToken, ATTRS.SIZE) !== null ||\n            Tokenizer.getTokenAttr(startTagToken, ATTRS.FACE) !== null);\n\n    return isFontWithAttrs ? true : EXITS_FOREIGN_CONTENT[tn];\n};\n\n//Token adjustments\nexports.adjustTokenMathMLAttrs = function(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n};\n\nexports.adjustTokenSVGAttrs = function(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];\n\n        if (adjustedAttrName) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n};\n\nexports.adjustTokenXMLAttrs = function(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];\n\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n};\n\nexports.adjustTokenSVGTagName = function(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP[token.tagName];\n\n    if (adjustedTagName) {\n        token.tagName = adjustedTagName;\n    }\n};\n\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\n\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\n\nexports.isIntegrationPoint = function(tn, ns, attrs, foreignNS) {\n    if ((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) {\n        return true;\n    }\n\n    if ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)) {\n        return true;\n    }\n\n    return false;\n};\n","'use strict';\n\nconst NS = (exports.NAMESPACES = {\n    HTML: 'http://www.w3.org/1999/xhtml',\n    MATHML: 'http://www.w3.org/1998/Math/MathML',\n    SVG: 'http://www.w3.org/2000/svg',\n    XLINK: 'http://www.w3.org/1999/xlink',\n    XML: 'http://www.w3.org/XML/1998/namespace',\n    XMLNS: 'http://www.w3.org/2000/xmlns/'\n});\n\nexports.ATTRS = {\n    TYPE: 'type',\n    ACTION: 'action',\n    ENCODING: 'encoding',\n    PROMPT: 'prompt',\n    NAME: 'name',\n    COLOR: 'color',\n    FACE: 'face',\n    SIZE: 'size'\n};\n\nexports.DOCUMENT_MODE = {\n    NO_QUIRKS: 'no-quirks',\n    QUIRKS: 'quirks',\n    LIMITED_QUIRKS: 'limited-quirks'\n};\n\nconst $ = (exports.TAG_NAMES = {\n    A: 'a',\n    ADDRESS: 'address',\n    ANNOTATION_XML: 'annotation-xml',\n    APPLET: 'applet',\n    AREA: 'area',\n    ARTICLE: 'article',\n    ASIDE: 'aside',\n\n    B: 'b',\n    BASE: 'base',\n    BASEFONT: 'basefont',\n    BGSOUND: 'bgsound',\n    BIG: 'big',\n    BLOCKQUOTE: 'blockquote',\n    BODY: 'body',\n    BR: 'br',\n    BUTTON: 'button',\n\n    CAPTION: 'caption',\n    CENTER: 'center',\n    CODE: 'code',\n    COL: 'col',\n    COLGROUP: 'colgroup',\n\n    DD: 'dd',\n    DESC: 'desc',\n    DETAILS: 'details',\n    DIALOG: 'dialog',\n    DIR: 'dir',\n    DIV: 'div',\n    DL: 'dl',\n    DT: 'dt',\n\n    EM: 'em',\n    EMBED: 'embed',\n\n    FIELDSET: 'fieldset',\n    FIGCAPTION: 'figcaption',\n    FIGURE: 'figure',\n    FONT: 'font',\n    FOOTER: 'footer',\n    FOREIGN_OBJECT: 'foreignObject',\n    FORM: 'form',\n    FRAME: 'frame',\n    FRAMESET: 'frameset',\n\n    H1: 'h1',\n    H2: 'h2',\n    H3: 'h3',\n    H4: 'h4',\n    H5: 'h5',\n    H6: 'h6',\n    HEAD: 'head',\n    HEADER: 'header',\n    HGROUP: 'hgroup',\n    HR: 'hr',\n    HTML: 'html',\n\n    I: 'i',\n    IMG: 'img',\n    IMAGE: 'image',\n    INPUT: 'input',\n    IFRAME: 'iframe',\n\n    KEYGEN: 'keygen',\n\n    LABEL: 'label',\n    LI: 'li',\n    LINK: 'link',\n    LISTING: 'listing',\n\n    MAIN: 'main',\n    MALIGNMARK: 'malignmark',\n    MARQUEE: 'marquee',\n    MATH: 'math',\n    MENU: 'menu',\n    META: 'meta',\n    MGLYPH: 'mglyph',\n    MI: 'mi',\n    MO: 'mo',\n    MN: 'mn',\n    MS: 'ms',\n    MTEXT: 'mtext',\n\n    NAV: 'nav',\n    NOBR: 'nobr',\n    NOFRAMES: 'noframes',\n    NOEMBED: 'noembed',\n    NOSCRIPT: 'noscript',\n\n    OBJECT: 'object',\n    OL: 'ol',\n    OPTGROUP: 'optgroup',\n    OPTION: 'option',\n\n    P: 'p',\n    PARAM: 'param',\n    PLAINTEXT: 'plaintext',\n    PRE: 'pre',\n\n    RB: 'rb',\n    RP: 'rp',\n    RT: 'rt',\n    RTC: 'rtc',\n    RUBY: 'ruby',\n\n    S: 's',\n    SCRIPT: 'script',\n    SECTION: 'section',\n    SELECT: 'select',\n    SOURCE: 'source',\n    SMALL: 'small',\n    SPAN: 'span',\n    STRIKE: 'strike',\n    STRONG: 'strong',\n    STYLE: 'style',\n    SUB: 'sub',\n    SUMMARY: 'summary',\n    SUP: 'sup',\n\n    TABLE: 'table',\n    TBODY: 'tbody',\n    TEMPLATE: 'template',\n    TEXTAREA: 'textarea',\n    TFOOT: 'tfoot',\n    TD: 'td',\n    TH: 'th',\n    THEAD: 'thead',\n    TITLE: 'title',\n    TR: 'tr',\n    TRACK: 'track',\n    TT: 'tt',\n\n    U: 'u',\n    UL: 'ul',\n\n    SVG: 'svg',\n\n    VAR: 'var',\n\n    WBR: 'wbr',\n\n    XMP: 'xmp'\n});\n\nexports.SPECIAL_ELEMENTS = {\n    [NS.HTML]: {\n        [$.ADDRESS]: true,\n        [$.APPLET]: true,\n        [$.AREA]: true,\n        [$.ARTICLE]: true,\n        [$.ASIDE]: true,\n        [$.BASE]: true,\n        [$.BASEFONT]: true,\n        [$.BGSOUND]: true,\n        [$.BLOCKQUOTE]: true,\n        [$.BODY]: true,\n        [$.BR]: true,\n        [$.BUTTON]: true,\n        [$.CAPTION]: true,\n        [$.CENTER]: true,\n        [$.COL]: true,\n        [$.COLGROUP]: true,\n        [$.DD]: true,\n        [$.DETAILS]: true,\n        [$.DIR]: true,\n        [$.DIV]: true,\n        [$.DL]: true,\n        [$.DT]: true,\n        [$.EMBED]: true,\n        [$.FIELDSET]: true,\n        [$.FIGCAPTION]: true,\n        [$.FIGURE]: true,\n        [$.FOOTER]: true,\n        [$.FORM]: true,\n        [$.FRAME]: true,\n        [$.FRAMESET]: true,\n        [$.H1]: true,\n        [$.H2]: true,\n        [$.H3]: true,\n        [$.H4]: true,\n        [$.H5]: true,\n        [$.H6]: true,\n        [$.HEAD]: true,\n        [$.HEADER]: true,\n        [$.HGROUP]: true,\n        [$.HR]: true,\n        [$.HTML]: true,\n        [$.IFRAME]: true,\n        [$.IMG]: true,\n        [$.INPUT]: true,\n        [$.LI]: true,\n        [$.LINK]: true,\n        [$.LISTING]: true,\n        [$.MAIN]: true,\n        [$.MARQUEE]: true,\n        [$.MENU]: true,\n        [$.META]: true,\n        [$.NAV]: true,\n        [$.NOEMBED]: true,\n        [$.NOFRAMES]: true,\n        [$.NOSCRIPT]: true,\n        [$.OBJECT]: true,\n        [$.OL]: true,\n        [$.P]: true,\n        [$.PARAM]: true,\n        [$.PLAINTEXT]: true,\n        [$.PRE]: true,\n        [$.SCRIPT]: true,\n        [$.SECTION]: true,\n        [$.SELECT]: true,\n        [$.SOURCE]: true,\n        [$.STYLE]: true,\n        [$.SUMMARY]: true,\n        [$.TABLE]: true,\n        [$.TBODY]: true,\n        [$.TD]: true,\n        [$.TEMPLATE]: true,\n        [$.TEXTAREA]: true,\n        [$.TFOOT]: true,\n        [$.TH]: true,\n        [$.THEAD]: true,\n        [$.TITLE]: true,\n        [$.TR]: true,\n        [$.TRACK]: true,\n        [$.UL]: true,\n        [$.WBR]: true,\n        [$.XMP]: true\n    },\n    [NS.MATHML]: {\n        [$.MI]: true,\n        [$.MO]: true,\n        [$.MN]: true,\n        [$.MS]: true,\n        [$.MTEXT]: true,\n        [$.ANNOTATION_XML]: true\n    },\n    [NS.SVG]: {\n        [$.TITLE]: true,\n        [$.FOREIGN_OBJECT]: true,\n        [$.DESC]: true\n    }\n};\n","'use strict';\n\nconst UNDEFINED_CODE_POINTS = [\n    0xfffe,\n    0xffff,\n    0x1fffe,\n    0x1ffff,\n    0x2fffe,\n    0x2ffff,\n    0x3fffe,\n    0x3ffff,\n    0x4fffe,\n    0x4ffff,\n    0x5fffe,\n    0x5ffff,\n    0x6fffe,\n    0x6ffff,\n    0x7fffe,\n    0x7ffff,\n    0x8fffe,\n    0x8ffff,\n    0x9fffe,\n    0x9ffff,\n    0xafffe,\n    0xaffff,\n    0xbfffe,\n    0xbffff,\n    0xcfffe,\n    0xcffff,\n    0xdfffe,\n    0xdffff,\n    0xefffe,\n    0xeffff,\n    0xffffe,\n    0xfffff,\n    0x10fffe,\n    0x10ffff\n];\n\nexports.REPLACEMENT_CHARACTER = '\\uFFFD';\n\nexports.CODE_POINTS = {\n    EOF: -1,\n    NULL: 0x00,\n    TABULATION: 0x09,\n    CARRIAGE_RETURN: 0x0d,\n    LINE_FEED: 0x0a,\n    FORM_FEED: 0x0c,\n    SPACE: 0x20,\n    EXCLAMATION_MARK: 0x21,\n    QUOTATION_MARK: 0x22,\n    NUMBER_SIGN: 0x23,\n    AMPERSAND: 0x26,\n    APOSTROPHE: 0x27,\n    HYPHEN_MINUS: 0x2d,\n    SOLIDUS: 0x2f,\n    DIGIT_0: 0x30,\n    DIGIT_9: 0x39,\n    SEMICOLON: 0x3b,\n    LESS_THAN_SIGN: 0x3c,\n    EQUALS_SIGN: 0x3d,\n    GREATER_THAN_SIGN: 0x3e,\n    QUESTION_MARK: 0x3f,\n    LATIN_CAPITAL_A: 0x41,\n    LATIN_CAPITAL_F: 0x46,\n    LATIN_CAPITAL_X: 0x58,\n    LATIN_CAPITAL_Z: 0x5a,\n    RIGHT_SQUARE_BRACKET: 0x5d,\n    GRAVE_ACCENT: 0x60,\n    LATIN_SMALL_A: 0x61,\n    LATIN_SMALL_F: 0x66,\n    LATIN_SMALL_X: 0x78,\n    LATIN_SMALL_Z: 0x7a,\n    REPLACEMENT_CHARACTER: 0xfffd\n};\n\nexports.CODE_POINT_SEQUENCES = {\n    DASH_DASH_STRING: [0x2d, 0x2d], //--\n    DOCTYPE_STRING: [0x44, 0x4f, 0x43, 0x54, 0x59, 0x50, 0x45], //DOCTYPE\n    CDATA_START_STRING: [0x5b, 0x43, 0x44, 0x41, 0x54, 0x41, 0x5b], //[CDATA[\n    SCRIPT_STRING: [0x73, 0x63, 0x72, 0x69, 0x70, 0x74], //script\n    PUBLIC_STRING: [0x50, 0x55, 0x42, 0x4c, 0x49, 0x43], //PUBLIC\n    SYSTEM_STRING: [0x53, 0x59, 0x53, 0x54, 0x45, 0x4d] //SYSTEM\n};\n\n//Surrogates\nexports.isSurrogate = function(cp) {\n    return cp >= 0xd800 && cp <= 0xdfff;\n};\n\nexports.isSurrogatePair = function(cp) {\n    return cp >= 0xdc00 && cp <= 0xdfff;\n};\n\nexports.getSurrogatePairCodePoint = function(cp1, cp2) {\n    return (cp1 - 0xd800) * 0x400 + 0x2400 + cp2;\n};\n\n//NOTE: excluding NULL and ASCII whitespace\nexports.isControlCodePoint = function(cp) {\n    return (\n        (cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f)\n    );\n};\n\nexports.isUndefinedCodePoint = function(cp) {\n    return (cp >= 0xfdd0 && cp <= 0xfdef) || UNDEFINED_CODE_POINTS.indexOf(cp) > -1;\n};\n","'use strict';\n\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingMixinBase extends Mixin {\n    constructor(host, opts) {\n        super(host);\n\n        this.posTracker = null;\n        this.onParseError = opts.onParseError;\n    }\n\n    _setErrorLocation(err) {\n        err.startLine = err.endLine = this.posTracker.line;\n        err.startCol = err.endCol = this.posTracker.col;\n        err.startOffset = err.endOffset = this.posTracker.offset;\n    }\n\n    _reportError(code) {\n        const err = {\n            code: code,\n            startLine: -1,\n            startCol: -1,\n            startOffset: -1,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1\n        };\n\n        this._setErrorLocation(err);\n        this.onParseError(err);\n    }\n\n    _getOverriddenMethods(mxn) {\n        return {\n            _err(code) {\n                mxn._reportError(code);\n            }\n        };\n    }\n}\n\nmodule.exports = ErrorReportingMixinBase;\n","'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst ErrorReportingTokenizerMixin = require('./tokenizer-mixin');\nconst LocationInfoTokenizerMixin = require('../location-info/tokenizer-mixin');\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingParserMixin extends ErrorReportingMixinBase {\n    constructor(parser, opts) {\n        super(parser, opts);\n\n        this.opts = opts;\n        this.ctLoc = null;\n        this.locBeforeToken = false;\n    }\n\n    _setErrorLocation(err) {\n        if (this.ctLoc) {\n            err.startLine = this.ctLoc.startLine;\n            err.startCol = this.ctLoc.startCol;\n            err.startOffset = this.ctLoc.startOffset;\n\n            err.endLine = this.locBeforeToken ? this.ctLoc.startLine : this.ctLoc.endLine;\n            err.endCol = this.locBeforeToken ? this.ctLoc.startCol : this.ctLoc.endCol;\n            err.endOffset = this.locBeforeToken ? this.ctLoc.startOffset : this.ctLoc.endOffset;\n        }\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        return {\n            _bootstrap(document, fragmentContext) {\n                orig._bootstrap.call(this, document, fragmentContext);\n\n                Mixin.install(this.tokenizer, ErrorReportingTokenizerMixin, mxn.opts);\n                Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);\n            },\n\n            _processInputToken(token) {\n                mxn.ctLoc = token.location;\n\n                orig._processInputToken.call(this, token);\n            },\n\n            _err(code, options) {\n                mxn.locBeforeToken = options && options.beforeToken;\n                mxn._reportError(code);\n            }\n        };\n    }\n}\n\nmodule.exports = ErrorReportingParserMixin;\n","'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst PositionTrackingPreprocessorMixin = require('../position-tracking/preprocessor-mixin');\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingPreprocessorMixin extends ErrorReportingMixinBase {\n    constructor(preprocessor, opts) {\n        super(preprocessor, opts);\n\n        this.posTracker = Mixin.install(preprocessor, PositionTrackingPreprocessorMixin);\n        this.lastErrOffset = -1;\n    }\n\n    _reportError(code) {\n        //NOTE: avoid reporting error twice on advance/retreat\n        if (this.lastErrOffset !== this.posTracker.offset) {\n            this.lastErrOffset = this.posTracker.offset;\n            super._reportError(code);\n        }\n    }\n}\n\nmodule.exports = ErrorReportingPreprocessorMixin;\n","'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst ErrorReportingPreprocessorMixin = require('./preprocessor-mixin');\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingTokenizerMixin extends ErrorReportingMixinBase {\n    constructor(tokenizer, opts) {\n        super(tokenizer, opts);\n\n        const preprocessorMixin = Mixin.install(tokenizer.preprocessor, ErrorReportingPreprocessorMixin, opts);\n\n        this.posTracker = preprocessorMixin.posTracker;\n    }\n}\n\nmodule.exports = ErrorReportingTokenizerMixin;\n","'use strict';\n\nconst Mixin = require('../../utils/mixin');\n\nclass LocationInfoOpenElementStackMixin extends Mixin {\n    constructor(stack, opts) {\n        super(stack);\n\n        this.onItemPop = opts.onItemPop;\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        return {\n            pop() {\n                mxn.onItemPop(this.current);\n                orig.pop.call(this);\n            },\n\n            popAllUpToHtmlElement() {\n                for (let i = this.stackTop; i > 0; i--) {\n                    mxn.onItemPop(this.items[i]);\n                }\n\n                orig.popAllUpToHtmlElement.call(this);\n            },\n\n            remove(element) {\n                mxn.onItemPop(this.current);\n                orig.remove.call(this, element);\n            }\n        };\n    }\n}\n\nmodule.exports = LocationInfoOpenElementStackMixin;\n","'use strict';\n\nconst Mixin = require('../../utils/mixin');\nconst Tokenizer = require('../../tokenizer');\nconst LocationInfoTokenizerMixin = require('./tokenizer-mixin');\nconst LocationInfoOpenElementStackMixin = require('./open-element-stack-mixin');\nconst HTML = require('../../common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\n\nclass LocationInfoParserMixin extends Mixin {\n    constructor(parser) {\n        super(parser);\n\n        this.parser = parser;\n        this.treeAdapter = this.parser.treeAdapter;\n        this.posTracker = null;\n        this.lastStartTagToken = null;\n        this.lastFosterParentingLocation = null;\n        this.currentToken = null;\n    }\n\n    _setStartLocation(element) {\n        let loc = null;\n\n        if (this.lastStartTagToken) {\n            loc = Object.assign({}, this.lastStartTagToken.location);\n            loc.startTag = this.lastStartTagToken.location;\n        }\n\n        this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n    }\n\n    _setEndLocation(element, closingToken) {\n        const loc = this.treeAdapter.getNodeSourceCodeLocation(element);\n\n        if (loc) {\n            if (closingToken.location) {\n                const ctLoc = closingToken.location;\n                const tn = this.treeAdapter.getTagName(element);\n\n                // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n                // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n                const isClosingEndTag = closingToken.type === Tokenizer.END_TAG_TOKEN && tn === closingToken.tagName;\n                const endLoc = {};\n                if (isClosingEndTag) {\n                    endLoc.endTag = Object.assign({}, ctLoc);\n                    endLoc.endLine = ctLoc.endLine;\n                    endLoc.endCol = ctLoc.endCol;\n                    endLoc.endOffset = ctLoc.endOffset;\n                } else {\n                    endLoc.endLine = ctLoc.startLine;\n                    endLoc.endCol = ctLoc.startCol;\n                    endLoc.endOffset = ctLoc.startOffset;\n                }\n\n                this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n            }\n        }\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        return {\n            _bootstrap(document, fragmentContext) {\n                orig._bootstrap.call(this, document, fragmentContext);\n\n                mxn.lastStartTagToken = null;\n                mxn.lastFosterParentingLocation = null;\n                mxn.currentToken = null;\n\n                const tokenizerMixin = Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);\n\n                mxn.posTracker = tokenizerMixin.posTracker;\n\n                Mixin.install(this.openElements, LocationInfoOpenElementStackMixin, {\n                    onItemPop: function(element) {\n                        mxn._setEndLocation(element, mxn.currentToken);\n                    }\n                });\n            },\n\n            _runParsingLoop(scriptHandler) {\n                orig._runParsingLoop.call(this, scriptHandler);\n\n                // NOTE: generate location info for elements\n                // that remains on open element stack\n                for (let i = this.openElements.stackTop; i >= 0; i--) {\n                    mxn._setEndLocation(this.openElements.items[i], mxn.currentToken);\n                }\n            },\n\n            //Token processing\n            _processTokenInForeignContent(token) {\n                mxn.currentToken = token;\n                orig._processTokenInForeignContent.call(this, token);\n            },\n\n            _processToken(token) {\n                mxn.currentToken = token;\n                orig._processToken.call(this, token);\n\n                //NOTE: <body> and <html> are never popped from the stack, so we need to updated\n                //their end location explicitly.\n                const requireExplicitUpdate =\n                    token.type === Tokenizer.END_TAG_TOKEN &&\n                    (token.tagName === $.HTML || (token.tagName === $.BODY && this.openElements.hasInScope($.BODY)));\n\n                if (requireExplicitUpdate) {\n                    for (let i = this.openElements.stackTop; i >= 0; i--) {\n                        const element = this.openElements.items[i];\n\n                        if (this.treeAdapter.getTagName(element) === token.tagName) {\n                            mxn._setEndLocation(element, token);\n                            break;\n                        }\n                    }\n                }\n            },\n\n            //Doctype\n            _setDocumentType(token) {\n                orig._setDocumentType.call(this, token);\n\n                const documentChildren = this.treeAdapter.getChildNodes(this.document);\n                const cnLength = documentChildren.length;\n\n                for (let i = 0; i < cnLength; i++) {\n                    const node = documentChildren[i];\n\n                    if (this.treeAdapter.isDocumentTypeNode(node)) {\n                        this.treeAdapter.setNodeSourceCodeLocation(node, token.location);\n                        break;\n                    }\n                }\n            },\n\n            //Elements\n            _attachElementToTree(element) {\n                //NOTE: _attachElementToTree is called from _appendElement, _insertElement and _insertTemplate methods.\n                //So we will use token location stored in this methods for the element.\n                mxn._setStartLocation(element);\n                mxn.lastStartTagToken = null;\n                orig._attachElementToTree.call(this, element);\n            },\n\n            _appendElement(token, namespaceURI) {\n                mxn.lastStartTagToken = token;\n                orig._appendElement.call(this, token, namespaceURI);\n            },\n\n            _insertElement(token, namespaceURI) {\n                mxn.lastStartTagToken = token;\n                orig._insertElement.call(this, token, namespaceURI);\n            },\n\n            _insertTemplate(token) {\n                mxn.lastStartTagToken = token;\n                orig._insertTemplate.call(this, token);\n\n                const tmplContent = this.treeAdapter.getTemplateContent(this.openElements.current);\n\n                this.treeAdapter.setNodeSourceCodeLocation(tmplContent, null);\n            },\n\n            _insertFakeRootElement() {\n                orig._insertFakeRootElement.call(this);\n                this.treeAdapter.setNodeSourceCodeLocation(this.openElements.current, null);\n            },\n\n            //Comments\n            _appendCommentNode(token, parent) {\n                orig._appendCommentNode.call(this, token, parent);\n\n                const children = this.treeAdapter.getChildNodes(parent);\n                const commentNode = children[children.length - 1];\n\n                this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n            },\n\n            //Text\n            _findFosterParentingLocation() {\n                //NOTE: store last foster parenting location, so we will be able to find inserted text\n                //in case of foster parenting\n                mxn.lastFosterParentingLocation = orig._findFosterParentingLocation.call(this);\n\n                return mxn.lastFosterParentingLocation;\n            },\n\n            _insertCharacters(token) {\n                orig._insertCharacters.call(this, token);\n\n                const hasFosterParent = this._shouldFosterParentOnInsertion();\n\n                const parent =\n                    (hasFosterParent && mxn.lastFosterParentingLocation.parent) ||\n                    this.openElements.currentTmplContent ||\n                    this.openElements.current;\n\n                const siblings = this.treeAdapter.getChildNodes(parent);\n\n                const textNodeIdx =\n                    hasFosterParent && mxn.lastFosterParentingLocation.beforeElement\n                        ? siblings.indexOf(mxn.lastFosterParentingLocation.beforeElement) - 1\n                        : siblings.length - 1;\n\n                const textNode = siblings[textNodeIdx];\n\n                //NOTE: if we have location assigned by another token, then just update end position\n                const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n\n                if (tnLoc) {\n                    const { endLine, endCol, endOffset } = token.location;\n                    this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n                } else {\n                    this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n                }\n            }\n        };\n    }\n}\n\nmodule.exports = LocationInfoParserMixin;\n","'use strict';\n\nconst Mixin = require('../../utils/mixin');\nconst Tokenizer = require('../../tokenizer');\nconst PositionTrackingPreprocessorMixin = require('../position-tracking/preprocessor-mixin');\n\nclass LocationInfoTokenizerMixin extends Mixin {\n    constructor(tokenizer) {\n        super(tokenizer);\n\n        this.tokenizer = tokenizer;\n        this.posTracker = Mixin.install(tokenizer.preprocessor, PositionTrackingPreprocessorMixin);\n        this.currentAttrLocation = null;\n        this.ctLoc = null;\n    }\n\n    _getCurrentLocation() {\n        return {\n            startLine: this.posTracker.line,\n            startCol: this.posTracker.col,\n            startOffset: this.posTracker.offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1\n        };\n    }\n\n    _attachCurrentAttrLocationInfo() {\n        this.currentAttrLocation.endLine = this.posTracker.line;\n        this.currentAttrLocation.endCol = this.posTracker.col;\n        this.currentAttrLocation.endOffset = this.posTracker.offset;\n\n        const currentToken = this.tokenizer.currentToken;\n        const currentAttr = this.tokenizer.currentAttr;\n\n        if (!currentToken.location.attrs) {\n            currentToken.location.attrs = Object.create(null);\n        }\n\n        currentToken.location.attrs[currentAttr.name] = this.currentAttrLocation;\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        const methods = {\n            _createStartTagToken() {\n                orig._createStartTagToken.call(this);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createEndTagToken() {\n                orig._createEndTagToken.call(this);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createCommentToken() {\n                orig._createCommentToken.call(this);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createDoctypeToken(initialName) {\n                orig._createDoctypeToken.call(this, initialName);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createCharacterToken(type, ch) {\n                orig._createCharacterToken.call(this, type, ch);\n                this.currentCharacterToken.location = mxn.ctLoc;\n            },\n\n            _createEOFToken() {\n                orig._createEOFToken.call(this);\n                this.currentToken.location = mxn._getCurrentLocation();\n            },\n\n            _createAttr(attrNameFirstCh) {\n                orig._createAttr.call(this, attrNameFirstCh);\n                mxn.currentAttrLocation = mxn._getCurrentLocation();\n            },\n\n            _leaveAttrName(toState) {\n                orig._leaveAttrName.call(this, toState);\n                mxn._attachCurrentAttrLocationInfo();\n            },\n\n            _leaveAttrValue(toState) {\n                orig._leaveAttrValue.call(this, toState);\n                mxn._attachCurrentAttrLocationInfo();\n            },\n\n            _emitCurrentToken() {\n                const ctLoc = this.currentToken.location;\n\n                //NOTE: if we have pending character token make it's end location equal to the\n                //current token's start location.\n                if (this.currentCharacterToken) {\n                    this.currentCharacterToken.location.endLine = ctLoc.startLine;\n                    this.currentCharacterToken.location.endCol = ctLoc.startCol;\n                    this.currentCharacterToken.location.endOffset = ctLoc.startOffset;\n                }\n\n                if (this.currentToken.type === Tokenizer.EOF_TOKEN) {\n                    ctLoc.endLine = ctLoc.startLine;\n                    ctLoc.endCol = ctLoc.startCol;\n                    ctLoc.endOffset = ctLoc.startOffset;\n                } else {\n                    ctLoc.endLine = mxn.posTracker.line;\n                    ctLoc.endCol = mxn.posTracker.col + 1;\n                    ctLoc.endOffset = mxn.posTracker.offset + 1;\n                }\n\n                orig._emitCurrentToken.call(this);\n            },\n\n            _emitCurrentCharacterToken() {\n                const ctLoc = this.currentCharacterToken && this.currentCharacterToken.location;\n\n                //NOTE: if we have character token and it's location wasn't set in the _emitCurrentToken(),\n                //then set it's location at the current preprocessor position.\n                //We don't need to increment preprocessor position, since character token\n                //emission is always forced by the start of the next character token here.\n                //So, we already have advanced position.\n                if (ctLoc && ctLoc.endOffset === -1) {\n                    ctLoc.endLine = mxn.posTracker.line;\n                    ctLoc.endCol = mxn.posTracker.col;\n                    ctLoc.endOffset = mxn.posTracker.offset;\n                }\n\n                orig._emitCurrentCharacterToken.call(this);\n            }\n        };\n\n        //NOTE: patch initial states for each mode to obtain token start position\n        Object.keys(Tokenizer.MODE).forEach(modeName => {\n            const state = Tokenizer.MODE[modeName];\n\n            methods[state] = function(cp) {\n                mxn.ctLoc = mxn._getCurrentLocation();\n                orig[state].call(this, cp);\n            };\n        });\n\n        return methods;\n    }\n}\n\nmodule.exports = LocationInfoTokenizerMixin;\n","'use strict';\n\nconst Mixin = require('../../utils/mixin');\n\nclass PositionTrackingPreprocessorMixin extends Mixin {\n    constructor(preprocessor) {\n        super(preprocessor);\n\n        this.preprocessor = preprocessor;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n\n        this.offset = 0;\n        this.col = 0;\n        this.line = 1;\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        return {\n            advance() {\n                const pos = this.pos + 1;\n                const ch = this.html[pos];\n\n                //NOTE: LF should be in the last column of the line\n                if (mxn.isEol) {\n                    mxn.isEol = false;\n                    mxn.line++;\n                    mxn.lineStartPos = pos;\n                }\n\n                if (ch === '\\n' || (ch === '\\r' && this.html[pos + 1] !== '\\n')) {\n                    mxn.isEol = true;\n                }\n\n                mxn.col = pos - mxn.lineStartPos + 1;\n                mxn.offset = mxn.droppedBufferSize + pos;\n\n                return orig.advance.call(this);\n            },\n\n            retreat() {\n                orig.retreat.call(this);\n\n                mxn.isEol = false;\n                mxn.col = this.pos - mxn.lineStartPos + 1;\n            },\n\n            dropParsedChunk() {\n                const prevPos = this.pos;\n\n                orig.dropParsedChunk.call(this);\n\n                const reduction = prevPos - this.pos;\n\n                mxn.lineStartPos -= reduction;\n                mxn.droppedBufferSize += reduction;\n                mxn.offset = mxn.droppedBufferSize + this.pos;\n            }\n        };\n    }\n}\n\nmodule.exports = PositionTrackingPreprocessorMixin;\n","'use strict';\n\n//Const\nconst NOAH_ARK_CAPACITY = 3;\n\n//List of formatting elements\nclass FormattingElementList {\n    constructor(treeAdapter) {\n        this.length = 0;\n        this.entries = [];\n        this.treeAdapter = treeAdapter;\n        this.bookmark = null;\n    }\n\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement) {\n        const candidates = [];\n\n        if (this.length >= NOAH_ARK_CAPACITY) {\n            const neAttrsLength = this.treeAdapter.getAttrList(newElement).length;\n            const neTagName = this.treeAdapter.getTagName(newElement);\n            const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n\n            for (let i = this.length - 1; i >= 0; i--) {\n                const entry = this.entries[i];\n\n                if (entry.type === FormattingElementList.MARKER_ENTRY) {\n                    break;\n                }\n\n                const element = entry.element;\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n\n                const isCandidate =\n                    this.treeAdapter.getTagName(element) === neTagName &&\n                    this.treeAdapter.getNamespaceURI(element) === neNamespaceURI &&\n                    elementAttrs.length === neAttrsLength;\n\n                if (isCandidate) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n\n        return candidates.length < NOAH_ARK_CAPACITY ? [] : candidates;\n    }\n\n    _ensureNoahArkCondition(newElement) {\n        const candidates = this._getNoahArkConditionCandidates(newElement);\n        let cLength = candidates.length;\n\n        if (cLength) {\n            const neAttrs = this.treeAdapter.getAttrList(newElement);\n            const neAttrsLength = neAttrs.length;\n            const neAttrsMap = Object.create(null);\n\n            //NOTE: build attrs map for the new element so we can perform fast lookups\n            for (let i = 0; i < neAttrsLength; i++) {\n                const neAttr = neAttrs[i];\n\n                neAttrsMap[neAttr.name] = neAttr.value;\n            }\n\n            for (let i = 0; i < neAttrsLength; i++) {\n                for (let j = 0; j < cLength; j++) {\n                    const cAttr = candidates[j].attrs[i];\n\n                    if (neAttrsMap[cAttr.name] !== cAttr.value) {\n                        candidates.splice(j, 1);\n                        cLength--;\n                    }\n\n                    if (candidates.length < NOAH_ARK_CAPACITY) {\n                        return;\n                    }\n                }\n            }\n\n            //NOTE: remove bottommost candidates until Noah's Ark condition will not be met\n            for (let i = cLength - 1; i >= NOAH_ARK_CAPACITY - 1; i--) {\n                this.entries.splice(candidates[i].idx, 1);\n                this.length--;\n            }\n        }\n    }\n\n    //Mutations\n    insertMarker() {\n        this.entries.push({ type: FormattingElementList.MARKER_ENTRY });\n        this.length++;\n    }\n\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n\n        this.entries.push({\n            type: FormattingElementList.ELEMENT_ENTRY,\n            element: element,\n            token: token\n        });\n\n        this.length++;\n    }\n\n    insertElementAfterBookmark(element, token) {\n        let bookmarkIdx = this.length - 1;\n\n        for (; bookmarkIdx >= 0; bookmarkIdx--) {\n            if (this.entries[bookmarkIdx] === this.bookmark) {\n                break;\n            }\n        }\n\n        this.entries.splice(bookmarkIdx + 1, 0, {\n            type: FormattingElementList.ELEMENT_ENTRY,\n            element: element,\n            token: token\n        });\n\n        this.length++;\n    }\n\n    removeEntry(entry) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            if (this.entries[i] === entry) {\n                this.entries.splice(i, 1);\n                this.length--;\n                break;\n            }\n        }\n    }\n\n    clearToLastMarker() {\n        while (this.length) {\n            const entry = this.entries.pop();\n\n            this.length--;\n\n            if (entry.type === FormattingElementList.MARKER_ENTRY) {\n                break;\n            }\n        }\n    }\n\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            const entry = this.entries[i];\n\n            if (entry.type === FormattingElementList.MARKER_ENTRY) {\n                return null;\n            }\n\n            if (this.treeAdapter.getTagName(entry.element) === tagName) {\n                return entry;\n            }\n        }\n\n        return null;\n    }\n\n    getElementEntry(element) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            const entry = this.entries[i];\n\n            if (entry.type === FormattingElementList.ELEMENT_ENTRY && entry.element === element) {\n                return entry;\n            }\n        }\n\n        return null;\n    }\n}\n\n//Entry types\nFormattingElementList.MARKER_ENTRY = 'MARKER_ENTRY';\nFormattingElementList.ELEMENT_ENTRY = 'ELEMENT_ENTRY';\n\nmodule.exports = FormattingElementList;\n","'use strict';\n\nconst Tokenizer = require('../tokenizer');\nconst OpenElementStack = require('./open-element-stack');\nconst FormattingElementList = require('./formatting-element-list');\nconst LocationInfoParserMixin = require('../extensions/location-info/parser-mixin');\nconst ErrorReportingParserMixin = require('../extensions/error-reporting/parser-mixin');\nconst Mixin = require('../utils/mixin');\nconst defaultTreeAdapter = require('../tree-adapters/default');\nconst mergeOptions = require('../utils/merge-options');\nconst doctype = require('../common/doctype');\nconst foreignContent = require('../common/foreign-content');\nconst ERR = require('../common/error-codes');\nconst unicode = require('../common/unicode');\nconst HTML = require('../common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES;\nconst ATTRS = HTML.ATTRS;\n\nconst DEFAULT_OPTIONS = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    onParseError: null,\n    treeAdapter: defaultTreeAdapter\n};\n\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n\n//Insertion modes\nconst INITIAL_MODE = 'INITIAL_MODE';\nconst BEFORE_HTML_MODE = 'BEFORE_HTML_MODE';\nconst BEFORE_HEAD_MODE = 'BEFORE_HEAD_MODE';\nconst IN_HEAD_MODE = 'IN_HEAD_MODE';\nconst IN_HEAD_NO_SCRIPT_MODE = 'IN_HEAD_NO_SCRIPT_MODE';\nconst AFTER_HEAD_MODE = 'AFTER_HEAD_MODE';\nconst IN_BODY_MODE = 'IN_BODY_MODE';\nconst TEXT_MODE = 'TEXT_MODE';\nconst IN_TABLE_MODE = 'IN_TABLE_MODE';\nconst IN_TABLE_TEXT_MODE = 'IN_TABLE_TEXT_MODE';\nconst IN_CAPTION_MODE = 'IN_CAPTION_MODE';\nconst IN_COLUMN_GROUP_MODE = 'IN_COLUMN_GROUP_MODE';\nconst IN_TABLE_BODY_MODE = 'IN_TABLE_BODY_MODE';\nconst IN_ROW_MODE = 'IN_ROW_MODE';\nconst IN_CELL_MODE = 'IN_CELL_MODE';\nconst IN_SELECT_MODE = 'IN_SELECT_MODE';\nconst IN_SELECT_IN_TABLE_MODE = 'IN_SELECT_IN_TABLE_MODE';\nconst IN_TEMPLATE_MODE = 'IN_TEMPLATE_MODE';\nconst AFTER_BODY_MODE = 'AFTER_BODY_MODE';\nconst IN_FRAMESET_MODE = 'IN_FRAMESET_MODE';\nconst AFTER_FRAMESET_MODE = 'AFTER_FRAMESET_MODE';\nconst AFTER_AFTER_BODY_MODE = 'AFTER_AFTER_BODY_MODE';\nconst AFTER_AFTER_FRAMESET_MODE = 'AFTER_AFTER_FRAMESET_MODE';\n\n//Insertion mode reset map\nconst INSERTION_MODE_RESET_MAP = {\n    [$.TR]: IN_ROW_MODE,\n    [$.TBODY]: IN_TABLE_BODY_MODE,\n    [$.THEAD]: IN_TABLE_BODY_MODE,\n    [$.TFOOT]: IN_TABLE_BODY_MODE,\n    [$.CAPTION]: IN_CAPTION_MODE,\n    [$.COLGROUP]: IN_COLUMN_GROUP_MODE,\n    [$.TABLE]: IN_TABLE_MODE,\n    [$.BODY]: IN_BODY_MODE,\n    [$.FRAMESET]: IN_FRAMESET_MODE\n};\n\n//Template insertion mode switch map\nconst TEMPLATE_INSERTION_MODE_SWITCH_MAP = {\n    [$.CAPTION]: IN_TABLE_MODE,\n    [$.COLGROUP]: IN_TABLE_MODE,\n    [$.TBODY]: IN_TABLE_MODE,\n    [$.TFOOT]: IN_TABLE_MODE,\n    [$.THEAD]: IN_TABLE_MODE,\n    [$.COL]: IN_COLUMN_GROUP_MODE,\n    [$.TR]: IN_TABLE_BODY_MODE,\n    [$.TD]: IN_ROW_MODE,\n    [$.TH]: IN_ROW_MODE\n};\n\n//Token handlers map for insertion modes\nconst TOKEN_HANDLERS = {\n    [INITIAL_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenInInitialMode,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInInitialMode,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: doctypeInInitialMode,\n        [Tokenizer.START_TAG_TOKEN]: tokenInInitialMode,\n        [Tokenizer.END_TAG_TOKEN]: tokenInInitialMode,\n        [Tokenizer.EOF_TOKEN]: tokenInInitialMode\n    },\n    [BEFORE_HTML_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenBeforeHtml,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenBeforeHtml,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagBeforeHtml,\n        [Tokenizer.END_TAG_TOKEN]: endTagBeforeHtml,\n        [Tokenizer.EOF_TOKEN]: tokenBeforeHtml\n    },\n    [BEFORE_HEAD_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenBeforeHead,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenBeforeHead,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,\n        [Tokenizer.START_TAG_TOKEN]: startTagBeforeHead,\n        [Tokenizer.END_TAG_TOKEN]: endTagBeforeHead,\n        [Tokenizer.EOF_TOKEN]: tokenBeforeHead\n    },\n    [IN_HEAD_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenInHead,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInHead,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,\n        [Tokenizer.START_TAG_TOKEN]: startTagInHead,\n        [Tokenizer.END_TAG_TOKEN]: endTagInHead,\n        [Tokenizer.EOF_TOKEN]: tokenInHead\n    },\n    [IN_HEAD_NO_SCRIPT_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenInHeadNoScript,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInHeadNoScript,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,\n        [Tokenizer.START_TAG_TOKEN]: startTagInHeadNoScript,\n        [Tokenizer.END_TAG_TOKEN]: endTagInHeadNoScript,\n        [Tokenizer.EOF_TOKEN]: tokenInHeadNoScript\n    },\n    [AFTER_HEAD_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenAfterHead,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterHead,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterHead,\n        [Tokenizer.END_TAG_TOKEN]: endTagAfterHead,\n        [Tokenizer.EOF_TOKEN]: tokenAfterHead\n    },\n    [IN_BODY_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInBody,\n        [Tokenizer.END_TAG_TOKEN]: endTagInBody,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [TEXT_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: ignoreToken,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: ignoreToken,\n        [Tokenizer.END_TAG_TOKEN]: endTagInText,\n        [Tokenizer.EOF_TOKEN]: eofInText\n    },\n    [IN_TABLE_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInTable,\n        [Tokenizer.END_TAG_TOKEN]: endTagInTable,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_TABLE_TEXT_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInTableText,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInTableText,\n        [Tokenizer.COMMENT_TOKEN]: tokenInTableText,\n        [Tokenizer.DOCTYPE_TOKEN]: tokenInTableText,\n        [Tokenizer.START_TAG_TOKEN]: tokenInTableText,\n        [Tokenizer.END_TAG_TOKEN]: tokenInTableText,\n        [Tokenizer.EOF_TOKEN]: tokenInTableText\n    },\n    [IN_CAPTION_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInCaption,\n        [Tokenizer.END_TAG_TOKEN]: endTagInCaption,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_COLUMN_GROUP_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenInColumnGroup,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInColumnGroup,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInColumnGroup,\n        [Tokenizer.END_TAG_TOKEN]: endTagInColumnGroup,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_TABLE_BODY_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInTableBody,\n        [Tokenizer.END_TAG_TOKEN]: endTagInTableBody,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_ROW_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInRow,\n        [Tokenizer.END_TAG_TOKEN]: endTagInRow,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_CELL_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInCell,\n        [Tokenizer.END_TAG_TOKEN]: endTagInCell,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_SELECT_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInSelect,\n        [Tokenizer.END_TAG_TOKEN]: endTagInSelect,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_SELECT_IN_TABLE_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInSelectInTable,\n        [Tokenizer.END_TAG_TOKEN]: endTagInSelectInTable,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_TEMPLATE_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInTemplate,\n        [Tokenizer.END_TAG_TOKEN]: endTagInTemplate,\n        [Tokenizer.EOF_TOKEN]: eofInTemplate\n    },\n    [AFTER_BODY_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenAfterBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterBody,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendCommentToRootHtmlElement,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterBody,\n        [Tokenizer.END_TAG_TOKEN]: endTagAfterBody,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    },\n    [IN_FRAMESET_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInFrameset,\n        [Tokenizer.END_TAG_TOKEN]: endTagInFrameset,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    },\n    [AFTER_FRAMESET_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterFrameset,\n        [Tokenizer.END_TAG_TOKEN]: endTagAfterFrameset,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    },\n    [AFTER_AFTER_BODY_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenAfterAfterBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterAfterBody,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendCommentToDocument,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterAfterBody,\n        [Tokenizer.END_TAG_TOKEN]: tokenAfterAfterBody,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    },\n    [AFTER_AFTER_FRAMESET_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendCommentToDocument,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterAfterFrameset,\n        [Tokenizer.END_TAG_TOKEN]: ignoreToken,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    }\n};\n\n//Parser\nclass Parser {\n    constructor(options) {\n        this.options = mergeOptions(DEFAULT_OPTIONS, options);\n\n        this.treeAdapter = this.options.treeAdapter;\n        this.pendingScript = null;\n\n        if (this.options.sourceCodeLocationInfo) {\n            Mixin.install(this, LocationInfoParserMixin);\n        }\n\n        if (this.options.onParseError) {\n            Mixin.install(this, ErrorReportingParserMixin, { onParseError: this.options.onParseError });\n        }\n    }\n\n    // API\n    parse(html) {\n        const document = this.treeAdapter.createDocument();\n\n        this._bootstrap(document, null);\n        this.tokenizer.write(html, true);\n        this._runParsingLoop(null);\n\n        return document;\n    }\n\n    parseFragment(html, fragmentContext) {\n        //NOTE: use <template> element as a fragment context if context element was not provided,\n        //so we will parse in \"forgiving\" manner\n        if (!fragmentContext) {\n            fragmentContext = this.treeAdapter.createElement($.TEMPLATE, NS.HTML, []);\n        }\n\n        //NOTE: create fake element which will be used as 'document' for fragment parsing.\n        //This is important for jsdom there 'document' can't be recreated, therefore\n        //fragment parsing causes messing of the main `document`.\n        const documentMock = this.treeAdapter.createElement('documentmock', NS.HTML, []);\n\n        this._bootstrap(documentMock, fragmentContext);\n\n        if (this.treeAdapter.getTagName(fragmentContext) === $.TEMPLATE) {\n            this._pushTmplInsertionMode(IN_TEMPLATE_MODE);\n        }\n\n        this._initTokenizerForFragmentParsing();\n        this._insertFakeRootElement();\n        this._resetInsertionMode();\n        this._findFormInFragmentContext();\n        this.tokenizer.write(html, true);\n        this._runParsingLoop(null);\n\n        const rootElement = this.treeAdapter.getFirstChild(documentMock);\n        const fragment = this.treeAdapter.createDocumentFragment();\n\n        this._adoptNodes(rootElement, fragment);\n\n        return fragment;\n    }\n\n    //Bootstrap parser\n    _bootstrap(document, fragmentContext) {\n        this.tokenizer = new Tokenizer(this.options);\n\n        this.stopped = false;\n\n        this.insertionMode = INITIAL_MODE;\n        this.originalInsertionMode = '';\n\n        this.document = document;\n        this.fragmentContext = fragmentContext;\n\n        this.headElement = null;\n        this.formElement = null;\n\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n\n        this.tmplInsertionModeStack = [];\n        this.tmplInsertionModeStackTop = -1;\n        this.currentTmplInsertionMode = null;\n\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n    }\n\n    //Errors\n    _err() {\n        // NOTE: err reporting is noop by default. Enabled by mixin.\n    }\n\n    //Parsing loop\n    _runParsingLoop(scriptHandler) {\n        while (!this.stopped) {\n            this._setupTokenizerCDATAMode();\n\n            const token = this.tokenizer.getNextToken();\n\n            if (token.type === Tokenizer.HIBERNATION_TOKEN) {\n                break;\n            }\n\n            if (this.skipNextNewLine) {\n                this.skipNextNewLine = false;\n\n                if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN && token.chars[0] === '\\n') {\n                    if (token.chars.length === 1) {\n                        continue;\n                    }\n\n                    token.chars = token.chars.substr(1);\n                }\n            }\n\n            this._processInputToken(token);\n\n            if (scriptHandler && this.pendingScript) {\n                break;\n            }\n        }\n    }\n\n    runParsingLoopForCurrentChunk(writeCallback, scriptHandler) {\n        this._runParsingLoop(scriptHandler);\n\n        if (scriptHandler && this.pendingScript) {\n            const script = this.pendingScript;\n\n            this.pendingScript = null;\n\n            scriptHandler(script);\n\n            return;\n        }\n\n        if (writeCallback) {\n            writeCallback();\n        }\n    }\n\n    //Text parsing\n    _setupTokenizerCDATAMode() {\n        const current = this._getAdjustedCurrentElement();\n\n        this.tokenizer.allowCDATA =\n            current &&\n            current !== this.document &&\n            this.treeAdapter.getNamespaceURI(current) !== NS.HTML &&\n            !this._isIntegrationPoint(current);\n    }\n\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = TEXT_MODE;\n    }\n\n    switchToPlaintextParsing() {\n        this.insertionMode = TEXT_MODE;\n        this.originalInsertionMode = IN_BODY_MODE;\n        this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\n    }\n\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n\n        do {\n            if (this.treeAdapter.getTagName(node) === $.FORM) {\n                this.formElement = node;\n                break;\n            }\n\n            node = this.treeAdapter.getParentNode(node);\n        } while (node);\n    }\n\n    _initTokenizerForFragmentParsing() {\n        if (this.treeAdapter.getNamespaceURI(this.fragmentContext) === NS.HTML) {\n            const tn = this.treeAdapter.getTagName(this.fragmentContext);\n\n            if (tn === $.TITLE || tn === $.TEXTAREA) {\n                this.tokenizer.state = Tokenizer.MODE.RCDATA;\n            } else if (\n                tn === $.STYLE ||\n                tn === $.XMP ||\n                tn === $.IFRAME ||\n                tn === $.NOEMBED ||\n                tn === $.NOFRAMES ||\n                tn === $.NOSCRIPT\n            ) {\n                this.tokenizer.state = Tokenizer.MODE.RAWTEXT;\n            } else if (tn === $.SCRIPT) {\n                this.tokenizer.state = Tokenizer.MODE.SCRIPT_DATA;\n            } else if (tn === $.PLAINTEXT) {\n                this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\n            }\n        }\n    }\n\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n    }\n\n    _attachElementToTree(element) {\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        } else {\n            const parent = this.openElements.currentTmplContent || this.openElements.current;\n\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n\n        this._attachElementToTree(element);\n    }\n\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n\n        this._attachElementToTree(element);\n        this.openElements.push(element);\n    }\n\n    _insertFakeElement(tagName) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n\n        this._attachElementToTree(element);\n        this.openElements.push(element);\n    }\n\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl);\n        this.openElements.push(tmpl);\n    }\n\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement($.HTML, NS.HTML, []);\n\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element);\n    }\n\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n\n        this.treeAdapter.appendChild(parent, commentNode);\n    }\n\n    _insertCharacters(token) {\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentText(token.chars);\n        } else {\n            const parent = this.openElements.currentTmplContent || this.openElements.current;\n\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n    }\n\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n\n    //Token processing\n    _shouldProcessTokenInForeignContent(token) {\n        const current = this._getAdjustedCurrentElement();\n\n        if (!current || current === this.document) {\n            return false;\n        }\n\n        const ns = this.treeAdapter.getNamespaceURI(current);\n\n        if (ns === NS.HTML) {\n            return false;\n        }\n\n        if (\n            this.treeAdapter.getTagName(current) === $.ANNOTATION_XML &&\n            ns === NS.MATHML &&\n            token.type === Tokenizer.START_TAG_TOKEN &&\n            token.tagName === $.SVG\n        ) {\n            return false;\n        }\n\n        const isCharacterToken =\n            token.type === Tokenizer.CHARACTER_TOKEN ||\n            token.type === Tokenizer.NULL_CHARACTER_TOKEN ||\n            token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN;\n\n        const isMathMLTextStartTag =\n            token.type === Tokenizer.START_TAG_TOKEN && token.tagName !== $.MGLYPH && token.tagName !== $.MALIGNMARK;\n\n        if ((isMathMLTextStartTag || isCharacterToken) && this._isIntegrationPoint(current, NS.MATHML)) {\n            return false;\n        }\n\n        if (\n            (token.type === Tokenizer.START_TAG_TOKEN || isCharacterToken) &&\n            this._isIntegrationPoint(current, NS.HTML)\n        ) {\n            return false;\n        }\n\n        return token.type !== Tokenizer.EOF_TOKEN;\n    }\n\n    _processToken(token) {\n        TOKEN_HANDLERS[this.insertionMode][token.type](this, token);\n    }\n\n    _processTokenInBodyMode(token) {\n        TOKEN_HANDLERS[IN_BODY_MODE][token.type](this, token);\n    }\n\n    _processTokenInForeignContent(token) {\n        if (token.type === Tokenizer.CHARACTER_TOKEN) {\n            characterInForeignContent(this, token);\n        } else if (token.type === Tokenizer.NULL_CHARACTER_TOKEN) {\n            nullCharacterInForeignContent(this, token);\n        } else if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN) {\n            insertCharacters(this, token);\n        } else if (token.type === Tokenizer.COMMENT_TOKEN) {\n            appendComment(this, token);\n        } else if (token.type === Tokenizer.START_TAG_TOKEN) {\n            startTagInForeignContent(this, token);\n        } else if (token.type === Tokenizer.END_TAG_TOKEN) {\n            endTagInForeignContent(this, token);\n        }\n    }\n\n    _processInputToken(token) {\n        if (this._shouldProcessTokenInForeignContent(token)) {\n            this._processTokenInForeignContent(token);\n        } else {\n            this._processToken(token);\n        }\n\n        if (token.type === Tokenizer.START_TAG_TOKEN && token.selfClosing && !token.ackSelfClosing) {\n            this._err(ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n\n    //Integration points\n    _isIntegrationPoint(element, foreignNS) {\n        const tn = this.treeAdapter.getTagName(element);\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n\n        return foreignContent.isIntegrationPoint(tn, ns, attrs, foreignNS);\n    }\n\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.length;\n\n        if (listLength) {\n            let unopenIdx = listLength;\n            let entry = null;\n\n            do {\n                unopenIdx--;\n                entry = this.activeFormattingElements.entries[unopenIdx];\n\n                if (entry.type === FormattingElementList.MARKER_ENTRY || this.openElements.contains(entry.element)) {\n                    unopenIdx++;\n                    break;\n                }\n            } while (unopenIdx > 0);\n\n            for (let i = unopenIdx; i < listLength; i++) {\n                entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = IN_ROW_MODE;\n    }\n\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop, last = false; i >= 0; i--) {\n            let element = this.openElements.items[i];\n\n            if (i === 0) {\n                last = true;\n\n                if (this.fragmentContext) {\n                    element = this.fragmentContext;\n                }\n            }\n\n            const tn = this.treeAdapter.getTagName(element);\n            const newInsertionMode = INSERTION_MODE_RESET_MAP[tn];\n\n            if (newInsertionMode) {\n                this.insertionMode = newInsertionMode;\n                break;\n            } else if (!last && (tn === $.TD || tn === $.TH)) {\n                this.insertionMode = IN_CELL_MODE;\n                break;\n            } else if (!last && tn === $.HEAD) {\n                this.insertionMode = IN_HEAD_MODE;\n                break;\n            } else if (tn === $.SELECT) {\n                this._resetInsertionModeForSelect(i);\n                break;\n            } else if (tn === $.TEMPLATE) {\n                this.insertionMode = this.currentTmplInsertionMode;\n                break;\n            } else if (tn === $.HTML) {\n                this.insertionMode = this.headElement ? AFTER_HEAD_MODE : BEFORE_HEAD_MODE;\n                break;\n            } else if (last) {\n                this.insertionMode = IN_BODY_MODE;\n                break;\n            }\n        }\n    }\n\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const ancestor = this.openElements.items[i];\n                const tn = this.treeAdapter.getTagName(ancestor);\n\n                if (tn === $.TEMPLATE) {\n                    break;\n                } else if (tn === $.TABLE) {\n                    this.insertionMode = IN_SELECT_IN_TABLE_MODE;\n                    return;\n                }\n            }\n        }\n\n        this.insertionMode = IN_SELECT_MODE;\n    }\n\n    _pushTmplInsertionMode(mode) {\n        this.tmplInsertionModeStack.push(mode);\n        this.tmplInsertionModeStackTop++;\n        this.currentTmplInsertionMode = mode;\n    }\n\n    _popTmplInsertionMode() {\n        this.tmplInsertionModeStack.pop();\n        this.tmplInsertionModeStackTop--;\n        this.currentTmplInsertionMode = this.tmplInsertionModeStack[this.tmplInsertionModeStackTop];\n    }\n\n    //Foster parenting\n    _isElementCausesFosterParenting(element) {\n        const tn = this.treeAdapter.getTagName(element);\n\n        return tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR;\n    }\n\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.current);\n    }\n\n    _findFosterParentingLocation() {\n        const location = {\n            parent: null,\n            beforeElement: null\n        };\n\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            const tn = this.treeAdapter.getTagName(openElement);\n            const ns = this.treeAdapter.getNamespaceURI(openElement);\n\n            if (tn === $.TEMPLATE && ns === NS.HTML) {\n                location.parent = this.treeAdapter.getTemplateContent(openElement);\n                break;\n            } else if (tn === $.TABLE) {\n                location.parent = this.treeAdapter.getParentNode(openElement);\n\n                if (location.parent) {\n                    location.beforeElement = openElement;\n                } else {\n                    location.parent = this.openElements.items[i - 1];\n                }\n\n                break;\n            }\n        }\n\n        if (!location.parent) {\n            location.parent = this.openElements.items[0];\n        }\n\n        return location;\n    }\n\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        } else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n\n    _fosterParentText(chars) {\n        const location = this._findFosterParentingLocation();\n\n        if (location.beforeElement) {\n            this.treeAdapter.insertTextBefore(location.parent, chars, location.beforeElement);\n        } else {\n            this.treeAdapter.insertText(location.parent, chars);\n        }\n    }\n\n    //Special elements\n    _isSpecialElement(element) {\n        const tn = this.treeAdapter.getTagName(element);\n        const ns = this.treeAdapter.getNamespaceURI(element);\n\n        return HTML.SPECIAL_ELEMENTS[ns][tn];\n    }\n}\n\nmodule.exports = Parser;\n\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        } else if (!p.openElements.hasInScope(token.tagName)) {\n            formattingElementEntry = null;\n        }\n    } else {\n        genericEndTagInBody(p, token);\n    }\n\n    return formattingElementEntry;\n}\n\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const element = p.openElements.items[i];\n\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n\n        if (p._isSpecialElement(element)) {\n            furthestBlock = element;\n        }\n    }\n\n    if (!furthestBlock) {\n        p.openElements.popUntilElementPopped(formattingElementEntry.element);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n\n    return furthestBlock;\n}\n\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n\n            p.openElements.remove(element);\n        } else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n\n    return lastElement;\n}\n\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n\n    return newElement;\n}\n\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    if (p._isElementCausesFosterParenting(commonAncestor)) {\n        p._fosterParentElement(lastElement);\n    } else {\n        const tn = p.treeAdapter.getTagName(commonAncestor);\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n\n        if (tn === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const token = formattingElementEntry.token;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, formattingElementEntry.token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement);\n}\n\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    let formattingElementEntry;\n\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        formattingElementEntry = aaObtainFormattingElementEntry(p, token, formattingElementEntry);\n\n        if (!formattingElementEntry) {\n            break;\n        }\n\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n\n        if (!furthestBlock) {\n            break;\n        }\n\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n\n        p.treeAdapter.detachNode(lastElement);\n        aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n\n//Generic token handlers\n//------------------------------------------------------------------\nfunction ignoreToken() {\n    //NOTE: do nothing =)\n}\n\nfunction misplacedDoctype(p) {\n    p._err(ERR.misplacedDoctype);\n}\n\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContent || p.openElements.current);\n}\n\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\n\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\n\nfunction insertCharacters(p, token) {\n    p._insertCharacters(token);\n}\n\nfunction stopParsing(p) {\n    p.stopped = true;\n}\n\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n\n    const mode = token.forceQuirks ? HTML.DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n\n    if (!doctype.isConforming(token)) {\n        p._err(ERR.nonConformingDoctype);\n    }\n\n    p.treeAdapter.setDocumentMode(p.document, mode);\n\n    p.insertionMode = BEFORE_HTML_MODE;\n}\n\nfunction tokenInInitialMode(p, token) {\n    p._err(ERR.missingDoctype, { beforeToken: true });\n    p.treeAdapter.setDocumentMode(p.document, HTML.DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = BEFORE_HTML_MODE;\n    p._processToken(token);\n}\n\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagName === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = BEFORE_HEAD_MODE;\n    } else {\n        tokenBeforeHtml(p, token);\n    }\n}\n\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\n\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = BEFORE_HEAD_MODE;\n    p._processToken(token);\n}\n\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.HEAD) {\n        p._insertElement(token, NS.HTML);\n        p.headElement = p.openElements.current;\n        p.insertionMode = IN_HEAD_MODE;\n    } else {\n        tokenBeforeHead(p, token);\n    }\n}\n\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    } else {\n        p._err(ERR.endTagWithoutMatchingOpenElement);\n    }\n}\n\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement($.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = IN_HEAD_MODE;\n    p._processToken(token);\n}\n\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.BASE || tn === $.BASEFONT || tn === $.BGSOUND || tn === $.LINK || tn === $.META) {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n    } else if (tn === $.TITLE) {\n        p._switchToTextParsing(token, Tokenizer.MODE.RCDATA);\n    } else if (tn === $.NOSCRIPT) {\n        if (p.options.scriptingEnabled) {\n            p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n        } else {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = IN_HEAD_NO_SCRIPT_MODE;\n        }\n    } else if (tn === $.NOFRAMES || tn === $.STYLE) {\n        p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n    } else if (tn === $.SCRIPT) {\n        p._switchToTextParsing(token, Tokenizer.MODE.SCRIPT_DATA);\n    } else if (tn === $.TEMPLATE) {\n        p._insertTemplate(token, NS.HTML);\n        p.activeFormattingElements.insertMarker();\n        p.framesetOk = false;\n        p.insertionMode = IN_TEMPLATE_MODE;\n        p._pushTmplInsertionMode(IN_TEMPLATE_MODE);\n    } else if (tn === $.HEAD) {\n        p._err(ERR.misplacedStartTagForHeadElement);\n    } else {\n        tokenInHead(p, token);\n    }\n}\n\nfunction endTagInHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HEAD) {\n        p.openElements.pop();\n        p.insertionMode = AFTER_HEAD_MODE;\n    } else if (tn === $.BODY || tn === $.BR || tn === $.HTML) {\n        tokenInHead(p, token);\n    } else if (tn === $.TEMPLATE) {\n        if (p.openElements.tmplCount > 0) {\n            p.openElements.generateImpliedEndTagsThoroughly();\n\n            if (p.openElements.currentTagName !== $.TEMPLATE) {\n                p._err(ERR.closingOfElementWithOpenChildElements);\n            }\n\n            p.openElements.popUntilTagNamePopped($.TEMPLATE);\n            p.activeFormattingElements.clearToLastMarker();\n            p._popTmplInsertionMode();\n            p._resetInsertionMode();\n        } else {\n            p._err(ERR.endTagWithoutMatchingOpenElement);\n        }\n    } else {\n        p._err(ERR.endTagWithoutMatchingOpenElement);\n    }\n}\n\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = AFTER_HEAD_MODE;\n    p._processToken(token);\n}\n\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (\n        tn === $.BASEFONT ||\n        tn === $.BGSOUND ||\n        tn === $.HEAD ||\n        tn === $.LINK ||\n        tn === $.META ||\n        tn === $.NOFRAMES ||\n        tn === $.STYLE\n    ) {\n        startTagInHead(p, token);\n    } else if (tn === $.NOSCRIPT) {\n        p._err(ERR.nestedNoscriptInHead);\n    } else {\n        tokenInHeadNoScript(p, token);\n    }\n}\n\nfunction endTagInHeadNoScript(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.NOSCRIPT) {\n        p.openElements.pop();\n        p.insertionMode = IN_HEAD_MODE;\n    } else if (tn === $.BR) {\n        tokenInHeadNoScript(p, token);\n    } else {\n        p._err(ERR.endTagWithoutMatchingOpenElement);\n    }\n}\n\nfunction tokenInHeadNoScript(p, token) {\n    const errCode =\n        token.type === Tokenizer.EOF_TOKEN ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n\n    p._err(errCode);\n    p.openElements.pop();\n    p.insertionMode = IN_HEAD_MODE;\n    p._processToken(token);\n}\n\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.BODY) {\n        p._insertElement(token, NS.HTML);\n        p.framesetOk = false;\n        p.insertionMode = IN_BODY_MODE;\n    } else if (tn === $.FRAMESET) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = IN_FRAMESET_MODE;\n    } else if (\n        tn === $.BASE ||\n        tn === $.BASEFONT ||\n        tn === $.BGSOUND ||\n        tn === $.LINK ||\n        tn === $.META ||\n        tn === $.NOFRAMES ||\n        tn === $.SCRIPT ||\n        tn === $.STYLE ||\n        tn === $.TEMPLATE ||\n        tn === $.TITLE\n    ) {\n        p._err(ERR.abandonedHeadElementChild);\n        p.openElements.push(p.headElement);\n        startTagInHead(p, token);\n        p.openElements.remove(p.headElement);\n    } else if (tn === $.HEAD) {\n        p._err(ERR.misplacedStartTagForHeadElement);\n    } else {\n        tokenAfterHead(p, token);\n    }\n}\n\nfunction endTagAfterHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenAfterHead(p, token);\n    } else if (tn === $.TEMPLATE) {\n        endTagInHead(p, token);\n    } else {\n        p._err(ERR.endTagWithoutMatchingOpenElement);\n    }\n}\n\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement($.BODY);\n    p.insertionMode = IN_BODY_MODE;\n    p._processToken(token);\n}\n\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\n\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\n\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\n\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\n\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = IN_FRAMESET_MODE;\n    }\n}\n\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    const tn = p.openElements.currentTagName;\n\n    if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {\n        p.openElements.pop();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\n\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n\n        p._insertElement(token, NS.HTML);\n\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\n\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n\n    const tn = token.tagName;\n\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const element = p.openElements.items[i];\n        const elementTn = p.treeAdapter.getTagName(element);\n        let closeTn = null;\n\n        if (tn === $.LI && elementTn === $.LI) {\n            closeTn = $.LI;\n        } else if ((tn === $.DD || tn === $.DT) && (elementTn === $.DD || elementTn === $.DT)) {\n            closeTn = elementTn;\n        }\n\n        if (closeTn) {\n            p.openElements.generateImpliedEndTagsWithExclusion(closeTn);\n            p.openElements.popUntilTagNamePopped(closeTn);\n            break;\n        }\n\n        if (elementTn !== $.ADDRESS && elementTn !== $.DIV && elementTn !== $.P && p._isSpecialElement(element)) {\n            break;\n        }\n    }\n\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\n}\n\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\n\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName($.A);\n\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\n\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\n\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\n\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\n\nfunction tableStartTagInBody(p, token) {\n    if (\n        p.treeAdapter.getDocumentMode(p.document) !== HTML.DOCUMENT_MODE.QUIRKS &&\n        p.openElements.hasInButtonScope($.P)\n    ) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = IN_TABLE_MODE;\n}\n\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\n\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n\n    const inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);\n\n    if (!inputType || inputType.toLowerCase() !== HIDDEN_INPUT_TYPE) {\n        p.framesetOk = false;\n    }\n\n    token.ackSelfClosing = true;\n}\n\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\n\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\n\nfunction imageStartTagInBody(p, token) {\n    token.tagName = $.IMG;\n    areaStartTagInBody(p, token);\n}\n\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = Tokenizer.MODE.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = TEXT_MODE;\n}\n\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n}\n\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n}\n\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as a rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n}\n\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n\n    if (\n        p.insertionMode === IN_TABLE_MODE ||\n        p.insertionMode === IN_CAPTION_MODE ||\n        p.insertionMode === IN_TABLE_BODY_MODE ||\n        p.insertionMode === IN_ROW_MODE ||\n        p.insertionMode === IN_CELL_MODE\n    ) {\n        p.insertionMode = IN_SELECT_IN_TABLE_MODE;\n    } else {\n        p.insertionMode = IN_SELECT_MODE;\n    }\n}\n\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagName === $.OPTION) {\n        p.openElements.pop();\n    }\n\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\n\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction menuStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    } else {\n        p._insertElement(token, NS.MATHML);\n    }\n\n    token.ackSelfClosing = true;\n}\n\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    } else {\n        p._insertElement(token, NS.SVG);\n    }\n\n    token.ackSelfClosing = true;\n}\n\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\n\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\nfunction startTagInBody(p, token) {\n    const tn = token.tagName;\n\n    switch (tn.length) {\n        case 1:\n            if (tn === $.I || tn === $.S || tn === $.B || tn === $.U) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.P) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.A) {\n                aStartTagInBody(p, token);\n            } else {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 2:\n            if (tn === $.DL || tn === $.OL || tn === $.UL) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {\n                numberedHeaderStartTagInBody(p, token);\n            } else if (tn === $.LI || tn === $.DD || tn === $.DT) {\n                listItemStartTagInBody(p, token);\n            } else if (tn === $.EM || tn === $.TT) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.BR) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.HR) {\n                hrStartTagInBody(p, token);\n            } else if (tn === $.RB) {\n                rbStartTagInBody(p, token);\n            } else if (tn === $.RT || tn === $.RP) {\n                rtStartTagInBody(p, token);\n            } else if (tn !== $.TH && tn !== $.TD && tn !== $.TR) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 3:\n            if (tn === $.DIV || tn === $.DIR || tn === $.NAV) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.PRE) {\n                preStartTagInBody(p, token);\n            } else if (tn === $.BIG) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.IMG || tn === $.WBR) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.XMP) {\n                xmpStartTagInBody(p, token);\n            } else if (tn === $.SVG) {\n                svgStartTagInBody(p, token);\n            } else if (tn === $.RTC) {\n                rbStartTagInBody(p, token);\n            } else if (tn !== $.COL) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 4:\n            if (tn === $.HTML) {\n                htmlStartTagInBody(p, token);\n            } else if (tn === $.BASE || tn === $.LINK || tn === $.META) {\n                startTagInHead(p, token);\n            } else if (tn === $.BODY) {\n                bodyStartTagInBody(p, token);\n            } else if (tn === $.MAIN || tn === $.MENU) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.FORM) {\n                formStartTagInBody(p, token);\n            } else if (tn === $.CODE || tn === $.FONT) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.NOBR) {\n                nobrStartTagInBody(p, token);\n            } else if (tn === $.AREA) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.MATH) {\n                mathStartTagInBody(p, token);\n            } else if (tn === $.MENU) {\n                menuStartTagInBody(p, token);\n            } else if (tn !== $.HEAD) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 5:\n            if (tn === $.STYLE || tn === $.TITLE) {\n                startTagInHead(p, token);\n            } else if (tn === $.ASIDE) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.SMALL) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.TABLE) {\n                tableStartTagInBody(p, token);\n            } else if (tn === $.EMBED) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.INPUT) {\n                inputStartTagInBody(p, token);\n            } else if (tn === $.PARAM || tn === $.TRACK) {\n                paramStartTagInBody(p, token);\n            } else if (tn === $.IMAGE) {\n                imageStartTagInBody(p, token);\n            } else if (tn !== $.FRAME && tn !== $.TBODY && tn !== $.TFOOT && tn !== $.THEAD) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 6:\n            if (tn === $.SCRIPT) {\n                startTagInHead(p, token);\n            } else if (\n                tn === $.CENTER ||\n                tn === $.FIGURE ||\n                tn === $.FOOTER ||\n                tn === $.HEADER ||\n                tn === $.HGROUP ||\n                tn === $.DIALOG\n            ) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.BUTTON) {\n                buttonStartTagInBody(p, token);\n            } else if (tn === $.STRIKE || tn === $.STRONG) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.APPLET || tn === $.OBJECT) {\n                appletStartTagInBody(p, token);\n            } else if (tn === $.KEYGEN) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.SOURCE) {\n                paramStartTagInBody(p, token);\n            } else if (tn === $.IFRAME) {\n                iframeStartTagInBody(p, token);\n            } else if (tn === $.SELECT) {\n                selectStartTagInBody(p, token);\n            } else if (tn === $.OPTION) {\n                optgroupStartTagInBody(p, token);\n            } else {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 7:\n            if (tn === $.BGSOUND) {\n                startTagInHead(p, token);\n            } else if (\n                tn === $.DETAILS ||\n                tn === $.ADDRESS ||\n                tn === $.ARTICLE ||\n                tn === $.SECTION ||\n                tn === $.SUMMARY\n            ) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.LISTING) {\n                preStartTagInBody(p, token);\n            } else if (tn === $.MARQUEE) {\n                appletStartTagInBody(p, token);\n            } else if (tn === $.NOEMBED) {\n                noembedStartTagInBody(p, token);\n            } else if (tn !== $.CAPTION) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 8:\n            if (tn === $.BASEFONT) {\n                startTagInHead(p, token);\n            } else if (tn === $.FRAMESET) {\n                framesetStartTagInBody(p, token);\n            } else if (tn === $.FIELDSET) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.TEXTAREA) {\n                textareaStartTagInBody(p, token);\n            } else if (tn === $.TEMPLATE) {\n                startTagInHead(p, token);\n            } else if (tn === $.NOSCRIPT) {\n                if (p.options.scriptingEnabled) {\n                    noembedStartTagInBody(p, token);\n                } else {\n                    genericStartTagInBody(p, token);\n                }\n            } else if (tn === $.OPTGROUP) {\n                optgroupStartTagInBody(p, token);\n            } else if (tn !== $.COLGROUP) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 9:\n            if (tn === $.PLAINTEXT) {\n                plaintextStartTagInBody(p, token);\n            } else {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 10:\n            if (tn === $.BLOCKQUOTE || tn === $.FIGCAPTION) {\n                addressStartTagInBody(p, token);\n            } else {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        default:\n            genericStartTagInBody(p, token);\n    }\n}\n\nfunction bodyEndTagInBody(p) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = AFTER_BODY_MODE;\n    }\n}\n\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = AFTER_BODY_MODE;\n        p._processToken(token);\n    }\n}\n\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagName;\n\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\n\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const formElement = p.formElement;\n\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        } else {\n            p.openElements.remove(formElement);\n        }\n    }\n}\n\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement($.P);\n    }\n\n    p._closePElement();\n}\n\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\n\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagName;\n\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\n\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\n\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagName;\n\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\n\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement($.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\n\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n\n        if (p.treeAdapter.getTagName(element) === tn) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tn);\n            p.openElements.popUntilElementPopped(element);\n            break;\n        }\n\n        if (p._isSpecialElement(element)) {\n            break;\n        }\n    }\n}\n\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\nfunction endTagInBody(p, token) {\n    const tn = token.tagName;\n\n    switch (tn.length) {\n        case 1:\n            if (tn === $.A || tn === $.B || tn === $.I || tn === $.S || tn === $.U) {\n                callAdoptionAgency(p, token);\n            } else if (tn === $.P) {\n                pEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 2:\n            if (tn === $.DL || tn === $.UL || tn === $.OL) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.LI) {\n                liEndTagInBody(p, token);\n            } else if (tn === $.DD || tn === $.DT) {\n                ddEndTagInBody(p, token);\n            } else if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {\n                numberedHeaderEndTagInBody(p, token);\n            } else if (tn === $.BR) {\n                brEndTagInBody(p, token);\n            } else if (tn === $.EM || tn === $.TT) {\n                callAdoptionAgency(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 3:\n            if (tn === $.BIG) {\n                callAdoptionAgency(p, token);\n            } else if (tn === $.DIR || tn === $.DIV || tn === $.NAV || tn === $.PRE) {\n                addressEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 4:\n            if (tn === $.BODY) {\n                bodyEndTagInBody(p, token);\n            } else if (tn === $.HTML) {\n                htmlEndTagInBody(p, token);\n            } else if (tn === $.FORM) {\n                formEndTagInBody(p, token);\n            } else if (tn === $.CODE || tn === $.FONT || tn === $.NOBR) {\n                callAdoptionAgency(p, token);\n            } else if (tn === $.MAIN || tn === $.MENU) {\n                addressEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 5:\n            if (tn === $.ASIDE) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.SMALL) {\n                callAdoptionAgency(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 6:\n            if (\n                tn === $.CENTER ||\n                tn === $.FIGURE ||\n                tn === $.FOOTER ||\n                tn === $.HEADER ||\n                tn === $.HGROUP ||\n                tn === $.DIALOG\n            ) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.APPLET || tn === $.OBJECT) {\n                appletEndTagInBody(p, token);\n            } else if (tn === $.STRIKE || tn === $.STRONG) {\n                callAdoptionAgency(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 7:\n            if (\n                tn === $.ADDRESS ||\n                tn === $.ARTICLE ||\n                tn === $.DETAILS ||\n                tn === $.SECTION ||\n                tn === $.SUMMARY ||\n                tn === $.LISTING\n            ) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.MARQUEE) {\n                appletEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 8:\n            if (tn === $.FIELDSET) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.TEMPLATE) {\n                endTagInHead(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 10:\n            if (tn === $.BLOCKQUOTE || tn === $.FIGCAPTION) {\n                addressEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        default:\n            genericEndTagInBody(p, token);\n    }\n}\n\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStackTop > -1) {\n        eofInTemplate(p, token);\n    } else {\n        p.stopped = true;\n    }\n}\n\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    if (token.tagName === $.SCRIPT) {\n        p.pendingScript = p.openElements.current;\n    }\n\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\n\nfunction eofInText(p, token) {\n    p._err(ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    const curTn = p.openElements.currentTagName;\n\n    if (curTn === $.TABLE || curTn === $.TBODY || curTn === $.TFOOT || curTn === $.THEAD || curTn === $.TR) {\n        p.pendingCharacterTokens = [];\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = IN_TABLE_TEXT_MODE;\n        p._processToken(token);\n    } else {\n        tokenInTable(p, token);\n    }\n}\n\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = IN_CAPTION_MODE;\n}\n\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = IN_COLUMN_GROUP_MODE;\n}\n\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement($.COLGROUP);\n    p.insertionMode = IN_COLUMN_GROUP_MODE;\n    p._processToken(token);\n}\n\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = IN_TABLE_BODY_MODE;\n}\n\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement($.TBODY);\n    p.insertionMode = IN_TABLE_BODY_MODE;\n    p._processToken(token);\n}\n\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processToken(token);\n    }\n}\n\nfunction inputStartTagInTable(p, token) {\n    const inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);\n\n    if (inputType && inputType.toLowerCase() === HIDDEN_INPUT_TYPE) {\n        p._appendElement(token, NS.HTML);\n    } else {\n        tokenInTable(p, token);\n    }\n\n    token.ackSelfClosing = true;\n}\n\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\n\nfunction startTagInTable(p, token) {\n    const tn = token.tagName;\n\n    switch (tn.length) {\n        case 2:\n            if (tn === $.TD || tn === $.TH || tn === $.TR) {\n                tdStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 3:\n            if (tn === $.COL) {\n                colStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 4:\n            if (tn === $.FORM) {\n                formStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 5:\n            if (tn === $.TABLE) {\n                tableStartTagInTable(p, token);\n            } else if (tn === $.STYLE) {\n                startTagInHead(p, token);\n            } else if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {\n                tbodyStartTagInTable(p, token);\n            } else if (tn === $.INPUT) {\n                inputStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 6:\n            if (tn === $.SCRIPT) {\n                startTagInHead(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 7:\n            if (tn === $.CAPTION) {\n                captionStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 8:\n            if (tn === $.COLGROUP) {\n                colgroupStartTagInTable(p, token);\n            } else if (tn === $.TEMPLATE) {\n                startTagInHead(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        default:\n            tokenInTable(p, token);\n    }\n}\n\nfunction endTagInTable(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TABLE) {\n        if (p.openElements.hasInTableScope($.TABLE)) {\n            p.openElements.popUntilTagNamePopped($.TABLE);\n            p._resetInsertionMode();\n        }\n    } else if (tn === $.TEMPLATE) {\n        endTagInHead(p, token);\n    } else if (\n        tn !== $.BODY &&\n        tn !== $.CAPTION &&\n        tn !== $.COL &&\n        tn !== $.COLGROUP &&\n        tn !== $.HTML &&\n        tn !== $.TBODY &&\n        tn !== $.TD &&\n        tn !== $.TFOOT &&\n        tn !== $.TH &&\n        tn !== $.THEAD &&\n        tn !== $.TR\n    ) {\n        tokenInTable(p, token);\n    }\n}\n\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n\n    p.fosterParentingEnabled = true;\n    p._processTokenInBodyMode(token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\n\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\n\nfunction tokenInTableText(p, token) {\n    let i = 0;\n\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    } else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCaption(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.CAPTION ||\n        tn === $.COL ||\n        tn === $.COLGROUP ||\n        tn === $.TBODY ||\n        tn === $.TD ||\n        tn === $.TFOOT ||\n        tn === $.TH ||\n        tn === $.THEAD ||\n        tn === $.TR\n    ) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = IN_TABLE_MODE;\n            p._processToken(token);\n        }\n    } else {\n        startTagInBody(p, token);\n    }\n}\n\nfunction endTagInCaption(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.CAPTION || tn === $.TABLE) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = IN_TABLE_MODE;\n\n            if (tn === $.TABLE) {\n                p._processToken(token);\n            }\n        }\n    } else if (\n        tn !== $.BODY &&\n        tn !== $.COL &&\n        tn !== $.COLGROUP &&\n        tn !== $.HTML &&\n        tn !== $.TBODY &&\n        tn !== $.TD &&\n        tn !== $.TFOOT &&\n        tn !== $.TH &&\n        tn !== $.THEAD &&\n        tn !== $.TR\n    ) {\n        endTagInBody(p, token);\n    }\n}\n\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.COL) {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n    } else if (tn === $.TEMPLATE) {\n        startTagInHead(p, token);\n    } else {\n        tokenInColumnGroup(p, token);\n    }\n}\n\nfunction endTagInColumnGroup(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.COLGROUP) {\n        if (p.openElements.currentTagName === $.COLGROUP) {\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_MODE;\n        }\n    } else if (tn === $.TEMPLATE) {\n        endTagInHead(p, token);\n    } else if (tn !== $.COL) {\n        tokenInColumnGroup(p, token);\n    }\n}\n\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagName === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = IN_TABLE_MODE;\n        p._processToken(token);\n    }\n}\n\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TR) {\n        p.openElements.clearBackToTableBodyContext();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = IN_ROW_MODE;\n    } else if (tn === $.TH || tn === $.TD) {\n        p.openElements.clearBackToTableBodyContext();\n        p._insertFakeElement($.TR);\n        p.insertionMode = IN_ROW_MODE;\n        p._processToken(token);\n    } else if (\n        tn === $.CAPTION ||\n        tn === $.COL ||\n        tn === $.COLGROUP ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD\n    ) {\n        if (p.openElements.hasTableBodyContextInTableScope()) {\n            p.openElements.clearBackToTableBodyContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_MODE;\n            p._processToken(token);\n        }\n    } else {\n        startTagInTable(p, token);\n    }\n}\n\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.clearBackToTableBodyContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_MODE;\n        }\n    } else if (tn === $.TABLE) {\n        if (p.openElements.hasTableBodyContextInTableScope()) {\n            p.openElements.clearBackToTableBodyContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_MODE;\n            p._processToken(token);\n        }\n    } else if (\n        (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP) ||\n        (tn !== $.HTML && tn !== $.TD && tn !== $.TH && tn !== $.TR)\n    ) {\n        endTagInTable(p, token);\n    }\n}\n\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TH || tn === $.TD) {\n        p.openElements.clearBackToTableRowContext();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = IN_CELL_MODE;\n        p.activeFormattingElements.insertMarker();\n    } else if (\n        tn === $.CAPTION ||\n        tn === $.COL ||\n        tn === $.COLGROUP ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR\n    ) {\n        if (p.openElements.hasInTableScope($.TR)) {\n            p.openElements.clearBackToTableRowContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_BODY_MODE;\n            p._processToken(token);\n        }\n    } else {\n        startTagInTable(p, token);\n    }\n}\n\nfunction endTagInRow(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TR) {\n        if (p.openElements.hasInTableScope($.TR)) {\n            p.openElements.clearBackToTableRowContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_BODY_MODE;\n        }\n    } else if (tn === $.TABLE) {\n        if (p.openElements.hasInTableScope($.TR)) {\n            p.openElements.clearBackToTableRowContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_BODY_MODE;\n            p._processToken(token);\n        }\n    } else if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {\n        if (p.openElements.hasInTableScope(tn) || p.openElements.hasInTableScope($.TR)) {\n            p.openElements.clearBackToTableRowContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_BODY_MODE;\n            p._processToken(token);\n        }\n    } else if (\n        (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP) ||\n        (tn !== $.HTML && tn !== $.TD && tn !== $.TH)\n    ) {\n        endTagInTable(p, token);\n    }\n}\n\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.CAPTION ||\n        tn === $.COL ||\n        tn === $.COLGROUP ||\n        tn === $.TBODY ||\n        tn === $.TD ||\n        tn === $.TFOOT ||\n        tn === $.TH ||\n        tn === $.THEAD ||\n        tn === $.TR\n    ) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            p._processToken(token);\n        }\n    } else {\n        startTagInBody(p, token);\n    }\n}\n\nfunction endTagInCell(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TD || tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped(tn);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = IN_ROW_MODE;\n        }\n    } else if (tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p._closeTableCell();\n            p._processToken(token);\n        }\n    } else if (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP && tn !== $.HTML) {\n        endTagInBody(p, token);\n    }\n}\n\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.OPTION) {\n        if (p.openElements.currentTagName === $.OPTION) {\n            p.openElements.pop();\n        }\n\n        p._insertElement(token, NS.HTML);\n    } else if (tn === $.OPTGROUP) {\n        if (p.openElements.currentTagName === $.OPTION) {\n            p.openElements.pop();\n        }\n\n        if (p.openElements.currentTagName === $.OPTGROUP) {\n            p.openElements.pop();\n        }\n\n        p._insertElement(token, NS.HTML);\n    } else if (tn === $.INPUT || tn === $.KEYGEN || tn === $.TEXTAREA || tn === $.SELECT) {\n        if (p.openElements.hasInSelectScope($.SELECT)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n\n            if (tn !== $.SELECT) {\n                p._processToken(token);\n            }\n        }\n    } else if (tn === $.SCRIPT || tn === $.TEMPLATE) {\n        startTagInHead(p, token);\n    }\n}\n\nfunction endTagInSelect(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.OPTGROUP) {\n        const prevOpenElement = p.openElements.items[p.openElements.stackTop - 1];\n        const prevOpenElementTn = prevOpenElement && p.treeAdapter.getTagName(prevOpenElement);\n\n        if (p.openElements.currentTagName === $.OPTION && prevOpenElementTn === $.OPTGROUP) {\n            p.openElements.pop();\n        }\n\n        if (p.openElements.currentTagName === $.OPTGROUP) {\n            p.openElements.pop();\n        }\n    } else if (tn === $.OPTION) {\n        if (p.openElements.currentTagName === $.OPTION) {\n            p.openElements.pop();\n        }\n    } else if (tn === $.SELECT && p.openElements.hasInSelectScope($.SELECT)) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n    } else if (tn === $.TEMPLATE) {\n        endTagInHead(p, token);\n    }\n}\n\n//12.2.5.4.17 The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH\n    ) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processToken(token);\n    } else {\n        startTagInSelect(p, token);\n    }\n}\n\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH\n    ) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p._processToken(token);\n        }\n    } else {\n        endTagInSelect(p, token);\n    }\n}\n\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.BASE ||\n        tn === $.BASEFONT ||\n        tn === $.BGSOUND ||\n        tn === $.LINK ||\n        tn === $.META ||\n        tn === $.NOFRAMES ||\n        tn === $.SCRIPT ||\n        tn === $.STYLE ||\n        tn === $.TEMPLATE ||\n        tn === $.TITLE\n    ) {\n        startTagInHead(p, token);\n    } else {\n        const newInsertionMode = TEMPLATE_INSERTION_MODE_SWITCH_MAP[tn] || IN_BODY_MODE;\n\n        p._popTmplInsertionMode();\n        p._pushTmplInsertionMode(newInsertionMode);\n        p.insertionMode = newInsertionMode;\n        p._processToken(token);\n    }\n}\n\nfunction endTagInTemplate(p, token) {\n    if (token.tagName === $.TEMPLATE) {\n        endTagInHead(p, token);\n    }\n}\n\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p._popTmplInsertionMode();\n        p._resetInsertionMode();\n        p._processToken(token);\n    } else {\n        p.stopped = true;\n    }\n}\n\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagName === $.HTML) {\n        startTagInBody(p, token);\n    } else {\n        tokenAfterBody(p, token);\n    }\n}\n\nfunction endTagAfterBody(p, token) {\n    if (token.tagName === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = AFTER_AFTER_BODY_MODE;\n        }\n    } else {\n        tokenAfterBody(p, token);\n    }\n}\n\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = IN_BODY_MODE;\n    p._processToken(token);\n}\n\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.FRAMESET) {\n        p._insertElement(token, NS.HTML);\n    } else if (tn === $.FRAME) {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n    } else if (tn === $.NOFRAMES) {\n        startTagInHead(p, token);\n    }\n}\n\nfunction endTagInFrameset(p, token) {\n    if (token.tagName === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n\n        if (!p.fragmentContext && p.openElements.currentTagName !== $.FRAMESET) {\n            p.insertionMode = AFTER_FRAMESET_MODE;\n        }\n    }\n}\n\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.NOFRAMES) {\n        startTagInHead(p, token);\n    }\n}\n\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagName === $.HTML) {\n        p.insertionMode = AFTER_AFTER_FRAMESET_MODE;\n    }\n}\n\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagName === $.HTML) {\n        startTagInBody(p, token);\n    } else {\n        tokenAfterAfterBody(p, token);\n    }\n}\n\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = IN_BODY_MODE;\n    p._processToken(token);\n}\n\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.NOFRAMES) {\n        startTagInHead(p, token);\n    }\n}\n\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\n\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\n\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token) && !p.fragmentContext) {\n        while (\n            p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n            !p._isIntegrationPoint(p.openElements.current)\n        ) {\n            p.openElements.pop();\n        }\n\n        p._processToken(token);\n    } else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        } else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n\n        foreignContent.adjustTokenXMLAttrs(token);\n\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        } else {\n            p._insertElement(token, currentNs);\n        }\n\n        token.ackSelfClosing = true;\n    }\n}\n\nfunction endTagInForeignContent(p, token) {\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._processToken(token);\n            break;\n        }\n\n        if (p.treeAdapter.getTagName(element).toLowerCase() === token.tagName) {\n            p.openElements.popUntilElementPopped(element);\n            break;\n        }\n    }\n}\n","'use strict';\n\nconst HTML = require('../common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES;\n\n//Element utils\n\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\nfunction isImpliedEndTagRequired(tn) {\n    switch (tn.length) {\n        case 1:\n            return tn === $.P;\n\n        case 2:\n            return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI;\n\n        case 3:\n            return tn === $.RTC;\n\n        case 6:\n            return tn === $.OPTION;\n\n        case 8:\n            return tn === $.OPTGROUP;\n    }\n\n    return false;\n}\n\nfunction isImpliedEndTagRequiredThoroughly(tn) {\n    switch (tn.length) {\n        case 1:\n            return tn === $.P;\n\n        case 2:\n            return (\n                tn === $.RB ||\n                tn === $.RP ||\n                tn === $.RT ||\n                tn === $.DD ||\n                tn === $.DT ||\n                tn === $.LI ||\n                tn === $.TD ||\n                tn === $.TH ||\n                tn === $.TR\n            );\n\n        case 3:\n            return tn === $.RTC;\n\n        case 5:\n            return tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD;\n\n        case 6:\n            return tn === $.OPTION;\n\n        case 7:\n            return tn === $.CAPTION;\n\n        case 8:\n            return tn === $.OPTGROUP || tn === $.COLGROUP;\n    }\n\n    return false;\n}\n\nfunction isScopingElement(tn, ns) {\n    switch (tn.length) {\n        case 2:\n            if (tn === $.TD || tn === $.TH) {\n                return ns === NS.HTML;\n            } else if (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS) {\n                return ns === NS.MATHML;\n            }\n\n            break;\n\n        case 4:\n            if (tn === $.HTML) {\n                return ns === NS.HTML;\n            } else if (tn === $.DESC) {\n                return ns === NS.SVG;\n            }\n\n            break;\n\n        case 5:\n            if (tn === $.TABLE) {\n                return ns === NS.HTML;\n            } else if (tn === $.MTEXT) {\n                return ns === NS.MATHML;\n            } else if (tn === $.TITLE) {\n                return ns === NS.SVG;\n            }\n\n            break;\n\n        case 6:\n            return (tn === $.APPLET || tn === $.OBJECT) && ns === NS.HTML;\n\n        case 7:\n            return (tn === $.CAPTION || tn === $.MARQUEE) && ns === NS.HTML;\n\n        case 8:\n            return tn === $.TEMPLATE && ns === NS.HTML;\n\n        case 13:\n            return tn === $.FOREIGN_OBJECT && ns === NS.SVG;\n\n        case 14:\n            return tn === $.ANNOTATION_XML && ns === NS.MATHML;\n    }\n\n    return false;\n}\n\n//Stack of open elements\nclass OpenElementStack {\n    constructor(document, treeAdapter) {\n        this.stackTop = -1;\n        this.items = [];\n        this.current = document;\n        this.currentTagName = null;\n        this.currentTmplContent = null;\n        this.tmplCount = 0;\n        this.treeAdapter = treeAdapter;\n    }\n\n    //Index of element\n    _indexOf(element) {\n        let idx = -1;\n\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.items[i] === element) {\n                idx = i;\n                break;\n            }\n        }\n        return idx;\n    }\n\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagName === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagName = this.current && this.treeAdapter.getTagName(this.current);\n\n        this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;\n    }\n\n    //Mutations\n    push(element) {\n        this.items[++this.stackTop] = element;\n        this._updateCurrentElement();\n\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n    }\n\n    pop() {\n        this.stackTop--;\n\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n\n        this._updateCurrentElement();\n    }\n\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n\n        this.items[idx] = newElement;\n\n        if (idx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n    }\n\n    insertAfter(referenceElement, newElement) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n\n        this.items.splice(insertionIdx, 0, newElement);\n\n        if (insertionIdx === ++this.stackTop) {\n            this._updateCurrentElement();\n        }\n    }\n\n    popUntilTagNamePopped(tagName) {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (tn === tagName && ns === NS.HTML) {\n                break;\n            }\n        }\n    }\n\n    popUntilElementPopped(element) {\n        while (this.stackTop > -1) {\n            const poppedElement = this.current;\n\n            this.pop();\n\n            if (poppedElement === element) {\n                break;\n            }\n        }\n    }\n\n    popUntilNumberedHeaderPopped() {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (\n                tn === $.H1 ||\n                tn === $.H2 ||\n                tn === $.H3 ||\n                tn === $.H4 ||\n                tn === $.H5 ||\n                (tn === $.H6 && ns === NS.HTML)\n            ) {\n                break;\n            }\n        }\n    }\n\n    popUntilTableCellPopped() {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (tn === $.TD || (tn === $.TH && ns === NS.HTML)) {\n                break;\n            }\n        }\n    }\n\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.stackTop = 0;\n        this._updateCurrentElement();\n    }\n\n    clearBackToTableContext() {\n        while (\n            (this.currentTagName !== $.TABLE && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    clearBackToTableBodyContext() {\n        while (\n            (this.currentTagName !== $.TBODY &&\n                this.currentTagName !== $.TFOOT &&\n                this.currentTagName !== $.THEAD &&\n                this.currentTagName !== $.TEMPLATE &&\n                this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    clearBackToTableRowContext() {\n        while (\n            (this.currentTagName !== $.TR && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    remove(element) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.items[i] === element) {\n                this.items.splice(i, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                break;\n            }\n        }\n    }\n\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        const element = this.items[1];\n\n        return element && this.treeAdapter.getTagName(element) === $.BODY ? element : null;\n    }\n\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n\n    getCommonAncestor(element) {\n        let elementIdx = this._indexOf(element);\n\n        return --elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.currentTagName === $.HTML;\n    }\n\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if (isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (\n                (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) &&\n                ns === NS.HTML\n            ) {\n                return true;\n            }\n\n            if (isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if ((tn === $.BUTTON && ns === NS.HTML) || isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === tagName) {\n                return true;\n            }\n\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === tagName) {\n                return true;\n            }\n\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (isImpliedEndTagRequired(this.currentTagName)) {\n            this.pop();\n        }\n    }\n\n    generateImpliedEndTagsThoroughly() {\n        while (isImpliedEndTagRequiredThoroughly(this.currentTagName)) {\n            this.pop();\n        }\n    }\n\n    generateImpliedEndTagsWithExclusion(exclusionTagName) {\n        while (isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName) {\n            this.pop();\n        }\n    }\n}\n\nmodule.exports = OpenElementStack;\n","'use strict';\n\nconst Preprocessor = require('./preprocessor');\nconst unicode = require('../common/unicode');\nconst neTree = require('./named-entity-data');\nconst ERR = require('../common/error-codes');\n\n//Aliases\nconst $ = unicode.CODE_POINTS;\nconst $$ = unicode.CODE_POINT_SEQUENCES;\n\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = {\n    0x80: 0x20ac,\n    0x82: 0x201a,\n    0x83: 0x0192,\n    0x84: 0x201e,\n    0x85: 0x2026,\n    0x86: 0x2020,\n    0x87: 0x2021,\n    0x88: 0x02c6,\n    0x89: 0x2030,\n    0x8a: 0x0160,\n    0x8b: 0x2039,\n    0x8c: 0x0152,\n    0x8e: 0x017d,\n    0x91: 0x2018,\n    0x92: 0x2019,\n    0x93: 0x201c,\n    0x94: 0x201d,\n    0x95: 0x2022,\n    0x96: 0x2013,\n    0x97: 0x2014,\n    0x98: 0x02dc,\n    0x99: 0x2122,\n    0x9a: 0x0161,\n    0x9b: 0x203a,\n    0x9c: 0x0153,\n    0x9e: 0x017e,\n    0x9f: 0x0178\n};\n\n// Named entity tree flags\nconst HAS_DATA_FLAG = 1 << 0;\nconst DATA_DUPLET_FLAG = 1 << 1;\nconst HAS_BRANCHES_FLAG = 1 << 2;\nconst MAX_BRANCH_MARKER_VALUE = HAS_DATA_FLAG | DATA_DUPLET_FLAG | HAS_BRANCHES_FLAG;\n\n//States\nconst DATA_STATE = 'DATA_STATE';\nconst RCDATA_STATE = 'RCDATA_STATE';\nconst RAWTEXT_STATE = 'RAWTEXT_STATE';\nconst SCRIPT_DATA_STATE = 'SCRIPT_DATA_STATE';\nconst PLAINTEXT_STATE = 'PLAINTEXT_STATE';\nconst TAG_OPEN_STATE = 'TAG_OPEN_STATE';\nconst END_TAG_OPEN_STATE = 'END_TAG_OPEN_STATE';\nconst TAG_NAME_STATE = 'TAG_NAME_STATE';\nconst RCDATA_LESS_THAN_SIGN_STATE = 'RCDATA_LESS_THAN_SIGN_STATE';\nconst RCDATA_END_TAG_OPEN_STATE = 'RCDATA_END_TAG_OPEN_STATE';\nconst RCDATA_END_TAG_NAME_STATE = 'RCDATA_END_TAG_NAME_STATE';\nconst RAWTEXT_LESS_THAN_SIGN_STATE = 'RAWTEXT_LESS_THAN_SIGN_STATE';\nconst RAWTEXT_END_TAG_OPEN_STATE = 'RAWTEXT_END_TAG_OPEN_STATE';\nconst RAWTEXT_END_TAG_NAME_STATE = 'RAWTEXT_END_TAG_NAME_STATE';\nconst SCRIPT_DATA_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_LESS_THAN_SIGN_STATE';\nconst SCRIPT_DATA_END_TAG_OPEN_STATE = 'SCRIPT_DATA_END_TAG_OPEN_STATE';\nconst SCRIPT_DATA_END_TAG_NAME_STATE = 'SCRIPT_DATA_END_TAG_NAME_STATE';\nconst SCRIPT_DATA_ESCAPE_START_STATE = 'SCRIPT_DATA_ESCAPE_START_STATE';\nconst SCRIPT_DATA_ESCAPE_START_DASH_STATE = 'SCRIPT_DATA_ESCAPE_START_DASH_STATE';\nconst SCRIPT_DATA_ESCAPED_STATE = 'SCRIPT_DATA_ESCAPED_STATE';\nconst SCRIPT_DATA_ESCAPED_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_STATE';\nconst SCRIPT_DATA_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_DASH_STATE';\nconst SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE';\nconst SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE';\nconst SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPED_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE';\nconst BEFORE_ATTRIBUTE_NAME_STATE = 'BEFORE_ATTRIBUTE_NAME_STATE';\nconst ATTRIBUTE_NAME_STATE = 'ATTRIBUTE_NAME_STATE';\nconst AFTER_ATTRIBUTE_NAME_STATE = 'AFTER_ATTRIBUTE_NAME_STATE';\nconst BEFORE_ATTRIBUTE_VALUE_STATE = 'BEFORE_ATTRIBUTE_VALUE_STATE';\nconst ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE';\nconst ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE';\nconst ATTRIBUTE_VALUE_UNQUOTED_STATE = 'ATTRIBUTE_VALUE_UNQUOTED_STATE';\nconst AFTER_ATTRIBUTE_VALUE_QUOTED_STATE = 'AFTER_ATTRIBUTE_VALUE_QUOTED_STATE';\nconst SELF_CLOSING_START_TAG_STATE = 'SELF_CLOSING_START_TAG_STATE';\nconst BOGUS_COMMENT_STATE = 'BOGUS_COMMENT_STATE';\nconst MARKUP_DECLARATION_OPEN_STATE = 'MARKUP_DECLARATION_OPEN_STATE';\nconst COMMENT_START_STATE = 'COMMENT_START_STATE';\nconst COMMENT_START_DASH_STATE = 'COMMENT_START_DASH_STATE';\nconst COMMENT_STATE = 'COMMENT_STATE';\nconst COMMENT_LESS_THAN_SIGN_STATE = 'COMMENT_LESS_THAN_SIGN_STATE';\nconst COMMENT_LESS_THAN_SIGN_BANG_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_STATE';\nconst COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE';\nconst COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE';\nconst COMMENT_END_DASH_STATE = 'COMMENT_END_DASH_STATE';\nconst COMMENT_END_STATE = 'COMMENT_END_STATE';\nconst COMMENT_END_BANG_STATE = 'COMMENT_END_BANG_STATE';\nconst DOCTYPE_STATE = 'DOCTYPE_STATE';\nconst BEFORE_DOCTYPE_NAME_STATE = 'BEFORE_DOCTYPE_NAME_STATE';\nconst DOCTYPE_NAME_STATE = 'DOCTYPE_NAME_STATE';\nconst AFTER_DOCTYPE_NAME_STATE = 'AFTER_DOCTYPE_NAME_STATE';\nconst AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE = 'AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE';\nconst BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE';\nconst DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE';\nconst DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE';\nconst AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE';\nconst BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE = 'BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE';\nconst AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE = 'AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE';\nconst BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE';\nconst DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE';\nconst DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE';\nconst AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE';\nconst BOGUS_DOCTYPE_STATE = 'BOGUS_DOCTYPE_STATE';\nconst CDATA_SECTION_STATE = 'CDATA_SECTION_STATE';\nconst CDATA_SECTION_BRACKET_STATE = 'CDATA_SECTION_BRACKET_STATE';\nconst CDATA_SECTION_END_STATE = 'CDATA_SECTION_END_STATE';\nconst CHARACTER_REFERENCE_STATE = 'CHARACTER_REFERENCE_STATE';\nconst NAMED_CHARACTER_REFERENCE_STATE = 'NAMED_CHARACTER_REFERENCE_STATE';\nconst AMBIGUOUS_AMPERSAND_STATE = 'AMBIGUOS_AMPERSAND_STATE';\nconst NUMERIC_CHARACTER_REFERENCE_STATE = 'NUMERIC_CHARACTER_REFERENCE_STATE';\nconst HEXADEMICAL_CHARACTER_REFERENCE_START_STATE = 'HEXADEMICAL_CHARACTER_REFERENCE_START_STATE';\nconst DECIMAL_CHARACTER_REFERENCE_START_STATE = 'DECIMAL_CHARACTER_REFERENCE_START_STATE';\nconst HEXADEMICAL_CHARACTER_REFERENCE_STATE = 'HEXADEMICAL_CHARACTER_REFERENCE_STATE';\nconst DECIMAL_CHARACTER_REFERENCE_STATE = 'DECIMAL_CHARACTER_REFERENCE_STATE';\nconst NUMERIC_CHARACTER_REFERENCE_END_STATE = 'NUMERIC_CHARACTER_REFERENCE_END_STATE';\n\n//Utils\n\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\n\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\n\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\n\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\n\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\n\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\n\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\n\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\n\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\n\nfunction toAsciiLowerCodePoint(cp) {\n    return cp + 0x0020;\n}\n\n//NOTE: String.fromCharCode() function can handle only characters from BMP subset.\n//So, we need to workaround this manually.\n//(see: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/fromCharCode#Getting_it_to_work_with_higher_values)\nfunction toChar(cp) {\n    if (cp <= 0xffff) {\n        return String.fromCharCode(cp);\n    }\n\n    cp -= 0x10000;\n    return String.fromCharCode(((cp >>> 10) & 0x3ff) | 0xd800) + String.fromCharCode(0xdc00 | (cp & 0x3ff));\n}\n\nfunction toAsciiLowerChar(cp) {\n    return String.fromCharCode(toAsciiLowerCodePoint(cp));\n}\n\nfunction findNamedEntityTreeBranch(nodeIx, cp) {\n    const branchCount = neTree[++nodeIx];\n    let lo = ++nodeIx;\n    let hi = lo + branchCount - 1;\n\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midCp = neTree[mid];\n\n        if (midCp < cp) {\n            lo = mid + 1;\n        } else if (midCp > cp) {\n            hi = mid - 1;\n        } else {\n            return neTree[mid + branchCount];\n        }\n    }\n\n    return -1;\n}\n\n//Tokenizer\nclass Tokenizer {\n    constructor() {\n        this.preprocessor = new Preprocessor();\n\n        this.tokenQueue = [];\n\n        this.allowCDATA = false;\n\n        this.state = DATA_STATE;\n        this.returnState = '';\n\n        this.charRefCode = -1;\n        this.tempBuff = [];\n        this.lastStartTagName = '';\n\n        this.consumedAfterSnapshot = -1;\n        this.active = false;\n\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = null;\n    }\n\n    //Errors\n    _err() {\n        // NOTE: err reporting is noop by default. Enabled by mixin.\n    }\n\n    _errOnNextCodePoint(err) {\n        this._consume();\n        this._err(err);\n        this._unconsume();\n    }\n\n    //API\n    getNextToken() {\n        while (!this.tokenQueue.length && this.active) {\n            this.consumedAfterSnapshot = 0;\n\n            const cp = this._consume();\n\n            if (!this._ensureHibernation()) {\n                this[this.state](cp);\n            }\n        }\n\n        return this.tokenQueue.shift();\n    }\n\n    write(chunk, isLastChunk) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n    }\n\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n    }\n\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            for (; this.consumedAfterSnapshot > 0; this.consumedAfterSnapshot--) {\n                this.preprocessor.retreat();\n            }\n\n            this.active = false;\n            this.tokenQueue.push({ type: Tokenizer.HIBERNATION_TOKEN });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n\n    _unconsume() {\n        this.consumedAfterSnapshot--;\n        this.preprocessor.retreat();\n    }\n\n    _reconsumeInState(state) {\n        this.state = state;\n        this._unconsume();\n    }\n\n    _consumeSequenceIfMatch(pattern, startCp, caseSensitive) {\n        let consumedCount = 0;\n        let isMatch = true;\n        const patternLength = pattern.length;\n        let patternPos = 0;\n        let cp = startCp;\n        let patternCp = void 0;\n\n        for (; patternPos < patternLength; patternPos++) {\n            if (patternPos > 0) {\n                cp = this._consume();\n                consumedCount++;\n            }\n\n            if (cp === $.EOF) {\n                isMatch = false;\n                break;\n            }\n\n            patternCp = pattern[patternPos];\n\n            if (cp !== patternCp && (caseSensitive || cp !== toAsciiLowerCodePoint(patternCp))) {\n                isMatch = false;\n                break;\n            }\n        }\n\n        if (!isMatch) {\n            while (consumedCount--) {\n                this._unconsume();\n            }\n        }\n\n        return isMatch;\n    }\n\n    //Temp buffer\n    _isTempBufferEqualToScriptString() {\n        if (this.tempBuff.length !== $$.SCRIPT_STRING.length) {\n            return false;\n        }\n\n        for (let i = 0; i < this.tempBuff.length; i++) {\n            if (this.tempBuff[i] !== $$.SCRIPT_STRING[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: Tokenizer.START_TAG_TOKEN,\n            tagName: '',\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: []\n        };\n    }\n\n    _createEndTagToken() {\n        this.currentToken = {\n            type: Tokenizer.END_TAG_TOKEN,\n            tagName: '',\n            selfClosing: false,\n            attrs: []\n        };\n    }\n\n    _createCommentToken() {\n        this.currentToken = {\n            type: Tokenizer.COMMENT_TOKEN,\n            data: ''\n        };\n    }\n\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: Tokenizer.DOCTYPE_TOKEN,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null\n        };\n    }\n\n    _createCharacterToken(type, ch) {\n        this.currentCharacterToken = {\n            type: type,\n            chars: ch\n        };\n    }\n\n    _createEOFToken() {\n        this.currentToken = { type: Tokenizer.EOF_TOKEN };\n    }\n\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: ''\n        };\n    }\n\n    _leaveAttrName(toState) {\n        if (Tokenizer.getTokenAttr(this.currentToken, this.currentAttr.name) === null) {\n            this.currentToken.attrs.push(this.currentAttr);\n        } else {\n            this._err(ERR.duplicateAttribute);\n        }\n\n        this.state = toState;\n    }\n\n    _leaveAttrValue(toState) {\n        this.state = toState;\n    }\n\n    //Token emission\n    _emitCurrentToken() {\n        this._emitCurrentCharacterToken();\n\n        const ct = this.currentToken;\n\n        this.currentToken = null;\n\n        //NOTE: store emited start tag's tagName to determine is the following end tag token is appropriate.\n        if (ct.type === Tokenizer.START_TAG_TOKEN) {\n            this.lastStartTagName = ct.tagName;\n        } else if (ct.type === Tokenizer.END_TAG_TOKEN) {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n        }\n\n        this.tokenQueue.push(ct);\n    }\n\n    _emitCurrentCharacterToken() {\n        if (this.currentCharacterToken) {\n            this.tokenQueue.push(this.currentCharacterToken);\n            this.currentCharacterToken = null;\n        }\n    }\n\n    _emitEOFToken() {\n        this._createEOFToken();\n        this._emitCurrentToken();\n    }\n\n    //Characters emission\n\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)NULL_CHARACTER_TOKEN - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)WHITESPACE_CHARACTER_TOKEN - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)CHARACTER_TOKEN - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken && this.currentCharacterToken.type !== type) {\n            this._emitCurrentCharacterToken();\n        }\n\n        if (this.currentCharacterToken) {\n            this.currentCharacterToken.chars += ch;\n        } else {\n            this._createCharacterToken(type, ch);\n        }\n    }\n\n    _emitCodePoint(cp) {\n        let type = Tokenizer.CHARACTER_TOKEN;\n\n        if (isWhitespace(cp)) {\n            type = Tokenizer.WHITESPACE_CHARACTER_TOKEN;\n        } else if (cp === $.NULL) {\n            type = Tokenizer.NULL_CHARACTER_TOKEN;\n        }\n\n        this._appendCharToCurrentCharacterToken(type, toChar(cp));\n    }\n\n    _emitSeveralCodePoints(codePoints) {\n        for (let i = 0; i < codePoints.length; i++) {\n            this._emitCodePoint(codePoints[i]);\n        }\n    }\n\n    //NOTE: used then we emit character explicitly. This is always a non-whitespace and a non-null character.\n    //So we can avoid additional checks here.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(Tokenizer.CHARACTER_TOKEN, ch);\n    }\n\n    // Character reference helpers\n    _matchNamedCharacterReference(startCp) {\n        let result = null;\n        let excess = 1;\n        let i = findNamedEntityTreeBranch(0, startCp);\n\n        this.tempBuff.push(startCp);\n\n        while (i > -1) {\n            const current = neTree[i];\n            const inNode = current < MAX_BRANCH_MARKER_VALUE;\n            const nodeWithData = inNode && current & HAS_DATA_FLAG;\n\n            if (nodeWithData) {\n                //NOTE: we use greedy search, so we continue lookup at this point\n                result = current & DATA_DUPLET_FLAG ? [neTree[++i], neTree[++i]] : [neTree[++i]];\n                excess = 0;\n            }\n\n            const cp = this._consume();\n\n            this.tempBuff.push(cp);\n            excess++;\n\n            if (cp === $.EOF) {\n                break;\n            }\n\n            if (inNode) {\n                i = current & HAS_BRANCHES_FLAG ? findNamedEntityTreeBranch(i, cp) : -1;\n            } else {\n                i = cp === current ? ++i : -1;\n            }\n        }\n\n        while (excess--) {\n            this.tempBuff.pop();\n            this._unconsume();\n        }\n\n        return result;\n    }\n\n    _isCharacterReferenceInAttribute() {\n        return (\n            this.returnState === ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE ||\n            this.returnState === ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE ||\n            this.returnState === ATTRIBUTE_VALUE_UNQUOTED_STATE\n        );\n    }\n\n    _isCharacterReferenceAttributeQuirk(withSemicolon) {\n        if (!withSemicolon && this._isCharacterReferenceInAttribute()) {\n            const nextCp = this._consume();\n\n            this._unconsume();\n\n            return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n        }\n\n        return false;\n    }\n\n    _flushCodePointsConsumedAsCharacterReference() {\n        if (this._isCharacterReferenceInAttribute()) {\n            for (let i = 0; i < this.tempBuff.length; i++) {\n                this.currentAttr.value += toChar(this.tempBuff[i]);\n            }\n        } else {\n            this._emitSeveralCodePoints(this.tempBuff);\n        }\n\n        this.tempBuff = [];\n    }\n\n    // State machine\n\n    // Data state\n    //------------------------------------------------------------------\n    [DATA_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.LESS_THAN_SIGN) {\n            this.state = TAG_OPEN_STATE;\n        } else if (cp === $.AMPERSAND) {\n            this.returnState = DATA_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitCodePoint(cp);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    //  RCDATA state\n    //------------------------------------------------------------------\n    [RCDATA_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.AMPERSAND) {\n            this.returnState = RCDATA_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = RCDATA_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    [RAWTEXT_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.LESS_THAN_SIGN) {\n            this.state = RAWTEXT_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    [PLAINTEXT_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Tag open state\n    //------------------------------------------------------------------\n    [TAG_OPEN_STATE](cp) {\n        if (cp === $.EXCLAMATION_MARK) {\n            this.state = MARKUP_DECLARATION_OPEN_STATE;\n        } else if (cp === $.SOLIDUS) {\n            this.state = END_TAG_OPEN_STATE;\n        } else if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this._reconsumeInState(TAG_NAME_STATE);\n        } else if (cp === $.QUESTION_MARK) {\n            this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n            this._createCommentToken();\n            this._reconsumeInState(BOGUS_COMMENT_STATE);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofBeforeTagName);\n            this._emitChars('<');\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.invalidFirstCharacterOfTagName);\n            this._emitChars('<');\n            this._reconsumeInState(DATA_STATE);\n        }\n    }\n\n    // End tag open state\n    //------------------------------------------------------------------\n    [END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(TAG_NAME_STATE);\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingEndTagName);\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofBeforeTagName);\n            this._emitChars('</');\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.invalidFirstCharacterOfTagName);\n            this._createCommentToken();\n            this._reconsumeInState(BOGUS_COMMENT_STATE);\n        }\n    }\n\n    // Tag name state\n    //------------------------------------------------------------------\n    [TAG_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n        } else if (cp === $.SOLIDUS) {\n            this.state = SELF_CLOSING_START_TAG_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.tagName += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this.currentToken.tagName += toChar(cp);\n        }\n    }\n\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    [RCDATA_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = RCDATA_END_TAG_OPEN_STATE;\n        } else {\n            this._emitChars('<');\n            this._reconsumeInState(RCDATA_STATE);\n        }\n    }\n\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    [RCDATA_END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(RCDATA_END_TAG_NAME_STATE);\n        } else {\n            this._emitChars('</');\n            this._reconsumeInState(RCDATA_STATE);\n        }\n    }\n\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    [RCDATA_END_TAG_NAME_STATE](cp) {\n        if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n            this.tempBuff.push(cp);\n        } else if (isAsciiLower(cp)) {\n            this.currentToken.tagName += toChar(cp);\n            this.tempBuff.push(cp);\n        } else {\n            if (this.lastStartTagName === this.currentToken.tagName) {\n                if (isWhitespace(cp)) {\n                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                    return;\n                }\n\n                if (cp === $.SOLIDUS) {\n                    this.state = SELF_CLOSING_START_TAG_STATE;\n                    return;\n                }\n\n                if (cp === $.GREATER_THAN_SIGN) {\n                    this.state = DATA_STATE;\n                    this._emitCurrentToken();\n                    return;\n                }\n            }\n\n            this._emitChars('</');\n            this._emitSeveralCodePoints(this.tempBuff);\n            this._reconsumeInState(RCDATA_STATE);\n        }\n    }\n\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    [RAWTEXT_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = RAWTEXT_END_TAG_OPEN_STATE;\n        } else {\n            this._emitChars('<');\n            this._reconsumeInState(RAWTEXT_STATE);\n        }\n    }\n\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    [RAWTEXT_END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(RAWTEXT_END_TAG_NAME_STATE);\n        } else {\n            this._emitChars('</');\n            this._reconsumeInState(RAWTEXT_STATE);\n        }\n    }\n\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    [RAWTEXT_END_TAG_NAME_STATE](cp) {\n        if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n            this.tempBuff.push(cp);\n        } else if (isAsciiLower(cp)) {\n            this.currentToken.tagName += toChar(cp);\n            this.tempBuff.push(cp);\n        } else {\n            if (this.lastStartTagName === this.currentToken.tagName) {\n                if (isWhitespace(cp)) {\n                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                    return;\n                }\n\n                if (cp === $.SOLIDUS) {\n                    this.state = SELF_CLOSING_START_TAG_STATE;\n                    return;\n                }\n\n                if (cp === $.GREATER_THAN_SIGN) {\n                    this._emitCurrentToken();\n                    this.state = DATA_STATE;\n                    return;\n                }\n            }\n\n            this._emitChars('</');\n            this._emitSeveralCodePoints(this.tempBuff);\n            this._reconsumeInState(RAWTEXT_STATE);\n        }\n    }\n\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = SCRIPT_DATA_END_TAG_OPEN_STATE;\n        } else if (cp === $.EXCLAMATION_MARK) {\n            this.state = SCRIPT_DATA_ESCAPE_START_STATE;\n            this._emitChars('<!');\n        } else {\n            this._emitChars('<');\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(SCRIPT_DATA_END_TAG_NAME_STATE);\n        } else {\n            this._emitChars('</');\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_END_TAG_NAME_STATE](cp) {\n        if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n            this.tempBuff.push(cp);\n        } else if (isAsciiLower(cp)) {\n            this.currentToken.tagName += toChar(cp);\n            this.tempBuff.push(cp);\n        } else {\n            if (this.lastStartTagName === this.currentToken.tagName) {\n                if (isWhitespace(cp)) {\n                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                    return;\n                } else if (cp === $.SOLIDUS) {\n                    this.state = SELF_CLOSING_START_TAG_STATE;\n                    return;\n                } else if (cp === $.GREATER_THAN_SIGN) {\n                    this._emitCurrentToken();\n                    this.state = DATA_STATE;\n                    return;\n                }\n            }\n\n            this._emitChars('</');\n            this._emitSeveralCodePoints(this.tempBuff);\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data escape start state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPE_START_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_ESCAPE_START_DASH_STATE;\n            this._emitChars('-');\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPE_START_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n            this._emitChars('-');\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data escaped state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_ESCAPED_DASH_STATE;\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.state = SCRIPT_DATA_ESCAPED_STATE;\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this.state = SCRIPT_DATA_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_DASH_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = SCRIPT_DATA_STATE;\n            this._emitChars('>');\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.state = SCRIPT_DATA_ESCAPED_STATE;\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this.state = SCRIPT_DATA_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE;\n        } else if (isAsciiLetter(cp)) {\n            this.tempBuff = [];\n            this._emitChars('<');\n            this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE);\n        } else {\n            this._emitChars('<');\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n        }\n    }\n\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE);\n        } else {\n            this._emitChars('</');\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n        }\n    }\n\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE](cp) {\n        if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n            this.tempBuff.push(cp);\n        } else if (isAsciiLower(cp)) {\n            this.currentToken.tagName += toChar(cp);\n            this.tempBuff.push(cp);\n        } else {\n            if (this.lastStartTagName === this.currentToken.tagName) {\n                if (isWhitespace(cp)) {\n                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                    return;\n                }\n\n                if (cp === $.SOLIDUS) {\n                    this.state = SELF_CLOSING_START_TAG_STATE;\n                    return;\n                }\n\n                if (cp === $.GREATER_THAN_SIGN) {\n                    this._emitCurrentToken();\n                    this.state = DATA_STATE;\n                    return;\n                }\n            }\n\n            this._emitChars('</');\n            this._emitSeveralCodePoints(this.tempBuff);\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n        }\n    }\n\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE](cp) {\n        if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n            this.state = this._isTempBufferEqualToScriptString()\n                ? SCRIPT_DATA_DOUBLE_ESCAPED_STATE\n                : SCRIPT_DATA_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        } else if (isAsciiUpper(cp)) {\n            this.tempBuff.push(toAsciiLowerCodePoint(cp));\n            this._emitCodePoint(cp);\n        } else if (isAsciiLower(cp)) {\n            this.tempBuff.push(cp);\n            this._emitCodePoint(cp);\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n        }\n    }\n\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPED_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE;\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n            this._emitChars('<');\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE;\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n            this._emitChars('<');\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n            this._emitChars('<');\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = SCRIPT_DATA_STATE;\n            this._emitChars('>');\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE;\n            this._emitChars('/');\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n        }\n    }\n\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE](cp) {\n        if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n            this.state = this._isTempBufferEqualToScriptString()\n                ? SCRIPT_DATA_ESCAPED_STATE\n                : SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n\n            this._emitCodePoint(cp);\n        } else if (isAsciiUpper(cp)) {\n            this.tempBuff.push(toAsciiLowerCodePoint(cp));\n            this._emitCodePoint(cp);\n        } else if (isAsciiLower(cp)) {\n            this.tempBuff.push(cp);\n            this._emitCodePoint(cp);\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n        }\n    }\n\n    // Before attribute name state\n    //------------------------------------------------------------------\n    [BEFORE_ATTRIBUTE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {\n            this._reconsumeInState(AFTER_ATTRIBUTE_NAME_STATE);\n        } else if (cp === $.EQUALS_SIGN) {\n            this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n            this._createAttr('=');\n            this.state = ATTRIBUTE_NAME_STATE;\n        } else {\n            this._createAttr('');\n            this._reconsumeInState(ATTRIBUTE_NAME_STATE);\n        }\n    }\n\n    // Attribute name state\n    //------------------------------------------------------------------\n    [ATTRIBUTE_NAME_STATE](cp) {\n        if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {\n            this._leaveAttrName(AFTER_ATTRIBUTE_NAME_STATE);\n            this._unconsume();\n        } else if (cp === $.EQUALS_SIGN) {\n            this._leaveAttrName(BEFORE_ATTRIBUTE_VALUE_STATE);\n        } else if (isAsciiUpper(cp)) {\n            this.currentAttr.name += toAsciiLowerChar(cp);\n        } else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN) {\n            this._err(ERR.unexpectedCharacterInAttributeName);\n            this.currentAttr.name += toChar(cp);\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentAttr.name += unicode.REPLACEMENT_CHARACTER;\n        } else {\n            this.currentAttr.name += toChar(cp);\n        }\n    }\n\n    // After attribute name state\n    //------------------------------------------------------------------\n    [AFTER_ATTRIBUTE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.SOLIDUS) {\n            this.state = SELF_CLOSING_START_TAG_STATE;\n        } else if (cp === $.EQUALS_SIGN) {\n            this.state = BEFORE_ATTRIBUTE_VALUE_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this._createAttr('');\n            this._reconsumeInState(ATTRIBUTE_NAME_STATE);\n        }\n    }\n\n    // Before attribute value state\n    //------------------------------------------------------------------\n    [BEFORE_ATTRIBUTE_VALUE_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.QUOTATION_MARK) {\n            this.state = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this.state = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingAttributeValue);\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else {\n            this._reconsumeInState(ATTRIBUTE_VALUE_UNQUOTED_STATE);\n        }\n    }\n\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    [ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE](cp) {\n        if (cp === $.QUOTATION_MARK) {\n            this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;\n        } else if (cp === $.AMPERSAND) {\n            this.returnState = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this.currentAttr.value += toChar(cp);\n        }\n    }\n\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    [ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE](cp) {\n        if (cp === $.APOSTROPHE) {\n            this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;\n        } else if (cp === $.AMPERSAND) {\n            this.returnState = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this.currentAttr.value += toChar(cp);\n        }\n    }\n\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    [ATTRIBUTE_VALUE_UNQUOTED_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);\n        } else if (cp === $.AMPERSAND) {\n            this.returnState = ATTRIBUTE_VALUE_UNQUOTED_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._leaveAttrValue(DATA_STATE);\n            this._emitCurrentToken();\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;\n        } else if (\n            cp === $.QUOTATION_MARK ||\n            cp === $.APOSTROPHE ||\n            cp === $.LESS_THAN_SIGN ||\n            cp === $.EQUALS_SIGN ||\n            cp === $.GRAVE_ACCENT\n        ) {\n            this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n            this.currentAttr.value += toChar(cp);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this.currentAttr.value += toChar(cp);\n        }\n    }\n\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    [AFTER_ATTRIBUTE_VALUE_QUOTED_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);\n        } else if (cp === $.SOLIDUS) {\n            this._leaveAttrValue(SELF_CLOSING_START_TAG_STATE);\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._leaveAttrValue(DATA_STATE);\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingWhitespaceBetweenAttributes);\n            this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n        }\n    }\n\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    [SELF_CLOSING_START_TAG_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.currentToken.selfClosing = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.unexpectedSolidusInTag);\n            this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n        }\n    }\n\n    // Bogus comment state\n    //------------------------------------------------------------------\n    [BOGUS_COMMENT_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.data += unicode.REPLACEMENT_CHARACTER;\n        } else {\n            this.currentToken.data += toChar(cp);\n        }\n    }\n\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    [MARKUP_DECLARATION_OPEN_STATE](cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH_STRING, cp, true)) {\n            this._createCommentToken();\n            this.state = COMMENT_START_STATE;\n        } else if (this._consumeSequenceIfMatch($$.DOCTYPE_STRING, cp, false)) {\n            this.state = DOCTYPE_STATE;\n        } else if (this._consumeSequenceIfMatch($$.CDATA_START_STRING, cp, true)) {\n            if (this.allowCDATA) {\n                this.state = CDATA_SECTION_STATE;\n            } else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken();\n                this.currentToken.data = '[CDATA[';\n                this.state = BOGUS_COMMENT_STATE;\n            }\n        }\n\n        //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken();\n            this._reconsumeInState(BOGUS_COMMENT_STATE);\n        }\n    }\n\n    // Comment start state\n    //------------------------------------------------------------------\n    [COMMENT_START_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_START_DASH_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptClosingOfEmptyComment);\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else {\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment start dash state\n    //------------------------------------------------------------------\n    [COMMENT_START_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_END_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptClosingOfEmptyComment);\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += '-';\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment state\n    //------------------------------------------------------------------\n    [COMMENT_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_END_DASH_STATE;\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.currentToken.data += '<';\n            this.state = COMMENT_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.data += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += toChar(cp);\n        }\n    }\n\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    [COMMENT_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.EXCLAMATION_MARK) {\n            this.currentToken.data += '!';\n            this.state = COMMENT_LESS_THAN_SIGN_BANG_STATE;\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.currentToken.data += '!';\n        } else {\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    [COMMENT_LESS_THAN_SIGN_BANG_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE;\n        } else {\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    [COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE;\n        } else {\n            this._reconsumeInState(COMMENT_END_DASH_STATE);\n        }\n    }\n\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    [COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE](cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n\n        this._reconsumeInState(COMMENT_END_STATE);\n    }\n\n    // Comment end dash state\n    //------------------------------------------------------------------\n    [COMMENT_END_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_END_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += '-';\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment end state\n    //------------------------------------------------------------------\n    [COMMENT_END_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EXCLAMATION_MARK) {\n            this.state = COMMENT_END_BANG_STATE;\n        } else if (cp === $.HYPHEN_MINUS) {\n            this.currentToken.data += '-';\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += '--';\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment end bang state\n    //------------------------------------------------------------------\n    [COMMENT_END_BANG_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.currentToken.data += '--!';\n            this.state = COMMENT_END_DASH_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.incorrectlyClosedComment);\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += '--!';\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    [DOCTYPE_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BEFORE_DOCTYPE_NAME_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this._createDoctypeToken(null);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingWhitespaceBeforeDoctypeName);\n            this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE);\n        }\n    }\n\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    [BEFORE_DOCTYPE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(toAsciiLowerChar(cp));\n            this.state = DOCTYPE_NAME_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._createDoctypeToken(unicode.REPLACEMENT_CHARACTER);\n            this.state = DOCTYPE_NAME_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypeName);\n            this._createDoctypeToken(null);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this._createDoctypeToken(null);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._createDoctypeToken(toChar(cp));\n            this.state = DOCTYPE_NAME_STATE;\n        }\n    }\n\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    [DOCTYPE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = AFTER_DOCTYPE_NAME_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (isAsciiUpper(cp)) {\n            this.currentToken.name += toAsciiLowerChar(cp);\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.name += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.name += toChar(cp);\n        }\n    }\n\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else if (this._consumeSequenceIfMatch($$.PUBLIC_STRING, cp, false)) {\n            this.state = AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE;\n        } else if (this._consumeSequenceIfMatch($$.SYSTEM_STRING, cp, false)) {\n            this.state = AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE;\n        }\n        //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\n        } else if (cp === $.QUOTATION_MARK) {\n            this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n            this.currentToken.publicId = '';\n            this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n            this.currentToken.publicId = '';\n            this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    [BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.QUOTATION_MARK) {\n            this.currentToken.publicId = '';\n            this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this.currentToken.publicId = '';\n            this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    [DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE](cp) {\n        if (cp === $.QUOTATION_MARK) {\n            this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.publicId += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.publicId += toChar(cp);\n        }\n    }\n\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    [DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE](cp) {\n        if (cp === $.APOSTROPHE) {\n            this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.publicId += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.publicId += toChar(cp);\n        }\n    }\n\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.QUOTATION_MARK) {\n            this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    [BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.GREATER_THAN_SIGN) {\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.QUOTATION_MARK) {\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n        } else if (cp === $.QUOTATION_MARK) {\n            this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    [BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.QUOTATION_MARK) {\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    [DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE](cp) {\n        if (cp === $.QUOTATION_MARK) {\n            this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.systemId += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.systemId += toChar(cp);\n        }\n    }\n\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    [DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE](cp) {\n        if (cp === $.APOSTROPHE) {\n            this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.systemId += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.systemId += toChar(cp);\n        }\n    }\n\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.GREATER_THAN_SIGN) {\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    [BOGUS_DOCTYPE_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n        } else if (cp === $.EOF) {\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        }\n    }\n\n    // CDATA section state\n    //------------------------------------------------------------------\n    [CDATA_SECTION_STATE](cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = CDATA_SECTION_BRACKET_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInCdata);\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    [CDATA_SECTION_BRACKET_STATE](cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = CDATA_SECTION_END_STATE;\n        } else {\n            this._emitChars(']');\n            this._reconsumeInState(CDATA_SECTION_STATE);\n        }\n    }\n\n    // CDATA section end state\n    //------------------------------------------------------------------\n    [CDATA_SECTION_END_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n        } else if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this._emitChars(']');\n        } else {\n            this._emitChars(']]');\n            this._reconsumeInState(CDATA_SECTION_STATE);\n        }\n    }\n\n    // Character reference state\n    //------------------------------------------------------------------\n    [CHARACTER_REFERENCE_STATE](cp) {\n        this.tempBuff = [$.AMPERSAND];\n\n        if (cp === $.NUMBER_SIGN) {\n            this.tempBuff.push(cp);\n            this.state = NUMERIC_CHARACTER_REFERENCE_STATE;\n        } else if (isAsciiAlphaNumeric(cp)) {\n            this._reconsumeInState(NAMED_CHARACTER_REFERENCE_STATE);\n        } else {\n            this._flushCodePointsConsumedAsCharacterReference();\n            this._reconsumeInState(this.returnState);\n        }\n    }\n\n    // Named character reference state\n    //------------------------------------------------------------------\n    [NAMED_CHARACTER_REFERENCE_STATE](cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n\n        //NOTE: matching can be abrupted by hibernation. In that case match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            this.tempBuff = [$.AMPERSAND];\n        } else if (matchResult) {\n            const withSemicolon = this.tempBuff[this.tempBuff.length - 1] === $.SEMICOLON;\n\n            if (!this._isCharacterReferenceAttributeQuirk(withSemicolon)) {\n                if (!withSemicolon) {\n                    this._errOnNextCodePoint(ERR.missingSemicolonAfterCharacterReference);\n                }\n\n                this.tempBuff = matchResult;\n            }\n\n            this._flushCodePointsConsumedAsCharacterReference();\n            this.state = this.returnState;\n        } else {\n            this._flushCodePointsConsumedAsCharacterReference();\n            this.state = AMBIGUOUS_AMPERSAND_STATE;\n        }\n    }\n\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    [AMBIGUOUS_AMPERSAND_STATE](cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            if (this._isCharacterReferenceInAttribute()) {\n                this.currentAttr.value += toChar(cp);\n            } else {\n                this._emitCodePoint(cp);\n            }\n        } else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n\n            this._reconsumeInState(this.returnState);\n        }\n    }\n\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    [NUMERIC_CHARACTER_REFERENCE_STATE](cp) {\n        this.charRefCode = 0;\n\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.tempBuff.push(cp);\n            this.state = HEXADEMICAL_CHARACTER_REFERENCE_START_STATE;\n        } else {\n            this._reconsumeInState(DECIMAL_CHARACTER_REFERENCE_START_STATE);\n        }\n    }\n\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    [HEXADEMICAL_CHARACTER_REFERENCE_START_STATE](cp) {\n        if (isAsciiHexDigit(cp)) {\n            this._reconsumeInState(HEXADEMICAL_CHARACTER_REFERENCE_STATE);\n        } else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointsConsumedAsCharacterReference();\n            this._reconsumeInState(this.returnState);\n        }\n    }\n\n    // Decimal character reference start state\n    //------------------------------------------------------------------\n    [DECIMAL_CHARACTER_REFERENCE_START_STATE](cp) {\n        if (isAsciiDigit(cp)) {\n            this._reconsumeInState(DECIMAL_CHARACTER_REFERENCE_STATE);\n        } else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointsConsumedAsCharacterReference();\n            this._reconsumeInState(this.returnState);\n        }\n    }\n\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    [HEXADEMICAL_CHARACTER_REFERENCE_STATE](cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        } else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        } else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        } else if (cp === $.SEMICOLON) {\n            this.state = NUMERIC_CHARACTER_REFERENCE_END_STATE;\n        } else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this._reconsumeInState(NUMERIC_CHARACTER_REFERENCE_END_STATE);\n        }\n    }\n\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    [DECIMAL_CHARACTER_REFERENCE_STATE](cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        } else if (cp === $.SEMICOLON) {\n            this.state = NUMERIC_CHARACTER_REFERENCE_END_STATE;\n        } else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this._reconsumeInState(NUMERIC_CHARACTER_REFERENCE_END_STATE);\n        }\n    }\n\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    [NUMERIC_CHARACTER_REFERENCE_END_STATE]() {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        } else if (this.charRefCode > 0x10ffff) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        } else if (unicode.isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        } else if (unicode.isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        } else if (unicode.isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS[this.charRefCode];\n\n            if (replacement) {\n                this.charRefCode = replacement;\n            }\n        }\n\n        this.tempBuff = [this.charRefCode];\n\n        this._flushCodePointsConsumedAsCharacterReference();\n        this._reconsumeInState(this.returnState);\n    }\n}\n\n//Token types\nTokenizer.CHARACTER_TOKEN = 'CHARACTER_TOKEN';\nTokenizer.NULL_CHARACTER_TOKEN = 'NULL_CHARACTER_TOKEN';\nTokenizer.WHITESPACE_CHARACTER_TOKEN = 'WHITESPACE_CHARACTER_TOKEN';\nTokenizer.START_TAG_TOKEN = 'START_TAG_TOKEN';\nTokenizer.END_TAG_TOKEN = 'END_TAG_TOKEN';\nTokenizer.COMMENT_TOKEN = 'COMMENT_TOKEN';\nTokenizer.DOCTYPE_TOKEN = 'DOCTYPE_TOKEN';\nTokenizer.EOF_TOKEN = 'EOF_TOKEN';\nTokenizer.HIBERNATION_TOKEN = 'HIBERNATION_TOKEN';\n\n//Tokenizer initial states for different modes\nTokenizer.MODE = {\n    DATA: DATA_STATE,\n    RCDATA: RCDATA_STATE,\n    RAWTEXT: RAWTEXT_STATE,\n    SCRIPT_DATA: SCRIPT_DATA_STATE,\n    PLAINTEXT: PLAINTEXT_STATE\n};\n\n//Static\nTokenizer.getTokenAttr = function(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n\n    return null;\n};\n\nmodule.exports = Tokenizer;\n","'use strict';\n\n//NOTE: this file contains auto-generated array mapped radix tree that is used for the named entity references consumption\n//(details: https://github.com/inikulin/parse5/tree/master/scripts/generate-named-entity-data/README.md)\nmodule.exports = new Uint16Array([4,52,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,106,303,412,810,1432,1701,1796,1987,2114,2360,2420,2484,3170,3251,4140,4393,4575,4610,5106,5512,5728,6117,6274,6315,6345,6427,6516,7002,7910,8733,9323,9870,10170,10631,10893,11318,11386,11467,12773,13092,14474,14922,15448,15542,16419,17666,18166,18611,19004,19095,19298,19397,4,16,69,77,97,98,99,102,103,108,109,110,111,112,114,115,116,117,140,150,158,169,176,194,199,210,216,222,226,242,256,266,283,294,108,105,103,5,198,1,59,148,1,198,80,5,38,1,59,156,1,38,99,117,116,101,5,193,1,59,167,1,193,114,101,118,101,59,1,258,4,2,105,121,182,191,114,99,5,194,1,59,189,1,194,59,1,1040,114,59,3,55349,56580,114,97,118,101,5,192,1,59,208,1,192,112,104,97,59,1,913,97,99,114,59,1,256,100,59,1,10835,4,2,103,112,232,237,111,110,59,1,260,102,59,3,55349,56632,112,108,121,70,117,110,99,116,105,111,110,59,1,8289,105,110,103,5,197,1,59,264,1,197,4,2,99,115,272,277,114,59,3,55349,56476,105,103,110,59,1,8788,105,108,100,101,5,195,1,59,292,1,195,109,108,5,196,1,59,301,1,196,4,8,97,99,101,102,111,114,115,117,321,350,354,383,388,394,400,405,4,2,99,114,327,336,107,115,108,97,115,104,59,1,8726,4,2,118,119,342,345,59,1,10983,101,100,59,1,8966,121,59,1,1041,4,3,99,114,116,362,369,379,97,117,115,101,59,1,8757,110,111,117,108,108,105,115,59,1,8492,97,59,1,914,114,59,3,55349,56581,112,102,59,3,55349,56633,101,118,101,59,1,728,99,114,59,1,8492,109,112,101,113,59,1,8782,4,14,72,79,97,99,100,101,102,104,105,108,111,114,115,117,442,447,456,504,542,547,569,573,577,616,678,784,790,796,99,121,59,1,1063,80,89,5,169,1,59,454,1,169,4,3,99,112,121,464,470,497,117,116,101,59,1,262,4,2,59,105,476,478,1,8914,116,97,108,68,105,102,102,101,114,101,110,116,105,97,108,68,59,1,8517,108,101,121,115,59,1,8493,4,4,97,101,105,111,514,520,530,535,114,111,110,59,1,268,100,105,108,5,199,1,59,528,1,199,114,99,59,1,264,110,105,110,116,59,1,8752,111,116,59,1,266,4,2,100,110,553,560,105,108,108,97,59,1,184,116,101,114,68,111,116,59,1,183,114,59,1,8493,105,59,1,935,114,99,108,101,4,4,68,77,80,84,591,596,603,609,111,116,59,1,8857,105,110,117,115,59,1,8854,108,117,115,59,1,8853,105,109,101,115,59,1,8855,111,4,2,99,115,623,646,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8754,101,67,117,114,108,121,4,2,68,81,658,671,111,117,98,108,101,81,117,111,116,101,59,1,8221,117,111,116,101,59,1,8217,4,4,108,110,112,117,688,701,736,753,111,110,4,2,59,101,696,698,1,8759,59,1,10868,4,3,103,105,116,709,717,722,114,117,101,110,116,59,1,8801,110,116,59,1,8751,111,117,114,73,110,116,101,103,114,97,108,59,1,8750,4,2,102,114,742,745,59,1,8450,111,100,117,99,116,59,1,8720,110,116,101,114,67,108,111,99,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8755,111,115,115,59,1,10799,99,114,59,3,55349,56478,112,4,2,59,67,803,805,1,8915,97,112,59,1,8781,4,11,68,74,83,90,97,99,101,102,105,111,115,834,850,855,860,865,888,903,916,921,1011,1415,4,2,59,111,840,842,1,8517,116,114,97,104,100,59,1,10513,99,121,59,1,1026,99,121,59,1,1029,99,121,59,1,1039,4,3,103,114,115,873,879,883,103,101,114,59,1,8225,114,59,1,8609,104,118,59,1,10980,4,2,97,121,894,900,114,111,110,59,1,270,59,1,1044,108,4,2,59,116,910,912,1,8711,97,59,1,916,114,59,3,55349,56583,4,2,97,102,927,998,4,2,99,109,933,992,114,105,116,105,99,97,108,4,4,65,68,71,84,950,957,978,985,99,117,116,101,59,1,180,111,4,2,116,117,964,967,59,1,729,98,108,101,65,99,117,116,101,59,1,733,114,97,118,101,59,1,96,105,108,100,101,59,1,732,111,110,100,59,1,8900,102,101,114,101,110,116,105,97,108,68,59,1,8518,4,4,112,116,117,119,1021,1026,1048,1249,102,59,3,55349,56635,4,3,59,68,69,1034,1036,1041,1,168,111,116,59,1,8412,113,117,97,108,59,1,8784,98,108,101,4,6,67,68,76,82,85,86,1065,1082,1101,1189,1211,1236,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8751,111,4,2,116,119,1089,1092,59,1,168,110,65,114,114,111,119,59,1,8659,4,2,101,111,1107,1141,102,116,4,3,65,82,84,1117,1124,1136,114,114,111,119,59,1,8656,105,103,104,116,65,114,114,111,119,59,1,8660,101,101,59,1,10980,110,103,4,2,76,82,1149,1177,101,102,116,4,2,65,82,1158,1165,114,114,111,119,59,1,10232,105,103,104,116,65,114,114,111,119,59,1,10234,105,103,104,116,65,114,114,111,119,59,1,10233,105,103,104,116,4,2,65,84,1199,1206,114,114,111,119,59,1,8658,101,101,59,1,8872,112,4,2,65,68,1218,1225,114,114,111,119,59,1,8657,111,119,110,65,114,114,111,119,59,1,8661,101,114,116,105,99,97,108,66,97,114,59,1,8741,110,4,6,65,66,76,82,84,97,1264,1292,1299,1352,1391,1408,114,114,111,119,4,3,59,66,85,1276,1278,1283,1,8595,97,114,59,1,10515,112,65,114,114,111,119,59,1,8693,114,101,118,101,59,1,785,101,102,116,4,3,82,84,86,1310,1323,1334,105,103,104,116,86,101,99,116,111,114,59,1,10576,101,101,86,101,99,116,111,114,59,1,10590,101,99,116,111,114,4,2,59,66,1345,1347,1,8637,97,114,59,1,10582,105,103,104,116,4,2,84,86,1362,1373,101,101,86,101,99,116,111,114,59,1,10591,101,99,116,111,114,4,2,59,66,1384,1386,1,8641,97,114,59,1,10583,101,101,4,2,59,65,1399,1401,1,8868,114,114,111,119,59,1,8615,114,114,111,119,59,1,8659,4,2,99,116,1421,1426,114,59,3,55349,56479,114,111,107,59,1,272,4,16,78,84,97,99,100,102,103,108,109,111,112,113,115,116,117,120,1466,1470,1478,1489,1515,1520,1525,1536,1544,1593,1609,1617,1650,1664,1668,1677,71,59,1,330,72,5,208,1,59,1476,1,208,99,117,116,101,5,201,1,59,1487,1,201,4,3,97,105,121,1497,1503,1512,114,111,110,59,1,282,114,99,5,202,1,59,1510,1,202,59,1,1069,111,116,59,1,278,114,59,3,55349,56584,114,97,118,101,5,200,1,59,1534,1,200,101,109,101,110,116,59,1,8712,4,2,97,112,1550,1555,99,114,59,1,274,116,121,4,2,83,86,1563,1576,109,97,108,108,83,113,117,97,114,101,59,1,9723,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9643,4,2,103,112,1599,1604,111,110,59,1,280,102,59,3,55349,56636,115,105,108,111,110,59,1,917,117,4,2,97,105,1624,1640,108,4,2,59,84,1631,1633,1,10869,105,108,100,101,59,1,8770,108,105,98,114,105,117,109,59,1,8652,4,2,99,105,1656,1660,114,59,1,8496,109,59,1,10867,97,59,1,919,109,108,5,203,1,59,1675,1,203,4,2,105,112,1683,1689,115,116,115,59,1,8707,111,110,101,110,116,105,97,108,69,59,1,8519,4,5,99,102,105,111,115,1713,1717,1722,1762,1791,121,59,1,1060,114,59,3,55349,56585,108,108,101,100,4,2,83,86,1732,1745,109,97,108,108,83,113,117,97,114,101,59,1,9724,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9642,4,3,112,114,117,1770,1775,1781,102,59,3,55349,56637,65,108,108,59,1,8704,114,105,101,114,116,114,102,59,1,8497,99,114,59,1,8497,4,12,74,84,97,98,99,100,102,103,111,114,115,116,1822,1827,1834,1848,1855,1877,1882,1887,1890,1896,1978,1984,99,121,59,1,1027,5,62,1,59,1832,1,62,109,109,97,4,2,59,100,1843,1845,1,915,59,1,988,114,101,118,101,59,1,286,4,3,101,105,121,1863,1869,1874,100,105,108,59,1,290,114,99,59,1,284,59,1,1043,111,116,59,1,288,114,59,3,55349,56586,59,1,8921,112,102,59,3,55349,56638,101,97,116,101,114,4,6,69,70,71,76,83,84,1915,1933,1944,1953,1959,1971,113,117,97,108,4,2,59,76,1925,1927,1,8805,101,115,115,59,1,8923,117,108,108,69,113,117,97,108,59,1,8807,114,101,97,116,101,114,59,1,10914,101,115,115,59,1,8823,108,97,110,116,69,113,117,97,108,59,1,10878,105,108,100,101,59,1,8819,99,114,59,3,55349,56482,59,1,8811,4,8,65,97,99,102,105,111,115,117,2005,2012,2026,2032,2036,2049,2073,2089,82,68,99,121,59,1,1066,4,2,99,116,2018,2023,101,107,59,1,711,59,1,94,105,114,99,59,1,292,114,59,1,8460,108,98,101,114,116,83,112,97,99,101,59,1,8459,4,2,112,114,2055,2059,102,59,1,8461,105,122,111,110,116,97,108,76,105,110,101,59,1,9472,4,2,99,116,2079,2083,114,59,1,8459,114,111,107,59,1,294,109,112,4,2,68,69,2097,2107,111,119,110,72,117,109,112,59,1,8782,113,117,97,108,59,1,8783,4,14,69,74,79,97,99,100,102,103,109,110,111,115,116,117,2144,2149,2155,2160,2171,2189,2194,2198,2209,2245,2307,2329,2334,2341,99,121,59,1,1045,108,105,103,59,1,306,99,121,59,1,1025,99,117,116,101,5,205,1,59,2169,1,205,4,2,105,121,2177,2186,114,99,5,206,1,59,2184,1,206,59,1,1048,111,116,59,1,304,114,59,1,8465,114,97,118,101,5,204,1,59,2207,1,204,4,3,59,97,112,2217,2219,2238,1,8465,4,2,99,103,2225,2229,114,59,1,298,105,110,97,114,121,73,59,1,8520,108,105,101,115,59,1,8658,4,2,116,118,2251,2281,4,2,59,101,2257,2259,1,8748,4,2,103,114,2265,2271,114,97,108,59,1,8747,115,101,99,116,105,111,110,59,1,8898,105,115,105,98,108,101,4,2,67,84,2293,2300,111,109,109,97,59,1,8291,105,109,101,115,59,1,8290,4,3,103,112,116,2315,2320,2325,111,110,59,1,302,102,59,3,55349,56640,97,59,1,921,99,114,59,1,8464,105,108,100,101,59,1,296,4,2,107,109,2347,2352,99,121,59,1,1030,108,5,207,1,59,2358,1,207,4,5,99,102,111,115,117,2372,2386,2391,2397,2414,4,2,105,121,2378,2383,114,99,59,1,308,59,1,1049,114,59,3,55349,56589,112,102,59,3,55349,56641,4,2,99,101,2403,2408,114,59,3,55349,56485,114,99,121,59,1,1032,107,99,121,59,1,1028,4,7,72,74,97,99,102,111,115,2436,2441,2446,2452,2467,2472,2478,99,121,59,1,1061,99,121,59,1,1036,112,112,97,59,1,922,4,2,101,121,2458,2464,100,105,108,59,1,310,59,1,1050,114,59,3,55349,56590,112,102,59,3,55349,56642,99,114,59,3,55349,56486,4,11,74,84,97,99,101,102,108,109,111,115,116,2508,2513,2520,2562,2585,2981,2986,3004,3011,3146,3167,99,121,59,1,1033,5,60,1,59,2518,1,60,4,5,99,109,110,112,114,2532,2538,2544,2548,2558,117,116,101,59,1,313,98,100,97,59,1,923,103,59,1,10218,108,97,99,101,116,114,102,59,1,8466,114,59,1,8606,4,3,97,101,121,2570,2576,2582,114,111,110,59,1,317,100,105,108,59,1,315,59,1,1051,4,2,102,115,2591,2907,116,4,10,65,67,68,70,82,84,85,86,97,114,2614,2663,2672,2728,2735,2760,2820,2870,2888,2895,4,2,110,114,2620,2633,103,108,101,66,114,97,99,107,101,116,59,1,10216,114,111,119,4,3,59,66,82,2644,2646,2651,1,8592,97,114,59,1,8676,105,103,104,116,65,114,114,111,119,59,1,8646,101,105,108,105,110,103,59,1,8968,111,4,2,117,119,2679,2692,98,108,101,66,114,97,99,107,101,116,59,1,10214,110,4,2,84,86,2699,2710,101,101,86,101,99,116,111,114,59,1,10593,101,99,116,111,114,4,2,59,66,2721,2723,1,8643,97,114,59,1,10585,108,111,111,114,59,1,8970,105,103,104,116,4,2,65,86,2745,2752,114,114,111,119,59,1,8596,101,99,116,111,114,59,1,10574,4,2,101,114,2766,2792,101,4,3,59,65,86,2775,2777,2784,1,8867,114,114,111,119,59,1,8612,101,99,116,111,114,59,1,10586,105,97,110,103,108,101,4,3,59,66,69,2806,2808,2813,1,8882,97,114,59,1,10703,113,117,97,108,59,1,8884,112,4,3,68,84,86,2829,2841,2852,111,119,110,86,101,99,116,111,114,59,1,10577,101,101,86,101,99,116,111,114,59,1,10592,101,99,116,111,114,4,2,59,66,2863,2865,1,8639,97,114,59,1,10584,101,99,116,111,114,4,2,59,66,2881,2883,1,8636,97,114,59,1,10578,114,114,111,119,59,1,8656,105,103,104,116,97,114,114,111,119,59,1,8660,115,4,6,69,70,71,76,83,84,2922,2936,2947,2956,2962,2974,113,117,97,108,71,114,101,97,116,101,114,59,1,8922,117,108,108,69,113,117,97,108,59,1,8806,114,101,97,116,101,114,59,1,8822,101,115,115,59,1,10913,108,97,110,116,69,113,117,97,108,59,1,10877,105,108,100,101,59,1,8818,114,59,3,55349,56591,4,2,59,101,2992,2994,1,8920,102,116,97,114,114,111,119,59,1,8666,105,100,111,116,59,1,319,4,3,110,112,119,3019,3110,3115,103,4,4,76,82,108,114,3030,3058,3070,3098,101,102,116,4,2,65,82,3039,3046,114,114,111,119,59,1,10229,105,103,104,116,65,114,114,111,119,59,1,10231,105,103,104,116,65,114,114,111,119,59,1,10230,101,102,116,4,2,97,114,3079,3086,114,114,111,119,59,1,10232,105,103,104,116,97,114,114,111,119,59,1,10234,105,103,104,116,97,114,114,111,119,59,1,10233,102,59,3,55349,56643,101,114,4,2,76,82,3123,3134,101,102,116,65,114,114,111,119,59,1,8601,105,103,104,116,65,114,114,111,119,59,1,8600,4,3,99,104,116,3154,3158,3161,114,59,1,8466,59,1,8624,114,111,107,59,1,321,59,1,8810,4,8,97,99,101,102,105,111,115,117,3188,3192,3196,3222,3227,3237,3243,3248,112,59,1,10501,121,59,1,1052,4,2,100,108,3202,3213,105,117,109,83,112,97,99,101,59,1,8287,108,105,110,116,114,102,59,1,8499,114,59,3,55349,56592,110,117,115,80,108,117,115,59,1,8723,112,102,59,3,55349,56644,99,114,59,1,8499,59,1,924,4,9,74,97,99,101,102,111,115,116,117,3271,3276,3283,3306,3422,3427,4120,4126,4137,99,121,59,1,1034,99,117,116,101,59,1,323,4,3,97,101,121,3291,3297,3303,114,111,110,59,1,327,100,105,108,59,1,325,59,1,1053,4,3,103,115,119,3314,3380,3415,97,116,105,118,101,4,3,77,84,86,3327,3340,3365,101,100,105,117,109,83,112,97,99,101,59,1,8203,104,105,4,2,99,110,3348,3357,107,83,112,97,99,101,59,1,8203,83,112,97,99,101,59,1,8203,101,114,121,84,104,105,110,83,112,97,99,101,59,1,8203,116,101,100,4,2,71,76,3389,3405,114,101,97,116,101,114,71,114,101,97,116,101,114,59,1,8811,101,115,115,76,101,115,115,59,1,8810,76,105,110,101,59,1,10,114,59,3,55349,56593,4,4,66,110,112,116,3437,3444,3460,3464,114,101,97,107,59,1,8288,66,114,101,97,107,105,110,103,83,112,97,99,101,59,1,160,102,59,1,8469,4,13,59,67,68,69,71,72,76,78,80,82,83,84,86,3492,3494,3517,3536,3578,3657,3685,3784,3823,3860,3915,4066,4107,1,10988,4,2,111,117,3500,3510,110,103,114,117,101,110,116,59,1,8802,112,67,97,112,59,1,8813,111,117,98,108,101,86,101,114,116,105,99,97,108,66,97,114,59,1,8742,4,3,108,113,120,3544,3552,3571,101,109,101,110,116,59,1,8713,117,97,108,4,2,59,84,3561,3563,1,8800,105,108,100,101,59,3,8770,824,105,115,116,115,59,1,8708,114,101,97,116,101,114,4,7,59,69,70,71,76,83,84,3600,3602,3609,3621,3631,3637,3650,1,8815,113,117,97,108,59,1,8817,117,108,108,69,113,117,97,108,59,3,8807,824,114,101,97,116,101,114,59,3,8811,824,101,115,115,59,1,8825,108,97,110,116,69,113,117,97,108,59,3,10878,824,105,108,100,101,59,1,8821,117,109,112,4,2,68,69,3666,3677,111,119,110,72,117,109,112,59,3,8782,824,113,117,97,108,59,3,8783,824,101,4,2,102,115,3692,3724,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3709,3711,3717,1,8938,97,114,59,3,10703,824,113,117,97,108,59,1,8940,115,4,6,59,69,71,76,83,84,3739,3741,3748,3757,3764,3777,1,8814,113,117,97,108,59,1,8816,114,101,97,116,101,114,59,1,8824,101,115,115,59,3,8810,824,108,97,110,116,69,113,117,97,108,59,3,10877,824,105,108,100,101,59,1,8820,101,115,116,101,100,4,2,71,76,3795,3812,114,101,97,116,101,114,71,114,101,97,116,101,114,59,3,10914,824,101,115,115,76,101,115,115,59,3,10913,824,114,101,99,101,100,101,115,4,3,59,69,83,3838,3840,3848,1,8832,113,117,97,108,59,3,10927,824,108,97,110,116,69,113,117,97,108,59,1,8928,4,2,101,105,3866,3881,118,101,114,115,101,69,108,101,109,101,110,116,59,1,8716,103,104,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3900,3902,3908,1,8939,97,114,59,3,10704,824,113,117,97,108,59,1,8941,4,2,113,117,3921,3973,117,97,114,101,83,117,4,2,98,112,3933,3952,115,101,116,4,2,59,69,3942,3945,3,8847,824,113,117,97,108,59,1,8930,101,114,115,101,116,4,2,59,69,3963,3966,3,8848,824,113,117,97,108,59,1,8931,4,3,98,99,112,3981,4000,4045,115,101,116,4,2,59,69,3990,3993,3,8834,8402,113,117,97,108,59,1,8840,99,101,101,100,115,4,4,59,69,83,84,4015,4017,4025,4037,1,8833,113,117,97,108,59,3,10928,824,108,97,110,116,69,113,117,97,108,59,1,8929,105,108,100,101,59,3,8831,824,101,114,115,101,116,4,2,59,69,4056,4059,3,8835,8402,113,117,97,108,59,1,8841,105,108,100,101,4,4,59,69,70,84,4080,4082,4089,4100,1,8769,113,117,97,108,59,1,8772,117,108,108,69,113,117,97,108,59,1,8775,105,108,100,101,59,1,8777,101,114,116,105,99,97,108,66,97,114,59,1,8740,99,114,59,3,55349,56489,105,108,100,101,5,209,1,59,4135,1,209,59,1,925,4,14,69,97,99,100,102,103,109,111,112,114,115,116,117,118,4170,4176,4187,4205,4212,4217,4228,4253,4259,4292,4295,4316,4337,4346,108,105,103,59,1,338,99,117,116,101,5,211,1,59,4185,1,211,4,2,105,121,4193,4202,114,99,5,212,1,59,4200,1,212,59,1,1054,98,108,97,99,59,1,336,114,59,3,55349,56594,114,97,118,101,5,210,1,59,4226,1,210,4,3,97,101,105,4236,4241,4246,99,114,59,1,332,103,97,59,1,937,99,114,111,110,59,1,927,112,102,59,3,55349,56646,101,110,67,117,114,108,121,4,2,68,81,4272,4285,111,117,98,108,101,81,117,111,116,101,59,1,8220,117,111,116,101,59,1,8216,59,1,10836,4,2,99,108,4301,4306,114,59,3,55349,56490,97,115,104,5,216,1,59,4314,1,216,105,4,2,108,109,4323,4332,100,101,5,213,1,59,4330,1,213,101,115,59,1,10807,109,108,5,214,1,59,4344,1,214,101,114,4,2,66,80,4354,4380,4,2,97,114,4360,4364,114,59,1,8254,97,99,4,2,101,107,4372,4375,59,1,9182,101,116,59,1,9140,97,114,101,110,116,104,101,115,105,115,59,1,9180,4,9,97,99,102,104,105,108,111,114,115,4413,4422,4426,4431,4435,4438,4448,4471,4561,114,116,105,97,108,68,59,1,8706,121,59,1,1055,114,59,3,55349,56595,105,59,1,934,59,1,928,117,115,77,105,110,117,115,59,1,177,4,2,105,112,4454,4467,110,99,97,114,101,112,108,97,110,101,59,1,8460,102,59,1,8473,4,4,59,101,105,111,4481,4483,4526,4531,1,10939,99,101,100,101,115,4,4,59,69,83,84,4498,4500,4507,4519,1,8826,113,117,97,108,59,1,10927,108,97,110,116,69,113,117,97,108,59,1,8828,105,108,100,101,59,1,8830,109,101,59,1,8243,4,2,100,112,4537,4543,117,99,116,59,1,8719,111,114,116,105,111,110,4,2,59,97,4555,4557,1,8759,108,59,1,8733,4,2,99,105,4567,4572,114,59,3,55349,56491,59,1,936,4,4,85,102,111,115,4585,4594,4599,4604,79,84,5,34,1,59,4592,1,34,114,59,3,55349,56596,112,102,59,1,8474,99,114,59,3,55349,56492,4,12,66,69,97,99,101,102,104,105,111,114,115,117,4636,4642,4650,4681,4704,4763,4767,4771,5047,5069,5081,5094,97,114,114,59,1,10512,71,5,174,1,59,4648,1,174,4,3,99,110,114,4658,4664,4668,117,116,101,59,1,340,103,59,1,10219,114,4,2,59,116,4675,4677,1,8608,108,59,1,10518,4,3,97,101,121,4689,4695,4701,114,111,110,59,1,344,100,105,108,59,1,342,59,1,1056,4,2,59,118,4710,4712,1,8476,101,114,115,101,4,2,69,85,4722,4748,4,2,108,113,4728,4736,101,109,101,110,116,59,1,8715,117,105,108,105,98,114,105,117,109,59,1,8651,112,69,113,117,105,108,105,98,114,105,117,109,59,1,10607,114,59,1,8476,111,59,1,929,103,104,116,4,8,65,67,68,70,84,85,86,97,4792,4840,4849,4905,4912,4972,5022,5040,4,2,110,114,4798,4811,103,108,101,66,114,97,99,107,101,116,59,1,10217,114,111,119,4,3,59,66,76,4822,4824,4829,1,8594,97,114,59,1,8677,101,102,116,65,114,114,111,119,59,1,8644,101,105,108,105,110,103,59,1,8969,111,4,2,117,119,4856,4869,98,108,101,66,114,97,99,107,101,116,59,1,10215,110,4,2,84,86,4876,4887,101,101,86,101,99,116,111,114,59,1,10589,101,99,116,111,114,4,2,59,66,4898,4900,1,8642,97,114,59,1,10581,108,111,111,114,59,1,8971,4,2,101,114,4918,4944,101,4,3,59,65,86,4927,4929,4936,1,8866,114,114,111,119,59,1,8614,101,99,116,111,114,59,1,10587,105,97,110,103,108,101,4,3,59,66,69,4958,4960,4965,1,8883,97,114,59,1,10704,113,117,97,108,59,1,8885,112,4,3,68,84,86,4981,4993,5004,111,119,110,86,101,99,116,111,114,59,1,10575,101,101,86,101,99,116,111,114,59,1,10588,101,99,116,111,114,4,2,59,66,5015,5017,1,8638,97,114,59,1,10580,101,99,116,111,114,4,2,59,66,5033,5035,1,8640,97,114,59,1,10579,114,114,111,119,59,1,8658,4,2,112,117,5053,5057,102,59,1,8477,110,100,73,109,112,108,105,101,115,59,1,10608,105,103,104,116,97,114,114,111,119,59,1,8667,4,2,99,104,5087,5091,114,59,1,8475,59,1,8625,108,101,68,101,108,97,121,101,100,59,1,10740,4,13,72,79,97,99,102,104,105,109,111,113,115,116,117,5134,5150,5157,5164,5198,5203,5259,5265,5277,5283,5374,5380,5385,4,2,67,99,5140,5146,72,99,121,59,1,1065,121,59,1,1064,70,84,99,121,59,1,1068,99,117,116,101,59,1,346,4,5,59,97,101,105,121,5176,5178,5184,5190,5195,1,10940,114,111,110,59,1,352,100,105,108,59,1,350,114,99,59,1,348,59,1,1057,114,59,3,55349,56598,111,114,116,4,4,68,76,82,85,5216,5227,5238,5250,111,119,110,65,114,114,111,119,59,1,8595,101,102,116,65,114,114,111,119,59,1,8592,105,103,104,116,65,114,114,111,119,59,1,8594,112,65,114,114,111,119,59,1,8593,103,109,97,59,1,931,97,108,108,67,105,114,99,108,101,59,1,8728,112,102,59,3,55349,56650,4,2,114,117,5289,5293,116,59,1,8730,97,114,101,4,4,59,73,83,85,5306,5308,5322,5367,1,9633,110,116,101,114,115,101,99,116,105,111,110,59,1,8851,117,4,2,98,112,5329,5347,115,101,116,4,2,59,69,5338,5340,1,8847,113,117,97,108,59,1,8849,101,114,115,101,116,4,2,59,69,5358,5360,1,8848,113,117,97,108,59,1,8850,110,105,111,110,59,1,8852,99,114,59,3,55349,56494,97,114,59,1,8902,4,4,98,99,109,112,5395,5420,5475,5478,4,2,59,115,5401,5403,1,8912,101,116,4,2,59,69,5411,5413,1,8912,113,117,97,108,59,1,8838,4,2,99,104,5426,5468,101,101,100,115,4,4,59,69,83,84,5440,5442,5449,5461,1,8827,113,117,97,108,59,1,10928,108,97,110,116,69,113,117,97,108,59,1,8829,105,108,100,101,59,1,8831,84,104,97,116,59,1,8715,59,1,8721,4,3,59,101,115,5486,5488,5507,1,8913,114,115,101,116,4,2,59,69,5498,5500,1,8835,113,117,97,108,59,1,8839,101,116,59,1,8913,4,11,72,82,83,97,99,102,104,105,111,114,115,5536,5546,5552,5567,5579,5602,5607,5655,5695,5701,5711,79,82,78,5,222,1,59,5544,1,222,65,68,69,59,1,8482,4,2,72,99,5558,5563,99,121,59,1,1035,121,59,1,1062,4,2,98,117,5573,5576,59,1,9,59,1,932,4,3,97,101,121,5587,5593,5599,114,111,110,59,1,356,100,105,108,59,1,354,59,1,1058,114,59,3,55349,56599,4,2,101,105,5613,5631,4,2,114,116,5619,5627,101,102,111,114,101,59,1,8756,97,59,1,920,4,2,99,110,5637,5647,107,83,112,97,99,101,59,3,8287,8202,83,112,97,99,101,59,1,8201,108,100,101,4,4,59,69,70,84,5668,5670,5677,5688,1,8764,113,117,97,108,59,1,8771,117,108,108,69,113,117,97,108,59,1,8773,105,108,100,101,59,1,8776,112,102,59,3,55349,56651,105,112,108,101,68,111,116,59,1,8411,4,2,99,116,5717,5722,114,59,3,55349,56495,114,111,107,59,1,358,4,14,97,98,99,100,102,103,109,110,111,112,114,115,116,117,5758,5789,5805,5823,5830,5835,5846,5852,5921,5937,6089,6095,6101,6108,4,2,99,114,5764,5774,117,116,101,5,218,1,59,5772,1,218,114,4,2,59,111,5781,5783,1,8607,99,105,114,59,1,10569,114,4,2,99,101,5796,5800,121,59,1,1038,118,101,59,1,364,4,2,105,121,5811,5820,114,99,5,219,1,59,5818,1,219,59,1,1059,98,108,97,99,59,1,368,114,59,3,55349,56600,114,97,118,101,5,217,1,59,5844,1,217,97,99,114,59,1,362,4,2,100,105,5858,5905,101,114,4,2,66,80,5866,5892,4,2,97,114,5872,5876,114,59,1,95,97,99,4,2,101,107,5884,5887,59,1,9183,101,116,59,1,9141,97,114,101,110,116,104,101,115,105,115,59,1,9181,111,110,4,2,59,80,5913,5915,1,8899,108,117,115,59,1,8846,4,2,103,112,5927,5932,111,110,59,1,370,102,59,3,55349,56652,4,8,65,68,69,84,97,100,112,115,5955,5985,5996,6009,6026,6033,6044,6075,114,114,111,119,4,3,59,66,68,5967,5969,5974,1,8593,97,114,59,1,10514,111,119,110,65,114,114,111,119,59,1,8645,111,119,110,65,114,114,111,119,59,1,8597,113,117,105,108,105,98,114,105,117,109,59,1,10606,101,101,4,2,59,65,6017,6019,1,8869,114,114,111,119,59,1,8613,114,114,111,119,59,1,8657,111,119,110,97,114,114,111,119,59,1,8661,101,114,4,2,76,82,6052,6063,101,102,116,65,114,114,111,119,59,1,8598,105,103,104,116,65,114,114,111,119,59,1,8599,105,4,2,59,108,6082,6084,1,978,111,110,59,1,933,105,110,103,59,1,366,99,114,59,3,55349,56496,105,108,100,101,59,1,360,109,108,5,220,1,59,6115,1,220,4,9,68,98,99,100,101,102,111,115,118,6137,6143,6148,6152,6166,6250,6255,6261,6267,97,115,104,59,1,8875,97,114,59,1,10987,121,59,1,1042,97,115,104,4,2,59,108,6161,6163,1,8873,59,1,10982,4,2,101,114,6172,6175,59,1,8897,4,3,98,116,121,6183,6188,6238,97,114,59,1,8214,4,2,59,105,6194,6196,1,8214,99,97,108,4,4,66,76,83,84,6209,6214,6220,6231,97,114,59,1,8739,105,110,101,59,1,124,101,112,97,114,97,116,111,114,59,1,10072,105,108,100,101,59,1,8768,84,104,105,110,83,112,97,99,101,59,1,8202,114,59,3,55349,56601,112,102,59,3,55349,56653,99,114,59,3,55349,56497,100,97,115,104,59,1,8874,4,5,99,101,102,111,115,6286,6292,6298,6303,6309,105,114,99,59,1,372,100,103,101,59,1,8896,114,59,3,55349,56602,112,102,59,3,55349,56654,99,114,59,3,55349,56498,4,4,102,105,111,115,6325,6330,6333,6339,114,59,3,55349,56603,59,1,926,112,102,59,3,55349,56655,99,114,59,3,55349,56499,4,9,65,73,85,97,99,102,111,115,117,6365,6370,6375,6380,6391,6405,6410,6416,6422,99,121,59,1,1071,99,121,59,1,1031,99,121,59,1,1070,99,117,116,101,5,221,1,59,6389,1,221,4,2,105,121,6397,6402,114,99,59,1,374,59,1,1067,114,59,3,55349,56604,112,102,59,3,55349,56656,99,114,59,3,55349,56500,109,108,59,1,376,4,8,72,97,99,100,101,102,111,115,6445,6450,6457,6472,6477,6501,6505,6510,99,121,59,1,1046,99,117,116,101,59,1,377,4,2,97,121,6463,6469,114,111,110,59,1,381,59,1,1047,111,116,59,1,379,4,2,114,116,6483,6497,111,87,105,100,116,104,83,112,97,99,101,59,1,8203,97,59,1,918,114,59,1,8488,112,102,59,1,8484,99,114,59,3,55349,56501,4,16,97,98,99,101,102,103,108,109,110,111,112,114,115,116,117,119,6550,6561,6568,6612,6622,6634,6645,6672,6699,6854,6870,6923,6933,6963,6974,6983,99,117,116,101,5,225,1,59,6559,1,225,114,101,118,101,59,1,259,4,6,59,69,100,105,117,121,6582,6584,6588,6591,6600,6609,1,8766,59,3,8766,819,59,1,8767,114,99,5,226,1,59,6598,1,226,116,101,5,180,1,59,6607,1,180,59,1,1072,108,105,103,5,230,1,59,6620,1,230,4,2,59,114,6628,6630,1,8289,59,3,55349,56606,114,97,118,101,5,224,1,59,6643,1,224,4,2,101,112,6651,6667,4,2,102,112,6657,6663,115,121,109,59,1,8501,104,59,1,8501,104,97,59,1,945,4,2,97,112,6678,6692,4,2,99,108,6684,6688,114,59,1,257,103,59,1,10815,5,38,1,59,6697,1,38,4,2,100,103,6705,6737,4,5,59,97,100,115,118,6717,6719,6724,6727,6734,1,8743,110,100,59,1,10837,59,1,10844,108,111,112,101,59,1,10840,59,1,10842,4,7,59,101,108,109,114,115,122,6753,6755,6758,6762,6814,6835,6848,1,8736,59,1,10660,101,59,1,8736,115,100,4,2,59,97,6770,6772,1,8737,4,8,97,98,99,100,101,102,103,104,6790,6793,6796,6799,6802,6805,6808,6811,59,1,10664,59,1,10665,59,1,10666,59,1,10667,59,1,10668,59,1,10669,59,1,10670,59,1,10671,116,4,2,59,118,6821,6823,1,8735,98,4,2,59,100,6830,6832,1,8894,59,1,10653,4,2,112,116,6841,6845,104,59,1,8738,59,1,197,97,114,114,59,1,9084,4,2,103,112,6860,6865,111,110,59,1,261,102,59,3,55349,56658,4,7,59,69,97,101,105,111,112,6886,6888,6891,6897,6900,6904,6908,1,8776,59,1,10864,99,105,114,59,1,10863,59,1,8778,100,59,1,8779,115,59,1,39,114,111,120,4,2,59,101,6917,6919,1,8776,113,59,1,8778,105,110,103,5,229,1,59,6931,1,229,4,3,99,116,121,6941,6946,6949,114,59,3,55349,56502,59,1,42,109,112,4,2,59,101,6957,6959,1,8776,113,59,1,8781,105,108,100,101,5,227,1,59,6972,1,227,109,108,5,228,1,59,6981,1,228,4,2,99,105,6989,6997,111,110,105,110,116,59,1,8755,110,116,59,1,10769,4,16,78,97,98,99,100,101,102,105,107,108,110,111,112,114,115,117,7036,7041,7119,7135,7149,7155,7219,7224,7347,7354,7463,7489,7786,7793,7814,7866,111,116,59,1,10989,4,2,99,114,7047,7094,107,4,4,99,101,112,115,7058,7064,7073,7080,111,110,103,59,1,8780,112,115,105,108,111,110,59,1,1014,114,105,109,101,59,1,8245,105,109,4,2,59,101,7088,7090,1,8765,113,59,1,8909,4,2,118,119,7100,7105,101,101,59,1,8893,101,100,4,2,59,103,7113,7115,1,8965,101,59,1,8965,114,107,4,2,59,116,7127,7129,1,9141,98,114,107,59,1,9142,4,2,111,121,7141,7146,110,103,59,1,8780,59,1,1073,113,117,111,59,1,8222,4,5,99,109,112,114,116,7167,7181,7188,7193,7199,97,117,115,4,2,59,101,7176,7178,1,8757,59,1,8757,112,116,121,118,59,1,10672,115,105,59,1,1014,110,111,117,59,1,8492,4,3,97,104,119,7207,7210,7213,59,1,946,59,1,8502,101,101,110,59,1,8812,114,59,3,55349,56607,103,4,7,99,111,115,116,117,118,119,7241,7262,7288,7305,7328,7335,7340,4,3,97,105,117,7249,7253,7258,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,4,3,100,112,116,7270,7275,7281,111,116,59,1,10752,108,117,115,59,1,10753,105,109,101,115,59,1,10754,4,2,113,116,7294,7300,99,117,112,59,1,10758,97,114,59,1,9733,114,105,97,110,103,108,101,4,2,100,117,7318,7324,111,119,110,59,1,9661,112,59,1,9651,112,108,117,115,59,1,10756,101,101,59,1,8897,101,100,103,101,59,1,8896,97,114,111,119,59,1,10509,4,3,97,107,111,7362,7436,7458,4,2,99,110,7368,7432,107,4,3,108,115,116,7377,7386,7394,111,122,101,110,103,101,59,1,10731,113,117,97,114,101,59,1,9642,114,105,97,110,103,108,101,4,4,59,100,108,114,7411,7413,7419,7425,1,9652,111,119,110,59,1,9662,101,102,116,59,1,9666,105,103,104,116,59,1,9656,107,59,1,9251,4,2,49,51,7442,7454,4,2,50,52,7448,7451,59,1,9618,59,1,9617,52,59,1,9619,99,107,59,1,9608,4,2,101,111,7469,7485,4,2,59,113,7475,7478,3,61,8421,117,105,118,59,3,8801,8421,116,59,1,8976,4,4,112,116,119,120,7499,7504,7517,7523,102,59,3,55349,56659,4,2,59,116,7510,7512,1,8869,111,109,59,1,8869,116,105,101,59,1,8904,4,12,68,72,85,86,98,100,104,109,112,116,117,118,7549,7571,7597,7619,7655,7660,7682,7708,7715,7721,7728,7750,4,4,76,82,108,114,7559,7562,7565,7568,59,1,9559,59,1,9556,59,1,9558,59,1,9555,4,5,59,68,85,100,117,7583,7585,7588,7591,7594,1,9552,59,1,9574,59,1,9577,59,1,9572,59,1,9575,4,4,76,82,108,114,7607,7610,7613,7616,59,1,9565,59,1,9562,59,1,9564,59,1,9561,4,7,59,72,76,82,104,108,114,7635,7637,7640,7643,7646,7649,7652,1,9553,59,1,9580,59,1,9571,59,1,9568,59,1,9579,59,1,9570,59,1,9567,111,120,59,1,10697,4,4,76,82,108,114,7670,7673,7676,7679,59,1,9557,59,1,9554,59,1,9488,59,1,9484,4,5,59,68,85,100,117,7694,7696,7699,7702,7705,1,9472,59,1,9573,59,1,9576,59,1,9516,59,1,9524,105,110,117,115,59,1,8863,108,117,115,59,1,8862,105,109,101,115,59,1,8864,4,4,76,82,108,114,7738,7741,7744,7747,59,1,9563,59,1,9560,59,1,9496,59,1,9492,4,7,59,72,76,82,104,108,114,7766,7768,7771,7774,7777,7780,7783,1,9474,59,1,9578,59,1,9569,59,1,9566,59,1,9532,59,1,9508,59,1,9500,114,105,109,101,59,1,8245,4,2,101,118,7799,7804,118,101,59,1,728,98,97,114,5,166,1,59,7812,1,166,4,4,99,101,105,111,7824,7829,7834,7846,114,59,3,55349,56503,109,105,59,1,8271,109,4,2,59,101,7841,7843,1,8765,59,1,8909,108,4,3,59,98,104,7855,7857,7860,1,92,59,1,10693,115,117,98,59,1,10184,4,2,108,109,7872,7885,108,4,2,59,101,7879,7881,1,8226,116,59,1,8226,112,4,3,59,69,101,7894,7896,7899,1,8782,59,1,10926,4,2,59,113,7905,7907,1,8783,59,1,8783,4,15,97,99,100,101,102,104,105,108,111,114,115,116,117,119,121,7942,8021,8075,8080,8121,8126,8157,8279,8295,8430,8446,8485,8491,8707,8726,4,3,99,112,114,7950,7956,8007,117,116,101,59,1,263,4,6,59,97,98,99,100,115,7970,7972,7977,7984,7998,8003,1,8745,110,100,59,1,10820,114,99,117,112,59,1,10825,4,2,97,117,7990,7994,112,59,1,10827,112,59,1,10823,111,116,59,1,10816,59,3,8745,65024,4,2,101,111,8013,8017,116,59,1,8257,110,59,1,711,4,4,97,101,105,117,8031,8046,8056,8061,4,2,112,114,8037,8041,115,59,1,10829,111,110,59,1,269,100,105,108,5,231,1,59,8054,1,231,114,99,59,1,265,112,115,4,2,59,115,8069,8071,1,10828,109,59,1,10832,111,116,59,1,267,4,3,100,109,110,8088,8097,8104,105,108,5,184,1,59,8095,1,184,112,116,121,118,59,1,10674,116,5,162,2,59,101,8112,8114,1,162,114,100,111,116,59,1,183,114,59,3,55349,56608,4,3,99,101,105,8134,8138,8154,121,59,1,1095,99,107,4,2,59,109,8146,8148,1,10003,97,114,107,59,1,10003,59,1,967,114,4,7,59,69,99,101,102,109,115,8174,8176,8179,8258,8261,8268,8273,1,9675,59,1,10691,4,3,59,101,108,8187,8189,8193,1,710,113,59,1,8791,101,4,2,97,100,8200,8223,114,114,111,119,4,2,108,114,8210,8216,101,102,116,59,1,8634,105,103,104,116,59,1,8635,4,5,82,83,97,99,100,8235,8238,8241,8246,8252,59,1,174,59,1,9416,115,116,59,1,8859,105,114,99,59,1,8858,97,115,104,59,1,8861,59,1,8791,110,105,110,116,59,1,10768,105,100,59,1,10991,99,105,114,59,1,10690,117,98,115,4,2,59,117,8288,8290,1,9827,105,116,59,1,9827,4,4,108,109,110,112,8305,8326,8376,8400,111,110,4,2,59,101,8313,8315,1,58,4,2,59,113,8321,8323,1,8788,59,1,8788,4,2,109,112,8332,8344,97,4,2,59,116,8339,8341,1,44,59,1,64,4,3,59,102,108,8352,8354,8358,1,8705,110,59,1,8728,101,4,2,109,120,8365,8371,101,110,116,59,1,8705,101,115,59,1,8450,4,2,103,105,8382,8395,4,2,59,100,8388,8390,1,8773,111,116,59,1,10861,110,116,59,1,8750,4,3,102,114,121,8408,8412,8417,59,3,55349,56660,111,100,59,1,8720,5,169,2,59,115,8424,8426,1,169,114,59,1,8471,4,2,97,111,8436,8441,114,114,59,1,8629,115,115,59,1,10007,4,2,99,117,8452,8457,114,59,3,55349,56504,4,2,98,112,8463,8474,4,2,59,101,8469,8471,1,10959,59,1,10961,4,2,59,101,8480,8482,1,10960,59,1,10962,100,111,116,59,1,8943,4,7,100,101,108,112,114,118,119,8507,8522,8536,8550,8600,8697,8702,97,114,114,4,2,108,114,8516,8519,59,1,10552,59,1,10549,4,2,112,115,8528,8532,114,59,1,8926,99,59,1,8927,97,114,114,4,2,59,112,8545,8547,1,8630,59,1,10557,4,6,59,98,99,100,111,115,8564,8566,8573,8587,8592,8596,1,8746,114,99,97,112,59,1,10824,4,2,97,117,8579,8583,112,59,1,10822,112,59,1,10826,111,116,59,1,8845,114,59,1,10821,59,3,8746,65024,4,4,97,108,114,118,8610,8623,8663,8672,114,114,4,2,59,109,8618,8620,1,8631,59,1,10556,121,4,3,101,118,119,8632,8651,8656,113,4,2,112,115,8639,8645,114,101,99,59,1,8926,117,99,99,59,1,8927,101,101,59,1,8910,101,100,103,101,59,1,8911,101,110,5,164,1,59,8670,1,164,101,97,114,114,111,119,4,2,108,114,8684,8690,101,102,116,59,1,8630,105,103,104,116,59,1,8631,101,101,59,1,8910,101,100,59,1,8911,4,2,99,105,8713,8721,111,110,105,110,116,59,1,8754,110,116,59,1,8753,108,99,116,121,59,1,9005,4,19,65,72,97,98,99,100,101,102,104,105,106,108,111,114,115,116,117,119,122,8773,8778,8783,8821,8839,8854,8887,8914,8930,8944,9036,9041,9058,9197,9227,9258,9281,9297,9305,114,114,59,1,8659,97,114,59,1,10597,4,4,103,108,114,115,8793,8799,8805,8809,103,101,114,59,1,8224,101,116,104,59,1,8504,114,59,1,8595,104,4,2,59,118,8816,8818,1,8208,59,1,8867,4,2,107,108,8827,8834,97,114,111,119,59,1,10511,97,99,59,1,733,4,2,97,121,8845,8851,114,111,110,59,1,271,59,1,1076,4,3,59,97,111,8862,8864,8880,1,8518,4,2,103,114,8870,8876,103,101,114,59,1,8225,114,59,1,8650,116,115,101,113,59,1,10871,4,3,103,108,109,8895,8902,8907,5,176,1,59,8900,1,176,116,97,59,1,948,112,116,121,118,59,1,10673,4,2,105,114,8920,8926,115,104,116,59,1,10623,59,3,55349,56609,97,114,4,2,108,114,8938,8941,59,1,8643,59,1,8642,4,5,97,101,103,115,118,8956,8986,8989,8996,9001,109,4,3,59,111,115,8965,8967,8983,1,8900,110,100,4,2,59,115,8975,8977,1,8900,117,105,116,59,1,9830,59,1,9830,59,1,168,97,109,109,97,59,1,989,105,110,59,1,8946,4,3,59,105,111,9009,9011,9031,1,247,100,101,5,247,2,59,111,9020,9022,1,247,110,116,105,109,101,115,59,1,8903,110,120,59,1,8903,99,121,59,1,1106,99,4,2,111,114,9048,9053,114,110,59,1,8990,111,112,59,1,8973,4,5,108,112,116,117,119,9070,9076,9081,9130,9144,108,97,114,59,1,36,102,59,3,55349,56661,4,5,59,101,109,112,115,9093,9095,9109,9116,9122,1,729,113,4,2,59,100,9102,9104,1,8784,111,116,59,1,8785,105,110,117,115,59,1,8760,108,117,115,59,1,8724,113,117,97,114,101,59,1,8865,98,108,101,98,97,114,119,101,100,103,101,59,1,8966,110,4,3,97,100,104,9153,9160,9172,114,114,111,119,59,1,8595,111,119,110,97,114,114,111,119,115,59,1,8650,97,114,112,111,111,110,4,2,108,114,9184,9190,101,102,116,59,1,8643,105,103,104,116,59,1,8642,4,2,98,99,9203,9211,107,97,114,111,119,59,1,10512,4,2,111,114,9217,9222,114,110,59,1,8991,111,112,59,1,8972,4,3,99,111,116,9235,9248,9252,4,2,114,121,9241,9245,59,3,55349,56505,59,1,1109,108,59,1,10742,114,111,107,59,1,273,4,2,100,114,9264,9269,111,116,59,1,8945,105,4,2,59,102,9276,9278,1,9663,59,1,9662,4,2,97,104,9287,9292,114,114,59,1,8693,97,114,59,1,10607,97,110,103,108,101,59,1,10662,4,2,99,105,9311,9315,121,59,1,1119,103,114,97,114,114,59,1,10239,4,18,68,97,99,100,101,102,103,108,109,110,111,112,113,114,115,116,117,120,9361,9376,9398,9439,9444,9447,9462,9495,9531,9585,9598,9614,9659,9755,9771,9792,9808,9826,4,2,68,111,9367,9372,111,116,59,1,10871,116,59,1,8785,4,2,99,115,9382,9392,117,116,101,5,233,1,59,9390,1,233,116,101,114,59,1,10862,4,4,97,105,111,121,9408,9414,9430,9436,114,111,110,59,1,283,114,4,2,59,99,9421,9423,1,8790,5,234,1,59,9428,1,234,108,111,110,59,1,8789,59,1,1101,111,116,59,1,279,59,1,8519,4,2,68,114,9453,9458,111,116,59,1,8786,59,3,55349,56610,4,3,59,114,115,9470,9472,9482,1,10906,97,118,101,5,232,1,59,9480,1,232,4,2,59,100,9488,9490,1,10902,111,116,59,1,10904,4,4,59,105,108,115,9505,9507,9515,9518,1,10905,110,116,101,114,115,59,1,9191,59,1,8467,4,2,59,100,9524,9526,1,10901,111,116,59,1,10903,4,3,97,112,115,9539,9544,9564,99,114,59,1,275,116,121,4,3,59,115,118,9554,9556,9561,1,8709,101,116,59,1,8709,59,1,8709,112,4,2,49,59,9571,9583,4,2,51,52,9577,9580,59,1,8196,59,1,8197,1,8195,4,2,103,115,9591,9594,59,1,331,112,59,1,8194,4,2,103,112,9604,9609,111,110,59,1,281,102,59,3,55349,56662,4,3,97,108,115,9622,9635,9640,114,4,2,59,115,9629,9631,1,8917,108,59,1,10723,117,115,59,1,10865,105,4,3,59,108,118,9649,9651,9656,1,949,111,110,59,1,949,59,1,1013,4,4,99,115,117,118,9669,9686,9716,9747,4,2,105,111,9675,9680,114,99,59,1,8790,108,111,110,59,1,8789,4,2,105,108,9692,9696,109,59,1,8770,97,110,116,4,2,103,108,9705,9710,116,114,59,1,10902,101,115,115,59,1,10901,4,3,97,101,105,9724,9729,9734,108,115,59,1,61,115,116,59,1,8799,118,4,2,59,68,9741,9743,1,8801,68,59,1,10872,112,97,114,115,108,59,1,10725,4,2,68,97,9761,9766,111,116,59,1,8787,114,114,59,1,10609,4,3,99,100,105,9779,9783,9788,114,59,1,8495,111,116,59,1,8784,109,59,1,8770,4,2,97,104,9798,9801,59,1,951,5,240,1,59,9806,1,240,4,2,109,114,9814,9822,108,5,235,1,59,9820,1,235,111,59,1,8364,4,3,99,105,112,9834,9838,9843,108,59,1,33,115,116,59,1,8707,4,2,101,111,9849,9859,99,116,97,116,105,111,110,59,1,8496,110,101,110,116,105,97,108,101,59,1,8519,4,12,97,99,101,102,105,106,108,110,111,112,114,115,9896,9910,9914,9921,9954,9960,9967,9989,9994,10027,10036,10164,108,108,105,110,103,100,111,116,115,101,113,59,1,8786,121,59,1,1092,109,97,108,101,59,1,9792,4,3,105,108,114,9929,9935,9950,108,105,103,59,1,64259,4,2,105,108,9941,9945,103,59,1,64256,105,103,59,1,64260,59,3,55349,56611,108,105,103,59,1,64257,108,105,103,59,3,102,106,4,3,97,108,116,9975,9979,9984,116,59,1,9837,105,103,59,1,64258,110,115,59,1,9649,111,102,59,1,402,4,2,112,114,10000,10005,102,59,3,55349,56663,4,2,97,107,10011,10016,108,108,59,1,8704,4,2,59,118,10022,10024,1,8916,59,1,10969,97,114,116,105,110,116,59,1,10765,4,2,97,111,10042,10159,4,2,99,115,10048,10155,4,6,49,50,51,52,53,55,10062,10102,10114,10135,10139,10151,4,6,50,51,52,53,54,56,10076,10083,10086,10093,10096,10099,5,189,1,59,10081,1,189,59,1,8531,5,188,1,59,10091,1,188,59,1,8533,59,1,8537,59,1,8539,4,2,51,53,10108,10111,59,1,8532,59,1,8534,4,3,52,53,56,10122,10129,10132,5,190,1,59,10127,1,190,59,1,8535,59,1,8540,53,59,1,8536,4,2,54,56,10145,10148,59,1,8538,59,1,8541,56,59,1,8542,108,59,1,8260,119,110,59,1,8994,99,114,59,3,55349,56507,4,17,69,97,98,99,100,101,102,103,105,106,108,110,111,114,115,116,118,10206,10217,10247,10254,10268,10273,10358,10363,10374,10380,10385,10406,10458,10464,10470,10497,10610,4,2,59,108,10212,10214,1,8807,59,1,10892,4,3,99,109,112,10225,10231,10244,117,116,101,59,1,501,109,97,4,2,59,100,10239,10241,1,947,59,1,989,59,1,10886,114,101,118,101,59,1,287,4,2,105,121,10260,10265,114,99,59,1,285,59,1,1075,111,116,59,1,289,4,4,59,108,113,115,10283,10285,10288,10308,1,8805,59,1,8923,4,3,59,113,115,10296,10298,10301,1,8805,59,1,8807,108,97,110,116,59,1,10878,4,4,59,99,100,108,10318,10320,10324,10345,1,10878,99,59,1,10921,111,116,4,2,59,111,10332,10334,1,10880,4,2,59,108,10340,10342,1,10882,59,1,10884,4,2,59,101,10351,10354,3,8923,65024,115,59,1,10900,114,59,3,55349,56612,4,2,59,103,10369,10371,1,8811,59,1,8921,109,101,108,59,1,8503,99,121,59,1,1107,4,4,59,69,97,106,10395,10397,10400,10403,1,8823,59,1,10898,59,1,10917,59,1,10916,4,4,69,97,101,115,10416,10419,10434,10453,59,1,8809,112,4,2,59,112,10426,10428,1,10890,114,111,120,59,1,10890,4,2,59,113,10440,10442,1,10888,4,2,59,113,10448,10450,1,10888,59,1,8809,105,109,59,1,8935,112,102,59,3,55349,56664,97,118,101,59,1,96,4,2,99,105,10476,10480,114,59,1,8458,109,4,3,59,101,108,10489,10491,10494,1,8819,59,1,10894,59,1,10896,5,62,6,59,99,100,108,113,114,10512,10514,10527,10532,10538,10545,1,62,4,2,99,105,10520,10523,59,1,10919,114,59,1,10874,111,116,59,1,8919,80,97,114,59,1,10645,117,101,115,116,59,1,10876,4,5,97,100,101,108,115,10557,10574,10579,10599,10605,4,2,112,114,10563,10570,112,114,111,120,59,1,10886,114,59,1,10616,111,116,59,1,8919,113,4,2,108,113,10586,10592,101,115,115,59,1,8923,108,101,115,115,59,1,10892,101,115,115,59,1,8823,105,109,59,1,8819,4,2,101,110,10616,10626,114,116,110,101,113,113,59,3,8809,65024,69,59,3,8809,65024,4,10,65,97,98,99,101,102,107,111,115,121,10653,10658,10713,10718,10724,10760,10765,10786,10850,10875,114,114,59,1,8660,4,4,105,108,109,114,10668,10674,10678,10684,114,115,112,59,1,8202,102,59,1,189,105,108,116,59,1,8459,4,2,100,114,10690,10695,99,121,59,1,1098,4,3,59,99,119,10703,10705,10710,1,8596,105,114,59,1,10568,59,1,8621,97,114,59,1,8463,105,114,99,59,1,293,4,3,97,108,114,10732,10748,10754,114,116,115,4,2,59,117,10741,10743,1,9829,105,116,59,1,9829,108,105,112,59,1,8230,99,111,110,59,1,8889,114,59,3,55349,56613,115,4,2,101,119,10772,10779,97,114,111,119,59,1,10533,97,114,111,119,59,1,10534,4,5,97,109,111,112,114,10798,10803,10809,10839,10844,114,114,59,1,8703,116,104,116,59,1,8763,107,4,2,108,114,10816,10827,101,102,116,97,114,114,111,119,59,1,8617,105,103,104,116,97,114,114,111,119,59,1,8618,102,59,3,55349,56665,98,97,114,59,1,8213,4,3,99,108,116,10858,10863,10869,114,59,3,55349,56509,97,115,104,59,1,8463,114,111,107,59,1,295,4,2,98,112,10881,10887,117,108,108,59,1,8259,104,101,110,59,1,8208,4,15,97,99,101,102,103,105,106,109,110,111,112,113,115,116,117,10925,10936,10958,10977,10990,11001,11039,11045,11101,11192,11220,11226,11237,11285,11299,99,117,116,101,5,237,1,59,10934,1,237,4,3,59,105,121,10944,10946,10955,1,8291,114,99,5,238,1,59,10953,1,238,59,1,1080,4,2,99,120,10964,10968,121,59,1,1077,99,108,5,161,1,59,10975,1,161,4,2,102,114,10983,10986,59,1,8660,59,3,55349,56614,114,97,118,101,5,236,1,59,10999,1,236,4,4,59,105,110,111,11011,11013,11028,11034,1,8520,4,2,105,110,11019,11024,110,116,59,1,10764,116,59,1,8749,102,105,110,59,1,10716,116,97,59,1,8489,108,105,103,59,1,307,4,3,97,111,112,11053,11092,11096,4,3,99,103,116,11061,11065,11088,114,59,1,299,4,3,101,108,112,11073,11076,11082,59,1,8465,105,110,101,59,1,8464,97,114,116,59,1,8465,104,59,1,305,102,59,1,8887,101,100,59,1,437,4,5,59,99,102,111,116,11113,11115,11121,11136,11142,1,8712,97,114,101,59,1,8453,105,110,4,2,59,116,11129,11131,1,8734,105,101,59,1,10717,100,111,116,59,1,305,4,5,59,99,101,108,112,11154,11156,11161,11179,11186,1,8747,97,108,59,1,8890,4,2,103,114,11167,11173,101,114,115,59,1,8484,99,97,108,59,1,8890,97,114,104,107,59,1,10775,114,111,100,59,1,10812,4,4,99,103,112,116,11202,11206,11211,11216,121,59,1,1105,111,110,59,1,303,102,59,3,55349,56666,97,59,1,953,114,111,100,59,1,10812,117,101,115,116,5,191,1,59,11235,1,191,4,2,99,105,11243,11248,114,59,3,55349,56510,110,4,5,59,69,100,115,118,11261,11263,11266,11271,11282,1,8712,59,1,8953,111,116,59,1,8949,4,2,59,118,11277,11279,1,8948,59,1,8947,59,1,8712,4,2,59,105,11291,11293,1,8290,108,100,101,59,1,297,4,2,107,109,11305,11310,99,121,59,1,1110,108,5,239,1,59,11316,1,239,4,6,99,102,109,111,115,117,11332,11346,11351,11357,11363,11380,4,2,105,121,11338,11343,114,99,59,1,309,59,1,1081,114,59,3,55349,56615,97,116,104,59,1,567,112,102,59,3,55349,56667,4,2,99,101,11369,11374,114,59,3,55349,56511,114,99,121,59,1,1112,107,99,121,59,1,1108,4,8,97,99,102,103,104,106,111,115,11404,11418,11433,11438,11445,11450,11455,11461,112,112,97,4,2,59,118,11413,11415,1,954,59,1,1008,4,2,101,121,11424,11430,100,105,108,59,1,311,59,1,1082,114,59,3,55349,56616,114,101,101,110,59,1,312,99,121,59,1,1093,99,121,59,1,1116,112,102,59,3,55349,56668,99,114,59,3,55349,56512,4,23,65,66,69,72,97,98,99,100,101,102,103,104,106,108,109,110,111,112,114,115,116,117,118,11515,11538,11544,11555,11560,11721,11780,11818,11868,12136,12160,12171,12203,12208,12246,12275,12327,12509,12523,12569,12641,12732,12752,4,3,97,114,116,11523,11528,11532,114,114,59,1,8666,114,59,1,8656,97,105,108,59,1,10523,97,114,114,59,1,10510,4,2,59,103,11550,11552,1,8806,59,1,10891,97,114,59,1,10594,4,9,99,101,103,109,110,112,113,114,116,11580,11586,11594,11600,11606,11624,11627,11636,11694,117,116,101,59,1,314,109,112,116,121,118,59,1,10676,114,97,110,59,1,8466,98,100,97,59,1,955,103,4,3,59,100,108,11615,11617,11620,1,10216,59,1,10641,101,59,1,10216,59,1,10885,117,111,5,171,1,59,11634,1,171,114,4,8,59,98,102,104,108,112,115,116,11655,11657,11669,11673,11677,11681,11685,11690,1,8592,4,2,59,102,11663,11665,1,8676,115,59,1,10527,115,59,1,10525,107,59,1,8617,112,59,1,8619,108,59,1,10553,105,109,59,1,10611,108,59,1,8610,4,3,59,97,101,11702,11704,11709,1,10923,105,108,59,1,10521,4,2,59,115,11715,11717,1,10925,59,3,10925,65024,4,3,97,98,114,11729,11734,11739,114,114,59,1,10508,114,107,59,1,10098,4,2,97,107,11745,11758,99,4,2,101,107,11752,11755,59,1,123,59,1,91,4,2,101,115,11764,11767,59,1,10635,108,4,2,100,117,11774,11777,59,1,10639,59,1,10637,4,4,97,101,117,121,11790,11796,11811,11815,114,111,110,59,1,318,4,2,100,105,11802,11807,105,108,59,1,316,108,59,1,8968,98,59,1,123,59,1,1083,4,4,99,113,114,115,11828,11832,11845,11864,97,59,1,10550,117,111,4,2,59,114,11840,11842,1,8220,59,1,8222,4,2,100,117,11851,11857,104,97,114,59,1,10599,115,104,97,114,59,1,10571,104,59,1,8626,4,5,59,102,103,113,115,11880,11882,12008,12011,12031,1,8804,116,4,5,97,104,108,114,116,11895,11913,11935,11947,11996,114,114,111,119,4,2,59,116,11905,11907,1,8592,97,105,108,59,1,8610,97,114,112,111,111,110,4,2,100,117,11925,11931,111,119,110,59,1,8637,112,59,1,8636,101,102,116,97,114,114,111,119,115,59,1,8647,105,103,104,116,4,3,97,104,115,11959,11974,11984,114,114,111,119,4,2,59,115,11969,11971,1,8596,59,1,8646,97,114,112,111,111,110,115,59,1,8651,113,117,105,103,97,114,114,111,119,59,1,8621,104,114,101,101,116,105,109,101,115,59,1,8907,59,1,8922,4,3,59,113,115,12019,12021,12024,1,8804,59,1,8806,108,97,110,116,59,1,10877,4,5,59,99,100,103,115,12043,12045,12049,12070,12083,1,10877,99,59,1,10920,111,116,4,2,59,111,12057,12059,1,10879,4,2,59,114,12065,12067,1,10881,59,1,10883,4,2,59,101,12076,12079,3,8922,65024,115,59,1,10899,4,5,97,100,101,103,115,12095,12103,12108,12126,12131,112,112,114,111,120,59,1,10885,111,116,59,1,8918,113,4,2,103,113,12115,12120,116,114,59,1,8922,103,116,114,59,1,10891,116,114,59,1,8822,105,109,59,1,8818,4,3,105,108,114,12144,12150,12156,115,104,116,59,1,10620,111,111,114,59,1,8970,59,3,55349,56617,4,2,59,69,12166,12168,1,8822,59,1,10897,4,2,97,98,12177,12198,114,4,2,100,117,12184,12187,59,1,8637,4,2,59,108,12193,12195,1,8636,59,1,10602,108,107,59,1,9604,99,121,59,1,1113,4,5,59,97,99,104,116,12220,12222,12227,12235,12241,1,8810,114,114,59,1,8647,111,114,110,101,114,59,1,8990,97,114,100,59,1,10603,114,105,59,1,9722,4,2,105,111,12252,12258,100,111,116,59,1,320,117,115,116,4,2,59,97,12267,12269,1,9136,99,104,101,59,1,9136,4,4,69,97,101,115,12285,12288,12303,12322,59,1,8808,112,4,2,59,112,12295,12297,1,10889,114,111,120,59,1,10889,4,2,59,113,12309,12311,1,10887,4,2,59,113,12317,12319,1,10887,59,1,8808,105,109,59,1,8934,4,8,97,98,110,111,112,116,119,122,12345,12359,12364,12421,12446,12467,12474,12490,4,2,110,114,12351,12355,103,59,1,10220,114,59,1,8701,114,107,59,1,10214,103,4,3,108,109,114,12373,12401,12409,101,102,116,4,2,97,114,12382,12389,114,114,111,119,59,1,10229,105,103,104,116,97,114,114,111,119,59,1,10231,97,112,115,116,111,59,1,10236,105,103,104,116,97,114,114,111,119,59,1,10230,112,97,114,114,111,119,4,2,108,114,12433,12439,101,102,116,59,1,8619,105,103,104,116,59,1,8620,4,3,97,102,108,12454,12458,12462,114,59,1,10629,59,3,55349,56669,117,115,59,1,10797,105,109,101,115,59,1,10804,4,2,97,98,12480,12485,115,116,59,1,8727,97,114,59,1,95,4,3,59,101,102,12498,12500,12506,1,9674,110,103,101,59,1,9674,59,1,10731,97,114,4,2,59,108,12517,12519,1,40,116,59,1,10643,4,5,97,99,104,109,116,12535,12540,12548,12561,12564,114,114,59,1,8646,111,114,110,101,114,59,1,8991,97,114,4,2,59,100,12556,12558,1,8651,59,1,10605,59,1,8206,114,105,59,1,8895,4,6,97,99,104,105,113,116,12583,12589,12594,12597,12614,12635,113,117,111,59,1,8249,114,59,3,55349,56513,59,1,8624,109,4,3,59,101,103,12606,12608,12611,1,8818,59,1,10893,59,1,10895,4,2,98,117,12620,12623,59,1,91,111,4,2,59,114,12630,12632,1,8216,59,1,8218,114,111,107,59,1,322,5,60,8,59,99,100,104,105,108,113,114,12660,12662,12675,12680,12686,12692,12698,12705,1,60,4,2,99,105,12668,12671,59,1,10918,114,59,1,10873,111,116,59,1,8918,114,101,101,59,1,8907,109,101,115,59,1,8905,97,114,114,59,1,10614,117,101,115,116,59,1,10875,4,2,80,105,12711,12716,97,114,59,1,10646,4,3,59,101,102,12724,12726,12729,1,9667,59,1,8884,59,1,9666,114,4,2,100,117,12739,12746,115,104,97,114,59,1,10570,104,97,114,59,1,10598,4,2,101,110,12758,12768,114,116,110,101,113,113,59,3,8808,65024,69,59,3,8808,65024,4,14,68,97,99,100,101,102,104,105,108,110,111,112,115,117,12803,12809,12893,12908,12914,12928,12933,12937,13011,13025,13032,13049,13052,13069,68,111,116,59,1,8762,4,4,99,108,112,114,12819,12827,12849,12887,114,5,175,1,59,12825,1,175,4,2,101,116,12833,12836,59,1,9794,4,2,59,101,12842,12844,1,10016,115,101,59,1,10016,4,2,59,115,12855,12857,1,8614,116,111,4,4,59,100,108,117,12869,12871,12877,12883,1,8614,111,119,110,59,1,8615,101,102,116,59,1,8612,112,59,1,8613,107,101,114,59,1,9646,4,2,111,121,12899,12905,109,109,97,59,1,10793,59,1,1084,97,115,104,59,1,8212,97,115,117,114,101,100,97,110,103,108,101,59,1,8737,114,59,3,55349,56618,111,59,1,8487,4,3,99,100,110,12945,12954,12985,114,111,5,181,1,59,12952,1,181,4,4,59,97,99,100,12964,12966,12971,12976,1,8739,115,116,59,1,42,105,114,59,1,10992,111,116,5,183,1,59,12983,1,183,117,115,4,3,59,98,100,12995,12997,13000,1,8722,59,1,8863,4,2,59,117,13006,13008,1,8760,59,1,10794,4,2,99,100,13017,13021,112,59,1,10971,114,59,1,8230,112,108,117,115,59,1,8723,4,2,100,112,13038,13044,101,108,115,59,1,8871,102,59,3,55349,56670,59,1,8723,4,2,99,116,13058,13063,114,59,3,55349,56514,112,111,115,59,1,8766,4,3,59,108,109,13077,13079,13087,1,956,116,105,109,97,112,59,1,8888,97,112,59,1,8888,4,24,71,76,82,86,97,98,99,100,101,102,103,104,105,106,108,109,111,112,114,115,116,117,118,119,13142,13165,13217,13229,13247,13330,13359,13414,13420,13508,13513,13579,13602,13626,13631,13762,13767,13855,13936,13995,14214,14285,14312,14432,4,2,103,116,13148,13152,59,3,8921,824,4,2,59,118,13158,13161,3,8811,8402,59,3,8811,824,4,3,101,108,116,13173,13200,13204,102,116,4,2,97,114,13181,13188,114,114,111,119,59,1,8653,105,103,104,116,97,114,114,111,119,59,1,8654,59,3,8920,824,4,2,59,118,13210,13213,3,8810,8402,59,3,8810,824,105,103,104,116,97,114,114,111,119,59,1,8655,4,2,68,100,13235,13241,97,115,104,59,1,8879,97,115,104,59,1,8878,4,5,98,99,110,112,116,13259,13264,13270,13275,13308,108,97,59,1,8711,117,116,101,59,1,324,103,59,3,8736,8402,4,5,59,69,105,111,112,13287,13289,13293,13298,13302,1,8777,59,3,10864,824,100,59,3,8779,824,115,59,1,329,114,111,120,59,1,8777,117,114,4,2,59,97,13316,13318,1,9838,108,4,2,59,115,13325,13327,1,9838,59,1,8469,4,2,115,117,13336,13344,112,5,160,1,59,13342,1,160,109,112,4,2,59,101,13352,13355,3,8782,824,59,3,8783,824,4,5,97,101,111,117,121,13371,13385,13391,13407,13411,4,2,112,114,13377,13380,59,1,10819,111,110,59,1,328,100,105,108,59,1,326,110,103,4,2,59,100,13399,13401,1,8775,111,116,59,3,10861,824,112,59,1,10818,59,1,1085,97,115,104,59,1,8211,4,7,59,65,97,100,113,115,120,13436,13438,13443,13466,13472,13478,13494,1,8800,114,114,59,1,8663,114,4,2,104,114,13450,13454,107,59,1,10532,4,2,59,111,13460,13462,1,8599,119,59,1,8599,111,116,59,3,8784,824,117,105,118,59,1,8802,4,2,101,105,13484,13489,97,114,59,1,10536,109,59,3,8770,824,105,115,116,4,2,59,115,13503,13505,1,8708,59,1,8708,114,59,3,55349,56619,4,4,69,101,115,116,13523,13527,13563,13568,59,3,8807,824,4,3,59,113,115,13535,13537,13559,1,8817,4,3,59,113,115,13545,13547,13551,1,8817,59,3,8807,824,108,97,110,116,59,3,10878,824,59,3,10878,824,105,109,59,1,8821,4,2,59,114,13574,13576,1,8815,59,1,8815,4,3,65,97,112,13587,13592,13597,114,114,59,1,8654,114,114,59,1,8622,97,114,59,1,10994,4,3,59,115,118,13610,13612,13623,1,8715,4,2,59,100,13618,13620,1,8956,59,1,8954,59,1,8715,99,121,59,1,1114,4,7,65,69,97,100,101,115,116,13647,13652,13656,13661,13665,13737,13742,114,114,59,1,8653,59,3,8806,824,114,114,59,1,8602,114,59,1,8229,4,4,59,102,113,115,13675,13677,13703,13725,1,8816,116,4,2,97,114,13684,13691,114,114,111,119,59,1,8602,105,103,104,116,97,114,114,111,119,59,1,8622,4,3,59,113,115,13711,13713,13717,1,8816,59,3,8806,824,108,97,110,116,59,3,10877,824,4,2,59,115,13731,13734,3,10877,824,59,1,8814,105,109,59,1,8820,4,2,59,114,13748,13750,1,8814,105,4,2,59,101,13757,13759,1,8938,59,1,8940,105,100,59,1,8740,4,2,112,116,13773,13778,102,59,3,55349,56671,5,172,3,59,105,110,13787,13789,13829,1,172,110,4,4,59,69,100,118,13800,13802,13806,13812,1,8713,59,3,8953,824,111,116,59,3,8949,824,4,3,97,98,99,13820,13823,13826,59,1,8713,59,1,8951,59,1,8950,105,4,2,59,118,13836,13838,1,8716,4,3,97,98,99,13846,13849,13852,59,1,8716,59,1,8958,59,1,8957,4,3,97,111,114,13863,13892,13899,114,4,4,59,97,115,116,13874,13876,13883,13888,1,8742,108,108,101,108,59,1,8742,108,59,3,11005,8421,59,3,8706,824,108,105,110,116,59,1,10772,4,3,59,99,101,13907,13909,13914,1,8832,117,101,59,1,8928,4,2,59,99,13920,13923,3,10927,824,4,2,59,101,13929,13931,1,8832,113,59,3,10927,824,4,4,65,97,105,116,13946,13951,13971,13982,114,114,59,1,8655,114,114,4,3,59,99,119,13961,13963,13967,1,8603,59,3,10547,824,59,3,8605,824,103,104,116,97,114,114,111,119,59,1,8603,114,105,4,2,59,101,13990,13992,1,8939,59,1,8941,4,7,99,104,105,109,112,113,117,14011,14036,14060,14080,14085,14090,14106,4,4,59,99,101,114,14021,14023,14028,14032,1,8833,117,101,59,1,8929,59,3,10928,824,59,3,55349,56515,111,114,116,4,2,109,112,14045,14050,105,100,59,1,8740,97,114,97,108,108,101,108,59,1,8742,109,4,2,59,101,14067,14069,1,8769,4,2,59,113,14075,14077,1,8772,59,1,8772,105,100,59,1,8740,97,114,59,1,8742,115,117,4,2,98,112,14098,14102,101,59,1,8930,101,59,1,8931,4,3,98,99,112,14114,14157,14171,4,4,59,69,101,115,14124,14126,14130,14133,1,8836,59,3,10949,824,59,1,8840,101,116,4,2,59,101,14141,14144,3,8834,8402,113,4,2,59,113,14151,14153,1,8840,59,3,10949,824,99,4,2,59,101,14164,14166,1,8833,113,59,3,10928,824,4,4,59,69,101,115,14181,14183,14187,14190,1,8837,59,3,10950,824,59,1,8841,101,116,4,2,59,101,14198,14201,3,8835,8402,113,4,2,59,113,14208,14210,1,8841,59,3,10950,824,4,4,103,105,108,114,14224,14228,14238,14242,108,59,1,8825,108,100,101,5,241,1,59,14236,1,241,103,59,1,8824,105,97,110,103,108,101,4,2,108,114,14254,14269,101,102,116,4,2,59,101,14263,14265,1,8938,113,59,1,8940,105,103,104,116,4,2,59,101,14279,14281,1,8939,113,59,1,8941,4,2,59,109,14291,14293,1,957,4,3,59,101,115,14301,14303,14308,1,35,114,111,59,1,8470,112,59,1,8199,4,9,68,72,97,100,103,105,108,114,115,14332,14338,14344,14349,14355,14369,14376,14408,14426,97,115,104,59,1,8877,97,114,114,59,1,10500,112,59,3,8781,8402,97,115,104,59,1,8876,4,2,101,116,14361,14365,59,3,8805,8402,59,3,62,8402,110,102,105,110,59,1,10718,4,3,65,101,116,14384,14389,14393,114,114,59,1,10498,59,3,8804,8402,4,2,59,114,14399,14402,3,60,8402,105,101,59,3,8884,8402,4,2,65,116,14414,14419,114,114,59,1,10499,114,105,101,59,3,8885,8402,105,109,59,3,8764,8402,4,3,65,97,110,14440,14445,14468,114,114,59,1,8662,114,4,2,104,114,14452,14456,107,59,1,10531,4,2,59,111,14462,14464,1,8598,119,59,1,8598,101,97,114,59,1,10535,4,18,83,97,99,100,101,102,103,104,105,108,109,111,112,114,115,116,117,118,14512,14515,14535,14560,14597,14603,14618,14643,14657,14662,14701,14741,14747,14769,14851,14877,14907,14916,59,1,9416,4,2,99,115,14521,14531,117,116,101,5,243,1,59,14529,1,243,116,59,1,8859,4,2,105,121,14541,14557,114,4,2,59,99,14548,14550,1,8858,5,244,1,59,14555,1,244,59,1,1086,4,5,97,98,105,111,115,14572,14577,14583,14587,14591,115,104,59,1,8861,108,97,99,59,1,337,118,59,1,10808,116,59,1,8857,111,108,100,59,1,10684,108,105,103,59,1,339,4,2,99,114,14609,14614,105,114,59,1,10687,59,3,55349,56620,4,3,111,114,116,14626,14630,14640,110,59,1,731,97,118,101,5,242,1,59,14638,1,242,59,1,10689,4,2,98,109,14649,14654,97,114,59,1,10677,59,1,937,110,116,59,1,8750,4,4,97,99,105,116,14672,14677,14693,14698,114,114,59,1,8634,4,2,105,114,14683,14687,114,59,1,10686,111,115,115,59,1,10683,110,101,59,1,8254,59,1,10688,4,3,97,101,105,14709,14714,14719,99,114,59,1,333,103,97,59,1,969,4,3,99,100,110,14727,14733,14736,114,111,110,59,1,959,59,1,10678,117,115,59,1,8854,112,102,59,3,55349,56672,4,3,97,101,108,14755,14759,14764,114,59,1,10679,114,112,59,1,10681,117,115,59,1,8853,4,7,59,97,100,105,111,115,118,14785,14787,14792,14831,14837,14841,14848,1,8744,114,114,59,1,8635,4,4,59,101,102,109,14802,14804,14817,14824,1,10845,114,4,2,59,111,14811,14813,1,8500,102,59,1,8500,5,170,1,59,14822,1,170,5,186,1,59,14829,1,186,103,111,102,59,1,8886,114,59,1,10838,108,111,112,101,59,1,10839,59,1,10843,4,3,99,108,111,14859,14863,14873,114,59,1,8500,97,115,104,5,248,1,59,14871,1,248,108,59,1,8856,105,4,2,108,109,14884,14893,100,101,5,245,1,59,14891,1,245,101,115,4,2,59,97,14901,14903,1,8855,115,59,1,10806,109,108,5,246,1,59,14914,1,246,98,97,114,59,1,9021,4,12,97,99,101,102,104,105,108,109,111,114,115,117,14948,14992,14996,15033,15038,15068,15090,15189,15192,15222,15427,15441,114,4,4,59,97,115,116,14959,14961,14976,14989,1,8741,5,182,2,59,108,14968,14970,1,182,108,101,108,59,1,8741,4,2,105,108,14982,14986,109,59,1,10995,59,1,11005,59,1,8706,121,59,1,1087,114,4,5,99,105,109,112,116,15009,15014,15019,15024,15027,110,116,59,1,37,111,100,59,1,46,105,108,59,1,8240,59,1,8869,101,110,107,59,1,8241,114,59,3,55349,56621,4,3,105,109,111,15046,15057,15063,4,2,59,118,15052,15054,1,966,59,1,981,109,97,116,59,1,8499,110,101,59,1,9742,4,3,59,116,118,15076,15078,15087,1,960,99,104,102,111,114,107,59,1,8916,59,1,982,4,2,97,117,15096,15119,110,4,2,99,107,15103,15115,107,4,2,59,104,15110,15112,1,8463,59,1,8462,118,59,1,8463,115,4,9,59,97,98,99,100,101,109,115,116,15140,15142,15148,15151,15156,15168,15171,15179,15184,1,43,99,105,114,59,1,10787,59,1,8862,105,114,59,1,10786,4,2,111,117,15162,15165,59,1,8724,59,1,10789,59,1,10866,110,5,177,1,59,15177,1,177,105,109,59,1,10790,119,111,59,1,10791,59,1,177,4,3,105,112,117,15200,15208,15213,110,116,105,110,116,59,1,10773,102,59,3,55349,56673,110,100,5,163,1,59,15220,1,163,4,10,59,69,97,99,101,105,110,111,115,117,15244,15246,15249,15253,15258,15334,15347,15367,15416,15421,1,8826,59,1,10931,112,59,1,10935,117,101,59,1,8828,4,2,59,99,15264,15266,1,10927,4,6,59,97,99,101,110,115,15280,15282,15290,15299,15303,15329,1,8826,112,112,114,111,120,59,1,10935,117,114,108,121,101,113,59,1,8828,113,59,1,10927,4,3,97,101,115,15311,15319,15324,112,112,114,111,120,59,1,10937,113,113,59,1,10933,105,109,59,1,8936,105,109,59,1,8830,109,101,4,2,59,115,15342,15344,1,8242,59,1,8473,4,3,69,97,115,15355,15358,15362,59,1,10933,112,59,1,10937,105,109,59,1,8936,4,3,100,102,112,15375,15378,15404,59,1,8719,4,3,97,108,115,15386,15392,15398,108,97,114,59,1,9006,105,110,101,59,1,8978,117,114,102,59,1,8979,4,2,59,116,15410,15412,1,8733,111,59,1,8733,105,109,59,1,8830,114,101,108,59,1,8880,4,2,99,105,15433,15438,114,59,3,55349,56517,59,1,968,110,99,115,112,59,1,8200,4,6,102,105,111,112,115,117,15462,15467,15472,15478,15485,15491,114,59,3,55349,56622,110,116,59,1,10764,112,102,59,3,55349,56674,114,105,109,101,59,1,8279,99,114,59,3,55349,56518,4,3,97,101,111,15499,15520,15534,116,4,2,101,105,15506,15515,114,110,105,111,110,115,59,1,8461,110,116,59,1,10774,115,116,4,2,59,101,15528,15530,1,63,113,59,1,8799,116,5,34,1,59,15540,1,34,4,21,65,66,72,97,98,99,100,101,102,104,105,108,109,110,111,112,114,115,116,117,120,15586,15609,15615,15620,15796,15855,15893,15931,15977,16001,16039,16183,16204,16222,16228,16285,16312,16318,16363,16408,16416,4,3,97,114,116,15594,15599,15603,114,114,59,1,8667,114,59,1,8658,97,105,108,59,1,10524,97,114,114,59,1,10511,97,114,59,1,10596,4,7,99,100,101,110,113,114,116,15636,15651,15656,15664,15687,15696,15770,4,2,101,117,15642,15646,59,3,8765,817,116,101,59,1,341,105,99,59,1,8730,109,112,116,121,118,59,1,10675,103,4,4,59,100,101,108,15675,15677,15680,15683,1,10217,59,1,10642,59,1,10661,101,59,1,10217,117,111,5,187,1,59,15694,1,187,114,4,11,59,97,98,99,102,104,108,112,115,116,119,15721,15723,15727,15739,15742,15746,15750,15754,15758,15763,15767,1,8594,112,59,1,10613,4,2,59,102,15733,15735,1,8677,115,59,1,10528,59,1,10547,115,59,1,10526,107,59,1,8618,112,59,1,8620,108,59,1,10565,105,109,59,1,10612,108,59,1,8611,59,1,8605,4,2,97,105,15776,15781,105,108,59,1,10522,111,4,2,59,110,15788,15790,1,8758,97,108,115,59,1,8474,4,3,97,98,114,15804,15809,15814,114,114,59,1,10509,114,107,59,1,10099,4,2,97,107,15820,15833,99,4,2,101,107,15827,15830,59,1,125,59,1,93,4,2,101,115,15839,15842,59,1,10636,108,4,2,100,117,15849,15852,59,1,10638,59,1,10640,4,4,97,101,117,121,15865,15871,15886,15890,114,111,110,59,1,345,4,2,100,105,15877,15882,105,108,59,1,343,108,59,1,8969,98,59,1,125,59,1,1088,4,4,99,108,113,115,15903,15907,15914,15927,97,59,1,10551,100,104,97,114,59,1,10601,117,111,4,2,59,114,15922,15924,1,8221,59,1,8221,104,59,1,8627,4,3,97,99,103,15939,15966,15970,108,4,4,59,105,112,115,15950,15952,15957,15963,1,8476,110,101,59,1,8475,97,114,116,59,1,8476,59,1,8477,116,59,1,9645,5,174,1,59,15975,1,174,4,3,105,108,114,15985,15991,15997,115,104,116,59,1,10621,111,111,114,59,1,8971,59,3,55349,56623,4,2,97,111,16007,16028,114,4,2,100,117,16014,16017,59,1,8641,4,2,59,108,16023,16025,1,8640,59,1,10604,4,2,59,118,16034,16036,1,961,59,1,1009,4,3,103,110,115,16047,16167,16171,104,116,4,6,97,104,108,114,115,116,16063,16081,16103,16130,16143,16155,114,114,111,119,4,2,59,116,16073,16075,1,8594,97,105,108,59,1,8611,97,114,112,111,111,110,4,2,100,117,16093,16099,111,119,110,59,1,8641,112,59,1,8640,101,102,116,4,2,97,104,16112,16120,114,114,111,119,115,59,1,8644,97,114,112,111,111,110,115,59,1,8652,105,103,104,116,97,114,114,111,119,115,59,1,8649,113,117,105,103,97,114,114,111,119,59,1,8605,104,114,101,101,116,105,109,101,115,59,1,8908,103,59,1,730,105,110,103,100,111,116,115,101,113,59,1,8787,4,3,97,104,109,16191,16196,16201,114,114,59,1,8644,97,114,59,1,8652,59,1,8207,111,117,115,116,4,2,59,97,16214,16216,1,9137,99,104,101,59,1,9137,109,105,100,59,1,10990,4,4,97,98,112,116,16238,16252,16257,16278,4,2,110,114,16244,16248,103,59,1,10221,114,59,1,8702,114,107,59,1,10215,4,3,97,102,108,16265,16269,16273,114,59,1,10630,59,3,55349,56675,117,115,59,1,10798,105,109,101,115,59,1,10805,4,2,97,112,16291,16304,114,4,2,59,103,16298,16300,1,41,116,59,1,10644,111,108,105,110,116,59,1,10770,97,114,114,59,1,8649,4,4,97,99,104,113,16328,16334,16339,16342,113,117,111,59,1,8250,114,59,3,55349,56519,59,1,8625,4,2,98,117,16348,16351,59,1,93,111,4,2,59,114,16358,16360,1,8217,59,1,8217,4,3,104,105,114,16371,16377,16383,114,101,101,59,1,8908,109,101,115,59,1,8906,105,4,4,59,101,102,108,16394,16396,16399,16402,1,9657,59,1,8885,59,1,9656,116,114,105,59,1,10702,108,117,104,97,114,59,1,10600,59,1,8478,4,19,97,98,99,100,101,102,104,105,108,109,111,112,113,114,115,116,117,119,122,16459,16466,16472,16572,16590,16672,16687,16746,16844,16850,16924,16963,16988,17115,17121,17154,17206,17614,17656,99,117,116,101,59,1,347,113,117,111,59,1,8218,4,10,59,69,97,99,101,105,110,112,115,121,16494,16496,16499,16513,16518,16531,16536,16556,16564,16569,1,8827,59,1,10932,4,2,112,114,16505,16508,59,1,10936,111,110,59,1,353,117,101,59,1,8829,4,2,59,100,16524,16526,1,10928,105,108,59,1,351,114,99,59,1,349,4,3,69,97,115,16544,16547,16551,59,1,10934,112,59,1,10938,105,109,59,1,8937,111,108,105,110,116,59,1,10771,105,109,59,1,8831,59,1,1089,111,116,4,3,59,98,101,16582,16584,16587,1,8901,59,1,8865,59,1,10854,4,7,65,97,99,109,115,116,120,16606,16611,16634,16642,16646,16652,16668,114,114,59,1,8664,114,4,2,104,114,16618,16622,107,59,1,10533,4,2,59,111,16628,16630,1,8600,119,59,1,8600,116,5,167,1,59,16640,1,167,105,59,1,59,119,97,114,59,1,10537,109,4,2,105,110,16659,16665,110,117,115,59,1,8726,59,1,8726,116,59,1,10038,114,4,2,59,111,16679,16682,3,55349,56624,119,110,59,1,8994,4,4,97,99,111,121,16697,16702,16716,16739,114,112,59,1,9839,4,2,104,121,16708,16713,99,121,59,1,1097,59,1,1096,114,116,4,2,109,112,16724,16729,105,100,59,1,8739,97,114,97,108,108,101,108,59,1,8741,5,173,1,59,16744,1,173,4,2,103,109,16752,16770,109,97,4,3,59,102,118,16762,16764,16767,1,963,59,1,962,59,1,962,4,8,59,100,101,103,108,110,112,114,16788,16790,16795,16806,16817,16828,16832,16838,1,8764,111,116,59,1,10858,4,2,59,113,16801,16803,1,8771,59,1,8771,4,2,59,69,16812,16814,1,10910,59,1,10912,4,2,59,69,16823,16825,1,10909,59,1,10911,101,59,1,8774,108,117,115,59,1,10788,97,114,114,59,1,10610,97,114,114,59,1,8592,4,4,97,101,105,116,16860,16883,16891,16904,4,2,108,115,16866,16878,108,115,101,116,109,105,110,117,115,59,1,8726,104,112,59,1,10803,112,97,114,115,108,59,1,10724,4,2,100,108,16897,16900,59,1,8739,101,59,1,8995,4,2,59,101,16910,16912,1,10922,4,2,59,115,16918,16920,1,10924,59,3,10924,65024,4,3,102,108,112,16932,16938,16958,116,99,121,59,1,1100,4,2,59,98,16944,16946,1,47,4,2,59,97,16952,16954,1,10692,114,59,1,9023,102,59,3,55349,56676,97,4,2,100,114,16970,16985,101,115,4,2,59,117,16978,16980,1,9824,105,116,59,1,9824,59,1,8741,4,3,99,115,117,16996,17028,17089,4,2,97,117,17002,17015,112,4,2,59,115,17009,17011,1,8851,59,3,8851,65024,112,4,2,59,115,17022,17024,1,8852,59,3,8852,65024,117,4,2,98,112,17035,17062,4,3,59,101,115,17043,17045,17048,1,8847,59,1,8849,101,116,4,2,59,101,17056,17058,1,8847,113,59,1,8849,4,3,59,101,115,17070,17072,17075,1,8848,59,1,8850,101,116,4,2,59,101,17083,17085,1,8848,113,59,1,8850,4,3,59,97,102,17097,17099,17112,1,9633,114,4,2,101,102,17106,17109,59,1,9633,59,1,9642,59,1,9642,97,114,114,59,1,8594,4,4,99,101,109,116,17131,17136,17142,17148,114,59,3,55349,56520,116,109,110,59,1,8726,105,108,101,59,1,8995,97,114,102,59,1,8902,4,2,97,114,17160,17172,114,4,2,59,102,17167,17169,1,9734,59,1,9733,4,2,97,110,17178,17202,105,103,104,116,4,2,101,112,17188,17197,112,115,105,108,111,110,59,1,1013,104,105,59,1,981,115,59,1,175,4,5,98,99,109,110,112,17218,17351,17420,17423,17427,4,9,59,69,100,101,109,110,112,114,115,17238,17240,17243,17248,17261,17267,17279,17285,17291,1,8834,59,1,10949,111,116,59,1,10941,4,2,59,100,17254,17256,1,8838,111,116,59,1,10947,117,108,116,59,1,10945,4,2,69,101,17273,17276,59,1,10955,59,1,8842,108,117,115,59,1,10943,97,114,114,59,1,10617,4,3,101,105,117,17299,17335,17339,116,4,3,59,101,110,17308,17310,17322,1,8834,113,4,2,59,113,17317,17319,1,8838,59,1,10949,101,113,4,2,59,113,17330,17332,1,8842,59,1,10955,109,59,1,10951,4,2,98,112,17345,17348,59,1,10965,59,1,10963,99,4,6,59,97,99,101,110,115,17366,17368,17376,17385,17389,17415,1,8827,112,112,114,111,120,59,1,10936,117,114,108,121,101,113,59,1,8829,113,59,1,10928,4,3,97,101,115,17397,17405,17410,112,112,114,111,120,59,1,10938,113,113,59,1,10934,105,109,59,1,8937,105,109,59,1,8831,59,1,8721,103,59,1,9834,4,13,49,50,51,59,69,100,101,104,108,109,110,112,115,17455,17462,17469,17476,17478,17481,17496,17509,17524,17530,17536,17548,17554,5,185,1,59,17460,1,185,5,178,1,59,17467,1,178,5,179,1,59,17474,1,179,1,8835,59,1,10950,4,2,111,115,17487,17491,116,59,1,10942,117,98,59,1,10968,4,2,59,100,17502,17504,1,8839,111,116,59,1,10948,115,4,2,111,117,17516,17520,108,59,1,10185,98,59,1,10967,97,114,114,59,1,10619,117,108,116,59,1,10946,4,2,69,101,17542,17545,59,1,10956,59,1,8843,108,117,115,59,1,10944,4,3,101,105,117,17562,17598,17602,116,4,3,59,101,110,17571,17573,17585,1,8835,113,4,2,59,113,17580,17582,1,8839,59,1,10950,101,113,4,2,59,113,17593,17595,1,8843,59,1,10956,109,59,1,10952,4,2,98,112,17608,17611,59,1,10964,59,1,10966,4,3,65,97,110,17622,17627,17650,114,114,59,1,8665,114,4,2,104,114,17634,17638,107,59,1,10534,4,2,59,111,17644,17646,1,8601,119,59,1,8601,119,97,114,59,1,10538,108,105,103,5,223,1,59,17664,1,223,4,13,97,98,99,100,101,102,104,105,111,112,114,115,119,17694,17709,17714,17737,17742,17749,17754,17860,17905,17957,17964,18090,18122,4,2,114,117,17700,17706,103,101,116,59,1,8982,59,1,964,114,107,59,1,9140,4,3,97,101,121,17722,17728,17734,114,111,110,59,1,357,100,105,108,59,1,355,59,1,1090,111,116,59,1,8411,108,114,101,99,59,1,8981,114,59,3,55349,56625,4,4,101,105,107,111,17764,17805,17836,17851,4,2,114,116,17770,17786,101,4,2,52,102,17777,17780,59,1,8756,111,114,101,59,1,8756,97,4,3,59,115,118,17795,17797,17802,1,952,121,109,59,1,977,59,1,977,4,2,99,110,17811,17831,107,4,2,97,115,17818,17826,112,112,114,111,120,59,1,8776,105,109,59,1,8764,115,112,59,1,8201,4,2,97,115,17842,17846,112,59,1,8776,105,109,59,1,8764,114,110,5,254,1,59,17858,1,254,4,3,108,109,110,17868,17873,17901,100,101,59,1,732,101,115,5,215,3,59,98,100,17884,17886,17898,1,215,4,2,59,97,17892,17894,1,8864,114,59,1,10801,59,1,10800,116,59,1,8749,4,3,101,112,115,17913,17917,17953,97,59,1,10536,4,4,59,98,99,102,17927,17929,17934,17939,1,8868,111,116,59,1,9014,105,114,59,1,10993,4,2,59,111,17945,17948,3,55349,56677,114,107,59,1,10970,97,59,1,10537,114,105,109,101,59,1,8244,4,3,97,105,112,17972,17977,18082,100,101,59,1,8482,4,7,97,100,101,109,112,115,116,17993,18051,18056,18059,18066,18072,18076,110,103,108,101,4,5,59,100,108,113,114,18009,18011,18017,18032,18035,1,9653,111,119,110,59,1,9663,101,102,116,4,2,59,101,18026,18028,1,9667,113,59,1,8884,59,1,8796,105,103,104,116,4,2,59,101,18045,18047,1,9657,113,59,1,8885,111,116,59,1,9708,59,1,8796,105,110,117,115,59,1,10810,108,117,115,59,1,10809,98,59,1,10701,105,109,101,59,1,10811,101,122,105,117,109,59,1,9186,4,3,99,104,116,18098,18111,18116,4,2,114,121,18104,18108,59,3,55349,56521,59,1,1094,99,121,59,1,1115,114,111,107,59,1,359,4,2,105,111,18128,18133,120,116,59,1,8812,104,101,97,100,4,2,108,114,18143,18154,101,102,116,97,114,114,111,119,59,1,8606,105,103,104,116,97,114,114,111,119,59,1,8608,4,18,65,72,97,98,99,100,102,103,104,108,109,111,112,114,115,116,117,119,18204,18209,18214,18234,18250,18268,18292,18308,18319,18343,18379,18397,18413,18504,18547,18553,18584,18603,114,114,59,1,8657,97,114,59,1,10595,4,2,99,114,18220,18230,117,116,101,5,250,1,59,18228,1,250,114,59,1,8593,114,4,2,99,101,18241,18245,121,59,1,1118,118,101,59,1,365,4,2,105,121,18256,18265,114,99,5,251,1,59,18263,1,251,59,1,1091,4,3,97,98,104,18276,18281,18287,114,114,59,1,8645,108,97,99,59,1,369,97,114,59,1,10606,4,2,105,114,18298,18304,115,104,116,59,1,10622,59,3,55349,56626,114,97,118,101,5,249,1,59,18317,1,249,4,2,97,98,18325,18338,114,4,2,108,114,18332,18335,59,1,8639,59,1,8638,108,107,59,1,9600,4,2,99,116,18349,18374,4,2,111,114,18355,18369,114,110,4,2,59,101,18363,18365,1,8988,114,59,1,8988,111,112,59,1,8975,114,105,59,1,9720,4,2,97,108,18385,18390,99,114,59,1,363,5,168,1,59,18395,1,168,4,2,103,112,18403,18408,111,110,59,1,371,102,59,3,55349,56678,4,6,97,100,104,108,115,117,18427,18434,18445,18470,18475,18494,114,114,111,119,59,1,8593,111,119,110,97,114,114,111,119,59,1,8597,97,114,112,111,111,110,4,2,108,114,18457,18463,101,102,116,59,1,8639,105,103,104,116,59,1,8638,117,115,59,1,8846,105,4,3,59,104,108,18484,18486,18489,1,965,59,1,978,111,110,59,1,965,112,97,114,114,111,119,115,59,1,8648,4,3,99,105,116,18512,18537,18542,4,2,111,114,18518,18532,114,110,4,2,59,101,18526,18528,1,8989,114,59,1,8989,111,112,59,1,8974,110,103,59,1,367,114,105,59,1,9721,99,114,59,3,55349,56522,4,3,100,105,114,18561,18566,18572,111,116,59,1,8944,108,100,101,59,1,361,105,4,2,59,102,18579,18581,1,9653,59,1,9652,4,2,97,109,18590,18595,114,114,59,1,8648,108,5,252,1,59,18601,1,252,97,110,103,108,101,59,1,10663,4,15,65,66,68,97,99,100,101,102,108,110,111,112,114,115,122,18643,18648,18661,18667,18847,18851,18857,18904,18909,18915,18931,18937,18943,18949,18996,114,114,59,1,8661,97,114,4,2,59,118,18656,18658,1,10984,59,1,10985,97,115,104,59,1,8872,4,2,110,114,18673,18679,103,114,116,59,1,10652,4,7,101,107,110,112,114,115,116,18695,18704,18711,18720,18742,18754,18810,112,115,105,108,111,110,59,1,1013,97,112,112,97,59,1,1008,111,116,104,105,110,103,59,1,8709,4,3,104,105,114,18728,18732,18735,105,59,1,981,59,1,982,111,112,116,111,59,1,8733,4,2,59,104,18748,18750,1,8597,111,59,1,1009,4,2,105,117,18760,18766,103,109,97,59,1,962,4,2,98,112,18772,18791,115,101,116,110,101,113,4,2,59,113,18784,18787,3,8842,65024,59,3,10955,65024,115,101,116,110,101,113,4,2,59,113,18803,18806,3,8843,65024,59,3,10956,65024,4,2,104,114,18816,18822,101,116,97,59,1,977,105,97,110,103,108,101,4,2,108,114,18834,18840,101,102,116,59,1,8882,105,103,104,116,59,1,8883,121,59,1,1074,97,115,104,59,1,8866,4,3,101,108,114,18865,18884,18890,4,3,59,98,101,18873,18875,18880,1,8744,97,114,59,1,8891,113,59,1,8794,108,105,112,59,1,8942,4,2,98,116,18896,18901,97,114,59,1,124,59,1,124,114,59,3,55349,56627,116,114,105,59,1,8882,115,117,4,2,98,112,18923,18927,59,3,8834,8402,59,3,8835,8402,112,102,59,3,55349,56679,114,111,112,59,1,8733,116,114,105,59,1,8883,4,2,99,117,18955,18960,114,59,3,55349,56523,4,2,98,112,18966,18981,110,4,2,69,101,18973,18977,59,3,10955,65024,59,3,8842,65024,110,4,2,69,101,18988,18992,59,3,10956,65024,59,3,8843,65024,105,103,122,97,103,59,1,10650,4,7,99,101,102,111,112,114,115,19020,19026,19061,19066,19072,19075,19089,105,114,99,59,1,373,4,2,100,105,19032,19055,4,2,98,103,19038,19043,97,114,59,1,10847,101,4,2,59,113,19050,19052,1,8743,59,1,8793,101,114,112,59,1,8472,114,59,3,55349,56628,112,102,59,3,55349,56680,59,1,8472,4,2,59,101,19081,19083,1,8768,97,116,104,59,1,8768,99,114,59,3,55349,56524,4,14,99,100,102,104,105,108,109,110,111,114,115,117,118,119,19125,19146,19152,19157,19173,19176,19192,19197,19202,19236,19252,19269,19286,19291,4,3,97,105,117,19133,19137,19142,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,116,114,105,59,1,9661,114,59,3,55349,56629,4,2,65,97,19163,19168,114,114,59,1,10234,114,114,59,1,10231,59,1,958,4,2,65,97,19182,19187,114,114,59,1,10232,114,114,59,1,10229,97,112,59,1,10236,105,115,59,1,8955,4,3,100,112,116,19210,19215,19230,111,116,59,1,10752,4,2,102,108,19221,19225,59,3,55349,56681,117,115,59,1,10753,105,109,101,59,1,10754,4,2,65,97,19242,19247,114,114,59,1,10233,114,114,59,1,10230,4,2,99,113,19258,19263,114,59,3,55349,56525,99,117,112,59,1,10758,4,2,112,116,19275,19281,108,117,115,59,1,10756,114,105,59,1,9651,101,101,59,1,8897,101,100,103,101,59,1,8896,4,8,97,99,101,102,105,111,115,117,19316,19335,19349,19357,19362,19367,19373,19379,99,4,2,117,121,19323,19332,116,101,5,253,1,59,19330,1,253,59,1,1103,4,2,105,121,19341,19346,114,99,59,1,375,59,1,1099,110,5,165,1,59,19355,1,165,114,59,3,55349,56630,99,121,59,1,1111,112,102,59,3,55349,56682,99,114,59,3,55349,56526,4,2,99,109,19385,19389,121,59,1,1102,108,5,255,1,59,19395,1,255,4,10,97,99,100,101,102,104,105,111,115,119,19419,19426,19441,19446,19462,19467,19472,19480,19486,19492,99,117,116,101,59,1,378,4,2,97,121,19432,19438,114,111,110,59,1,382,59,1,1079,111,116,59,1,380,4,2,101,116,19452,19458,116,114,102,59,1,8488,97,59,1,950,114,59,3,55349,56631,99,121,59,1,1078,103,114,97,114,114,59,1,8669,112,102,59,3,55349,56683,99,114,59,3,55349,56527,4,2,106,110,19498,19501,59,1,8205,106,59,1,8204]);","'use strict';\n\nconst unicode = require('../common/unicode');\nconst ERR = require('../common/error-codes');\n\n//Aliases\nconst $ = unicode.CODE_POINTS;\n\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nclass Preprocessor {\n    constructor() {\n        this.html = null;\n\n        this.pos = -1;\n        this.lastGapPos = -1;\n        this.lastCharPos = -1;\n\n        this.gapStack = [];\n\n        this.skipNextNewLine = false;\n\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n    }\n\n    _err() {\n        // NOTE: err reporting is noop by default. Enabled by mixin.\n    }\n\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.lastCharPos) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n\n            if (unicode.isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n\n                //NOTE: add gap that should be avoided during retreat\n                this._addGap();\n\n                return unicode.getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n\n        //NOTE: we are at the end of a chunk, therefore we can't infer surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n\n        return cp;\n    }\n\n    dropParsedChunk() {\n        if (this.pos > this.bufferWaterline) {\n            this.lastCharPos -= this.pos;\n            this.html = this.html.substring(this.pos);\n            this.pos = 0;\n            this.lastGapPos = -1;\n            this.gapStack = [];\n        }\n    }\n\n    write(chunk, isLastChunk) {\n        if (this.html) {\n            this.html += chunk;\n        } else {\n            this.html = chunk;\n        }\n\n        this.lastCharPos = this.html.length - 1;\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1, this.html.length);\n\n        this.lastCharPos = this.html.length - 1;\n        this.endOfChunkHit = false;\n    }\n\n    advance() {\n        this.pos++;\n\n        if (this.pos > this.lastCharPos) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n\n        let cp = this.html.charCodeAt(this.pos);\n\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (this.skipNextNewLine && cp === $.LINE_FEED) {\n            this.skipNextNewLine = false;\n            this._addGap();\n            return this.advance();\n        }\n\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n\n        this.skipNextNewLine = false;\n\n        if (unicode.isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange =\n            (cp > 0x1f && cp < 0x7f) || cp === $.LINE_FEED || cp === $.CARRIAGE_RETURN || (cp > 0x9f && cp < 0xfdd0);\n\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n\n        return cp;\n    }\n\n    _checkForProblematicCharacters(cp) {\n        if (unicode.isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        } else if (unicode.isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n\n    retreat() {\n        if (this.pos === this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n\n        this.pos--;\n    }\n}\n\nmodule.exports = Preprocessor;\n","'use strict';\n\nconst { DOCUMENT_MODE } = require('../common/html');\n\n//Node construction\nexports.createDocument = function() {\n    return {\n        nodeName: '#document',\n        mode: DOCUMENT_MODE.NO_QUIRKS,\n        childNodes: []\n    };\n};\n\nexports.createDocumentFragment = function() {\n    return {\n        nodeName: '#document-fragment',\n        childNodes: []\n    };\n};\n\nexports.createElement = function(tagName, namespaceURI, attrs) {\n    return {\n        nodeName: tagName,\n        tagName: tagName,\n        attrs: attrs,\n        namespaceURI: namespaceURI,\n        childNodes: [],\n        parentNode: null\n    };\n};\n\nexports.createCommentNode = function(data) {\n    return {\n        nodeName: '#comment',\n        data: data,\n        parentNode: null\n    };\n};\n\nconst createTextNode = function(value) {\n    return {\n        nodeName: '#text',\n        value: value,\n        parentNode: null\n    };\n};\n\n//Tree mutation\nconst appendChild = (exports.appendChild = function(parentNode, newNode) {\n    parentNode.childNodes.push(newNode);\n    newNode.parentNode = parentNode;\n});\n\nconst insertBefore = (exports.insertBefore = function(parentNode, newNode, referenceNode) {\n    const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n\n    parentNode.childNodes.splice(insertionIdx, 0, newNode);\n    newNode.parentNode = parentNode;\n});\n\nexports.setTemplateContent = function(templateElement, contentElement) {\n    templateElement.content = contentElement;\n};\n\nexports.getTemplateContent = function(templateElement) {\n    return templateElement.content;\n};\n\nexports.setDocumentType = function(document, name, publicId, systemId) {\n    let doctypeNode = null;\n\n    for (let i = 0; i < document.childNodes.length; i++) {\n        if (document.childNodes[i].nodeName === '#documentType') {\n            doctypeNode = document.childNodes[i];\n            break;\n        }\n    }\n\n    if (doctypeNode) {\n        doctypeNode.name = name;\n        doctypeNode.publicId = publicId;\n        doctypeNode.systemId = systemId;\n    } else {\n        appendChild(document, {\n            nodeName: '#documentType',\n            name: name,\n            publicId: publicId,\n            systemId: systemId\n        });\n    }\n};\n\nexports.setDocumentMode = function(document, mode) {\n    document.mode = mode;\n};\n\nexports.getDocumentMode = function(document) {\n    return document.mode;\n};\n\nexports.detachNode = function(node) {\n    if (node.parentNode) {\n        const idx = node.parentNode.childNodes.indexOf(node);\n\n        node.parentNode.childNodes.splice(idx, 1);\n        node.parentNode = null;\n    }\n};\n\nexports.insertText = function(parentNode, text) {\n    if (parentNode.childNodes.length) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n\n        if (prevNode.nodeName === '#text') {\n            prevNode.value += text;\n            return;\n        }\n    }\n\n    appendChild(parentNode, createTextNode(text));\n};\n\nexports.insertTextBefore = function(parentNode, text, referenceNode) {\n    const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n\n    if (prevNode && prevNode.nodeName === '#text') {\n        prevNode.value += text;\n    } else {\n        insertBefore(parentNode, createTextNode(text), referenceNode);\n    }\n};\n\nexports.adoptAttributes = function(recipient, attrs) {\n    const recipientAttrsMap = [];\n\n    for (let i = 0; i < recipient.attrs.length; i++) {\n        recipientAttrsMap.push(recipient.attrs[i].name);\n    }\n\n    for (let j = 0; j < attrs.length; j++) {\n        if (recipientAttrsMap.indexOf(attrs[j].name) === -1) {\n            recipient.attrs.push(attrs[j]);\n        }\n    }\n};\n\n//Tree traversing\nexports.getFirstChild = function(node) {\n    return node.childNodes[0];\n};\n\nexports.getChildNodes = function(node) {\n    return node.childNodes;\n};\n\nexports.getParentNode = function(node) {\n    return node.parentNode;\n};\n\nexports.getAttrList = function(element) {\n    return element.attrs;\n};\n\n//Node data\nexports.getTagName = function(element) {\n    return element.tagName;\n};\n\nexports.getNamespaceURI = function(element) {\n    return element.namespaceURI;\n};\n\nexports.getTextNodeContent = function(textNode) {\n    return textNode.value;\n};\n\nexports.getCommentNodeContent = function(commentNode) {\n    return commentNode.data;\n};\n\nexports.getDocumentTypeNodeName = function(doctypeNode) {\n    return doctypeNode.name;\n};\n\nexports.getDocumentTypeNodePublicId = function(doctypeNode) {\n    return doctypeNode.publicId;\n};\n\nexports.getDocumentTypeNodeSystemId = function(doctypeNode) {\n    return doctypeNode.systemId;\n};\n\n//Node types\nexports.isTextNode = function(node) {\n    return node.nodeName === '#text';\n};\n\nexports.isCommentNode = function(node) {\n    return node.nodeName === '#comment';\n};\n\nexports.isDocumentTypeNode = function(node) {\n    return node.nodeName === '#documentType';\n};\n\nexports.isElementNode = function(node) {\n    return !!node.tagName;\n};\n\n// Source code location\nexports.setNodeSourceCodeLocation = function(node, location) {\n    node.sourceCodeLocation = location;\n};\n\nexports.getNodeSourceCodeLocation = function(node) {\n    return node.sourceCodeLocation;\n};\n\nexports.updateNodeSourceCodeLocation = function(node, endLocation) {\n    node.sourceCodeLocation = Object.assign(node.sourceCodeLocation, endLocation);\n};\n","'use strict';\n\nmodule.exports = function mergeOptions(defaults, options) {\n    options = options || Object.create(null);\n\n    return [defaults, options].reduce((merged, optObj) => {\n        Object.keys(optObj).forEach(key => {\n            merged[key] = optObj[key];\n        });\n\n        return merged;\n    }, Object.create(null));\n};\n","'use strict';\n\nclass Mixin {\n    constructor(host) {\n        const originalMethods = {};\n        const overriddenMethods = this._getOverriddenMethods(this, originalMethods);\n\n        for (const key of Object.keys(overriddenMethods)) {\n            if (typeof overriddenMethods[key] === 'function') {\n                originalMethods[key] = host[key];\n                host[key] = overriddenMethods[key];\n            }\n        }\n    }\n\n    _getOverriddenMethods() {\n        throw new Error('Not implemented');\n    }\n}\n\nMixin.install = function(host, Ctor, opts) {\n    if (!host.__mixins) {\n        host.__mixins = [];\n    }\n\n    for (let i = 0; i < host.__mixins.length; i++) {\n        if (host.__mixins[i].constructor === Ctor) {\n            return host.__mixins[i];\n        }\n    }\n\n    const mixin = new Ctor(host, opts);\n\n    host.__mixins.push(mixin);\n\n    return mixin;\n};\n\nmodule.exports = Mixin;\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","_ref","children","React","AuthenticatedTemplate","NestedMdxBlock","UnauthenticatedTemplate","other","data","useStaticQuery","toLowerCase","includes","assign","href","requiredFile","allFile","edges","find","file","node","base","publicURL","style","color","alt","minWidth","maxWidth","isSVG","isGif","requiredSvgOrGif","className","height","width","zIndex","Image","id","startOfLeadingString","numbered","numbering","endOfLeadingString","to","itemTextInSnakeCase","_snakeCase","activePageMenuItem","setActivePageMenuItem","useContext","NavigationContext","isMenuItemActive","Link","child","index","_isPlaceholder","a","fn","f1","apply","this","Symbol","iterator","prop","x","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","list","item","idx","keys","Number","isInteger","is","pad","n","Date","toISOString","ws","String","trim","isElementAboveHalfViewport","element","elementRect","getBoundingClientRect","viewportHeight","window","innerHeight","document","documentElement","clientHeight","top","level","isInView","setIsInView","useState","isVisible","setIsVisible","ref","useRef","internalPageMenuItemId","Tag","activePageMenuItemIsVisible","setActivePageMenuItemIsVisible","useEffect","observer","IntersectionObserver","_ref2","entry","isIntersecting","threshold","rootMargin","observe","current","disconnect","handleScroll","titles","from","querySelectorAll","previousVisibleItemIndex","findIndex","currentVisibleItemId","addEventListener","removeEventListener","stringifyPosition","position","point","line","column","pos","start","end","VFileMessage","Error","reason","place","origin","parts","super","undefined","indexOf","slice","message","stack","fatal","source","ruleId","actual","expected","url","note","path","basename","ext","TypeError","assertPath","seenNonSlash","charCodeAt","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","code","join","segments","joined","absolute","allowAboveRoot","lastSlashIndex","result","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","normalize","sep","JSON","stringify","proc","cwd","isUrl","fileUrlOrPath","urlToPath","URL","error","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","buffer","messages","history","stored","map","assertNonEmpty","push","assertPart","stem","encoding","info","fail","part","bail","getPrototypeOf","toStringTag","trough","fns","pipeline","run","values","middlewareIndex","callback","pop","next","output","middleware","called","wrapped","parameters","fnExpectsCallback","done","Promise","then","wrap","use","middelware","unified","transformers","attachers","frozen","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","add","plugin","plugins","parse","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","processSync","destination","type","asyncName","Boolean","looksLikeAVFile","emptyOptions","one","includeImageAlt","includeHtml","splice","remove","items","chunkStart","unshift","combineExtensions","extensions","all","syntaxExtension","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","test","fromCharCode","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","content","tokenize","contentStart","attempt","parser","contentInitial","lineStart","previous","token","contentType","self","childFlow","childToken","lineStartOffset","continued","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","blankLine","partial","subtokenize","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","string","initializeFactory","field","text","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","expectedCode","state","startIndex","startBufferIndex","endIndex","endBufferIndex","view","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","create","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","normalizeIdentifier","replace","toUpperCase","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","head","hex","fromMarkdown","config","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","tokenStack","resume","setData","getData","listStack","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","depth","referenceType","ancestor","fragment","ordered","spread","checked","compiler","postprocess","concat","atCarriageReturn","match","endPosition","lastIndex","exec","Math","ceil","preprocess","d","combined","normalizeUri","skip","encodeURIComponent","convert","castFactory","typeFactory","tests","checks","any","anyFactory","propsFactory","visitParents","visitor","reverse","step","factory","parents","visit","subresult","grandparents","toResult","parent","pointStart","pointEnd","clean","footnoteReference","safeId","footnoteOrder","counter","footnoteCounts","reuseCounter","properties","clobberPrefix","dataFootnoteRef","ariaDescribedBy","patch","sup","applyData","revert","subtype","suffix","contents","listItemLoose","tab","space","trimLines","last","lines","trimLine","codePointAt","handlers","blockquote","break","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","results","loose","listLoose","disabled","root","table","rows","firstRow","shift","tableContent","body","tableCell","tableRow","siblings","align","cellIndex","cells","cell","alignValue","toml","ignore","yaml","footnoteDefinition","createState","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","unknownHandler","passThrough","cache","definitions","augment","hName","hProperties","hChildren","ctx","generated","props","defaultUnknownHandler","nodes","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","bridge","mutate","Schema","property","normal","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","whitespace","thing","valid","dash","cap","kebab","camelcase","charAt","hastToReact","protocols","uriTransformer","uri","first","colon","tableElements","Set","childrenToReact","childIndex","toReact","has","skipHtml","transformLinkUri","parentSchema","schema","addProperty","listDepth","component","components","basic","linkTarget","inline","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","dashes","padRight","padLeft","v","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkPlugins","remarkRehypeOptions","rehypePlugins","hastNode","propTypes","wwwPrefix","wwwPrefixInside","wwwPrefixAfter","domain","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","trail","domainAfter","domainAtPunctuation","sizeClose","pathInside","pathAtPunctuation","trailCharRefStart","trailBracketAfter","trailCharRefInside","emailDomainDotTrail","wwwAutolink","previousWww","previousUnbalanced","wwwAfter","protocolAutolink","previousProtocol","fromCodePoint","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","emailAutolink","dot","gfmAtext","previousEmail","atext","emailDomain","emailDomainAfter","emailDomainDot","gfmAutolinkLiteral","_gfmAutolinkLiteralWalkedInto","indent","tokenizePotentialGfmFootnoteCall","gfmFootnotes","resolveToPotentialGfmFootnoteCall","replacement","tokenizeGfmFootnoteCall","callStart","callData","callEscape","tokenizeDefinitionStart","labelAtMarker","labelInside","whitespaceAfter","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","gfmStrikethrough","single","singleTilde","strikethrough","gfmTable","seenDelimiter","hasDash","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","originalInterrupt","tokenizeRowEnd","atDelimiterRowBreak","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","tableBodyClose","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","inHead","inDelimiterRow","inRow","cellStart","seenCellInRow","tasklistCheck","spaceThenNonSpace","gfmTaskListItem","ccount","character","findAndReplace","RegExp","ignored","pairs","toExpression","toFunction","toPairs","pairIndex","grandparent","change","matchObject","global","inConstruct","notInConstruct","gfmAutolinkLiteralFromMarkdown","findUrl","findEmail","literalAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","gfmAutolinkLiteralToMarkdown","unsafe","split","isCorrectDomain","trailExec","closingParenIndex","openingParens","closingParens","splitUrl","email","association","repeat","eol","patternCompile","_compiled","patternInScope","listInScope","none","safe","positions","infos","expression","sort","numerical","escapeBackslashes","encode","b","whole","track","lineShift","move","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","enterFootnoteCall","enterFootnoteCallString","exitFootnoteCallString","exitFootnoteCall","safeOptions","tracker","subexit","indentLines","indexStack","createTracker","handle","bulletLastUsed","containerFlow","blank","containerPhrasing","peek","handleDelete","gfmStrikethroughFromMarkdown","gfmStrikethroughToMarkdown","defaultStringLength","toAlignment","gfmTableFromMarkdown","tableData","enterCell","tableHeader","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","row","handleTableCell","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","columnIndex","delimiterStart","delimiterEnd","markdownTable","listItemIndent","checkListItemIndent","bullet","bulletCurrent","checkBullet","incrementListMarker","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","firstParaghraph","sibling","gfmTaskListItemToMarkdown","checkable","checkbox","remarkGfm","gfm","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","gfmToMarkdown","tokens","buttonTypes","core","defaultTagName","caseSensitive","createAdjustMap","selector","subvalue","parseSelector","isProperties","addChild","isNaN","parsePrimitive","finalResult","s","h","webNamespaces","mathml","proto","nodeName","quirksMode","childNodes","location","loc","indices","toPoint","toOffset","namespaceURI","attrs","sourceCodeLocation","endTag","verbose","opening","closing","createLocation","startLine","startCol","endLine","endCol","endOffset","zwitch","invalid","unknown","currentSchema","createProperty","parentNode","publicId","systemId","htmlVoidElements","endTagToken","parseOptions","sourceCodeLocationInfo","scriptingEnabled","raw","resetTokenizer","_processInputToken","createParse5Location","chars","doctype","forceQuirks","preprocessor","posTracker","locationTracker","lastGapPos","lastCharPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","isEol","lineStartPos","droppedBufferSize","col","currentAttrLocation","ctLoc","_runParsingLoop","_consume","stitches","stitch","options_","fromParse5","documentMode","treeAdapter","createDocument","_bootstrap","__mixins","mock","_pushTmplInsertionMode","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","_adoptNodes","currentCharacterToken","tokenQueue","charRefCode","tempBuff","lastStartTagName","consumedAfterSnapshot","active","currentToken","currentAttr","selfClosing","toParse5","rehypeRaw","convertAllChildrenToReactElement","childrenAsReactElements","forEach","potentiallyConvertedReactElement","getReactElementFromAnyChild","getReactElementFromMarkdownString","markdownString","frontmatter","classValue","PathViewer","PathViewerItem","projectGroupName","projects","allPublicProjects","filteredProjects","project","_ref3","he","description","presentationUrl","YoutubeImage","frontendProductionUrl","frontendRepo","backendRepo","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","str","lineno","updatePosition","Position","errorsList","msg","err","filename","silent","re","m","comments","c","val","ret","decl","decls","declarations","isBuffer","array","iteratee","accumulator","initAccum","reAsciiWord","arrayMap","isSymbol","symbolProto","symbolToString","baseToString","arrayReduce","deburr","words","reApos","deburrLetter","basePropertyOf","reHasUnicodeWord","rsAstralRange","rsDingbatRange","rsLowerRange","rsUpperRange","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsModifier","rsOptVar","rsSeq","rsEmoji","reUnicodeWord","reLatin","reComboMark","baseGetTag","isObjectLike","snakeCase","createCompounder","word","asciiWords","hasUnicodeWord","unicodeWords","guard","u","for","e","f","g","l","p","q","t","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","StyleToObject","hasIterator","len","DOCUMENT_MODE","VALID_DOCTYPE_NAME","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","enquoteDoctypeId","quote","hasPrefix","prefixes","isConforming","getDocumentMode","QUIRKS","LIMITED_QUIRKS","NO_QUIRKS","serializeContent","controlCharacterInInputStream","noncharacterInInputStream","surrogateInInputStream","nonVoidHtmlElementStartTagWithTrailingSolidus","endTagWithAttributes","endTagWithTrailingSolidus","unexpectedSolidusInTag","unexpectedNullCharacter","unexpectedQuestionMarkInsteadOfTagName","invalidFirstCharacterOfTagName","unexpectedEqualsSignBeforeAttributeName","missingEndTagName","unexpectedCharacterInAttributeName","unknownNamedCharacterReference","missingSemicolonAfterCharacterReference","unexpectedCharacterAfterDoctypeSystemIdentifier","unexpectedCharacterInUnquotedAttributeValue","eofBeforeTagName","eofInTag","missingAttributeValue","missingWhitespaceBetweenAttributes","missingWhitespaceAfterDoctypePublicKeyword","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingWhitespaceAfterDoctypeSystemKeyword","missingQuoteBeforeDoctypePublicIdentifier","missingQuoteBeforeDoctypeSystemIdentifier","missingDoctypePublicIdentifier","missingDoctypeSystemIdentifier","abruptDoctypePublicIdentifier","abruptDoctypeSystemIdentifier","cdataInHtmlContent","incorrectlyOpenedComment","eofInScriptHtmlCommentLikeText","eofInDoctype","nestedComment","abruptClosingOfEmptyComment","eofInComment","incorrectlyClosedComment","eofInCdata","absenceOfDigitsInNumericCharacterReference","nullCharacterReference","surrogateCharacterReference","characterReferenceOutsideUnicodeRange","controlCharacterReference","noncharacterCharacterReference","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","duplicateAttribute","nonConformingDoctype","missingDoctype","misplacedDoctype","endTagWithoutMatchingOpenElement","closingOfElementWithOpenChildElements","disallowedContentInNoscriptInHead","openElementsLeftAfterEof","abandonedHeadElementChild","misplacedStartTagForHeadElement","nestedNoscriptInHead","eofInElementThatCanContainOnlyText","Tokenizer","HTML","$","TAG_NAMES","NS","NAMESPACES","ATTRS","MIME_TYPES","SVG_ATTRS_ADJUSTMENT_MAP","attributename","attributetype","basefrequency","baseprofile","calcmode","clippathunits","diffuseconstant","edgemode","filterunits","glyphref","gradienttransform","gradientunits","kernelmatrix","kernelunitlength","keypoints","keysplines","keytimes","lengthadjust","limitingconeangle","markerheight","markerunits","markerwidth","maskcontentunits","maskunits","numoctaves","pathlength","patterncontentunits","patterntransform","patternunits","pointsatx","pointsaty","pointsatz","preservealpha","preserveaspectratio","primitiveunits","refx","refy","repeatcount","repeatdur","requiredextensions","requiredfeatures","specularconstant","specularexponent","spreadmethod","startoffset","stddeviation","stitchtiles","surfacescale","systemlanguage","tablevalues","targetx","targety","textlength","viewbox","viewtarget","xchannelselector","ychannelselector","zoomandpan","XML_ATTRS_ADJUSTMENT_MAP","XLINK","XML","XMLNS","SVG_TAG_NAMES_ADJUSTMENT_MAP","altglyph","altglyphdef","altglyphitem","animatecolor","animatemotion","animatetransform","clippath","feblend","fecolormatrix","fecomponenttransfer","fecomposite","feconvolvematrix","fediffuselighting","fedisplacementmap","fedistantlight","feflood","fefunca","fefuncb","fefuncg","fefuncr","fegaussianblur","feimage","femerge","femergenode","femorphology","feoffset","fepointlight","fespecularlighting","fespotlight","fetile","feturbulence","foreignobject","lineargradient","radialgradient","textpath","EXITS_FOREIGN_CONTENT","B","BIG","BLOCKQUOTE","BODY","BR","CENTER","CODE","DD","DIV","DL","DT","EM","EMBED","H1","H2","H3","H4","H5","H6","HEAD","HR","I","IMG","LI","LISTING","MENU","META","NOBR","OL","P","PRE","RUBY","S","SMALL","SPAN","STRONG","STRIKE","SUB","SUP","TABLE","TT","U","UL","VAR","causesExit","startTagToken","tn","FONT","getTokenAttr","COLOR","SIZE","FACE","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","adjustTokenSVGTagName","adjustedTagName","isIntegrationPoint","ns","foreignNS","MATHML","ANNOTATION_XML","ENCODING","SVG","FOREIGN_OBJECT","DESC","TITLE","isHtmlIntegrationPoint","MI","MO","MN","MS","MTEXT","isMathMLTextIntegrationPoint","TYPE","ACTION","PROMPT","NAME","A","ADDRESS","APPLET","AREA","ARTICLE","ASIDE","BASE","BASEFONT","BGSOUND","BUTTON","CAPTION","COL","COLGROUP","DETAILS","DIALOG","DIR","FIELDSET","FIGCAPTION","FIGURE","FOOTER","FORM","FRAME","FRAMESET","HEADER","HGROUP","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LINK","MAIN","MALIGNMARK","MARQUEE","MATH","MGLYPH","NAV","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OPTGROUP","OPTION","PARAM","PLAINTEXT","RB","RP","RT","RTC","SCRIPT","SECTION","SELECT","SOURCE","STYLE","SUMMARY","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TR","TRACK","WBR","XMP","SPECIAL_ELEMENTS","UNDEFINED_CODE_POINTS","REPLACEMENT_CHARACTER","CODE_POINTS","EOF","NULL","TABULATION","CARRIAGE_RETURN","LINE_FEED","FORM_FEED","SPACE","EXCLAMATION_MARK","QUOTATION_MARK","NUMBER_SIGN","AMPERSAND","APOSTROPHE","HYPHEN_MINUS","SOLIDUS","DIGIT_0","DIGIT_9","SEMICOLON","LESS_THAN_SIGN","EQUALS_SIGN","GREATER_THAN_SIGN","QUESTION_MARK","LATIN_CAPITAL_A","LATIN_CAPITAL_F","LATIN_CAPITAL_X","LATIN_CAPITAL_Z","RIGHT_SQUARE_BRACKET","GRAVE_ACCENT","LATIN_SMALL_A","LATIN_SMALL_F","LATIN_SMALL_X","LATIN_SMALL_Z","CODE_POINT_SEQUENCES","DASH_DASH_STRING","DOCTYPE_STRING","CDATA_START_STRING","SCRIPT_STRING","PUBLIC_STRING","SYSTEM_STRING","isSurrogate","cp","isSurrogatePair","getSurrogatePairCodePoint","cp1","cp2","isControlCodePoint","isUndefinedCodePoint","Mixin","host","opts","onParseError","_setErrorLocation","_reportError","_getOverriddenMethods","mxn","_err","ErrorReportingMixinBase","ErrorReportingTokenizerMixin","LocationInfoTokenizerMixin","locBeforeToken","orig","fragmentContext","install","beforeToken","PositionTrackingPreprocessorMixin","lastErrOffset","ErrorReportingPreprocessorMixin","preprocessorMixin","onItemPop","popAllUpToHtmlElement","stackTop","LocationInfoOpenElementStackMixin","lastStartTagToken","lastFosterParentingLocation","_setStartLocation","setNodeSourceCodeLocation","_setEndLocation","closingToken","getNodeSourceCodeLocation","getTagName","endLoc","END_TAG_TOKEN","updateNodeSourceCodeLocation","tokenizerMixin","openElements","scriptHandler","_processTokenInForeignContent","_processToken","hasInScope","_setDocumentType","documentChildren","getChildNodes","cnLength","isDocumentTypeNode","_attachElementToTree","_appendElement","_insertElement","_insertTemplate","tmplContent","getTemplateContent","_appendCommentNode","commentNode","_findFosterParentingLocation","_insertCharacters","hasFosterParent","_shouldFosterParentOnInsertion","currentTmplContent","textNodeIdx","beforeElement","textNode","_getCurrentLocation","_attachCurrentAttrLocationInfo","methods","_createStartTagToken","_createEndTagToken","_createCommentToken","_createDoctypeToken","initialName","_createCharacterToken","ch","_createEOFToken","_createAttr","attrNameFirstCh","_leaveAttrName","toState","_leaveAttrValue","_emitCurrentToken","EOF_TOKEN","_emitCurrentCharacterToken","MODE","modeName","advance","retreat","dropParsedChunk","prevPos","reduction","FormattingElementList","entries","bookmark","_getNoahArkConditionCandidates","newElement","candidates","neAttrsLength","getAttrList","neTagName","neNamespaceURI","getNamespaceURI","MARKER_ENTRY","elementAttrs","_ensureNoahArkCondition","cLength","neAttrs","neAttrsMap","neAttr","j","cAttr","NOAH_ARK_CAPACITY","insertMarker","pushElement","ELEMENT_ENTRY","insertElementAfterBookmark","bookmarkIdx","removeEntry","clearToLastMarker","getElementEntryInScopeWithTagName","getElementEntry","OpenElementStack","LocationInfoParserMixin","ErrorReportingParserMixin","defaultTreeAdapter","mergeOptions","foreignContent","ERR","DEFAULT_OPTIONS","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","INITIAL_MODE","BEFORE_HTML_MODE","BEFORE_HEAD_MODE","IN_HEAD_MODE","IN_HEAD_NO_SCRIPT_MODE","AFTER_HEAD_MODE","IN_BODY_MODE","TEXT_MODE","IN_TABLE_MODE","IN_TABLE_TEXT_MODE","IN_CAPTION_MODE","IN_COLUMN_GROUP_MODE","IN_TABLE_BODY_MODE","IN_ROW_MODE","IN_CELL_MODE","IN_SELECT_MODE","IN_SELECT_IN_TABLE_MODE","IN_TEMPLATE_MODE","AFTER_BODY_MODE","IN_FRAMESET_MODE","AFTER_FRAMESET_MODE","AFTER_AFTER_BODY_MODE","AFTER_AFTER_FRAMESET_MODE","INSERTION_MODE_RESET_MAP","TEMPLATE_INSERTION_MODE_SWITCH_MAP","TOKEN_HANDLERS","CHARACTER_TOKEN","tokenInInitialMode","NULL_CHARACTER_TOKEN","WHITESPACE_CHARACTER_TOKEN","ignoreToken","COMMENT_TOKEN","appendComment","DOCTYPE_TOKEN","setDocumentMode","insertionMode","START_TAG_TOKEN","tokenBeforeHtml","tokenBeforeHead","startTagInBody","headElement","tokenInHead","insertCharacters","startTagInHead","endTagInHead","tokenInHeadNoScript","tokenAfterHead","framesetOk","characterInBody","whitespaceCharacterInBody","endTagInBody","eofInBody","pendingScript","originalInsertionMode","characterInTable","startTagInTable","endTagInTable","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","tokenInTableText","hasInTableScope","generateImpliedEndTags","popUntilTagNamePopped","activeFormattingElements","tokenInColumnGroup","ackSelfClosing","currentTagName","clearBackToTableBodyContext","_insertFakeElement","hasTableBodyContextInTableScope","clearBackToTableRowContext","_closeTableCell","startTagInSelect","endTagInSelect","newInsertionMode","_popTmplInsertionMode","eofInTemplate","tokenAfterBody","stopParsing","isRootHtmlElementCurrent","tokenAfterAfterBody","appendCommentToDocument","aaObtainFormattingElementEntry","formattingElementEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","_isSpecialElement","popUntilElementPopped","aaInnerLoop","formattingElement","lastElement","nextElement","getCommonAncestor","elementEntry","counterOverflow","aaRecreateElementFromEntry","detachNode","appendChild","aaInsertLastNodeInCommonAncestor","commonAncestor","_isElementCausesFosterParenting","_fosterParentElement","aaReplaceFormattingElement","insertAfter","callAdoptionAgency","stopped","_switchToTextParsing","RCDATA","RAWTEXT","SCRIPT_DATA","tmplCount","generateImpliedEndTagsThoroughly","errCode","_reconstructActiveFormattingElements","addressStartTagInBody","hasInButtonScope","_closePElement","preStartTagInBody","bStartTagInBody","appletStartTagInBody","areaStartTagInBody","paramStartTagInBody","noembedStartTagInBody","optgroupStartTagInBody","rbStartTagInBody","genericStartTagInBody","activeElementEntry","aStartTagInBody","numberedHeaderStartTagInBody","elementTn","closeTn","generateImpliedEndTagsWithExclusion","listItemStartTagInBody","hrStartTagInBody","rtStartTagInBody","xmpStartTagInBody","svgStartTagInBody","adoptAttributes","htmlStartTagInBody","bodyElement","tryPeekProperlyNestedBodyElement","bodyStartTagInBody","inTemplate","formElement","formStartTagInBody","nobrStartTagInBody","mathStartTagInBody","menuStartTagInBody","tableStartTagInBody","inputType","inputStartTagInBody","imageStartTagInBody","buttonStartTagInBody","iframeStartTagInBody","selectStartTagInBody","framesetStartTagInBody","textareaStartTagInBody","plaintextStartTagInBody","addressEndTagInBody","appletEndTagInBody","pEndTagInBody","hasInListItemScope","liEndTagInBody","ddEndTagInBody","hasNumberedHeaderInScope","popUntilNumberedHeaderPopped","numberedHeaderEndTagInBody","brEndTagInBody","bodyEndTagInBody","htmlEndTagInBody","formEndTagInBody","tmplInsertionModeStackTop","curTn","tokenInTable","clearBackToTableContext","tdStartTagInTable","colStartTagInTable","formStartTagInTable","tableStartTagInTable","tbodyStartTagInTable","inputStartTagInTable","captionStartTagInTable","colgroupStartTagInTable","savedFosterParentingState","fosterParentingEnabled","_processTokenInBodyMode","hasInSelectScope","prevOpenElement","prevOpenElementTn","parseFragment","documentMock","rootElement","getFirstChild","createDocumentFragment","tmplInsertionModeStack","currentTmplInsertionMode","_setupTokenizerCDATAMode","getNextToken","HIBERNATION_TOKEN","substr","runParsingLoopForCurrentChunk","writeCallback","script","_getAdjustedCurrentElement","allowCDATA","_isIntegrationPoint","nextTokenizerState","switchToPlaintextParsing","getParentNode","setDocumentType","tmpl","setTemplateContent","createCommentNode","_fosterParentText","insertText","donor","recipient","_shouldProcessTokenInForeignContent","isCharacterToken","characterInForeignContent","nullCharacterInForeignContent","currentNs","startTagInForeignContent","endTagInForeignContent","listLength","unopenIdx","popUntilTableCellPopped","_resetInsertionModeForSelect","selectIdx","openElement","insertBefore","insertTextBefore","isImpliedEndTagRequired","isImpliedEndTagRequiredThoroughly","isScopingElement","_indexOf","_isInTemplate","_updateCurrentElement","oldElement","referenceElement","insertionIdx","poppedElement","elementIdx","exclusionTagName","Preprocessor","neTree","$$","C1_CONTROLS_REFERENCE_REPLACEMENTS","DATA_STATE","RCDATA_STATE","RAWTEXT_STATE","SCRIPT_DATA_STATE","PLAINTEXT_STATE","TAG_OPEN_STATE","END_TAG_OPEN_STATE","TAG_NAME_STATE","RCDATA_LESS_THAN_SIGN_STATE","RCDATA_END_TAG_OPEN_STATE","RCDATA_END_TAG_NAME_STATE","RAWTEXT_LESS_THAN_SIGN_STATE","RAWTEXT_END_TAG_OPEN_STATE","RAWTEXT_END_TAG_NAME_STATE","SCRIPT_DATA_LESS_THAN_SIGN_STATE","SCRIPT_DATA_END_TAG_OPEN_STATE","SCRIPT_DATA_END_TAG_NAME_STATE","SCRIPT_DATA_ESCAPE_START_STATE","SCRIPT_DATA_ESCAPE_START_DASH_STATE","SCRIPT_DATA_ESCAPED_STATE","SCRIPT_DATA_ESCAPED_DASH_STATE","SCRIPT_DATA_ESCAPED_DASH_DASH_STATE","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE","SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE","SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE","SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE","SCRIPT_DATA_DOUBLE_ESCAPED_STATE","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE","SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE","BEFORE_ATTRIBUTE_NAME_STATE","ATTRIBUTE_NAME_STATE","AFTER_ATTRIBUTE_NAME_STATE","BEFORE_ATTRIBUTE_VALUE_STATE","ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE","ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE","ATTRIBUTE_VALUE_UNQUOTED_STATE","AFTER_ATTRIBUTE_VALUE_QUOTED_STATE","SELF_CLOSING_START_TAG_STATE","BOGUS_COMMENT_STATE","MARKUP_DECLARATION_OPEN_STATE","COMMENT_START_STATE","COMMENT_START_DASH_STATE","COMMENT_STATE","COMMENT_LESS_THAN_SIGN_STATE","COMMENT_LESS_THAN_SIGN_BANG_STATE","COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE","COMMENT_END_DASH_STATE","COMMENT_END_STATE","COMMENT_END_BANG_STATE","DOCTYPE_STATE","BEFORE_DOCTYPE_NAME_STATE","DOCTYPE_NAME_STATE","AFTER_DOCTYPE_NAME_STATE","AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE","AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE","AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE","AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE","BOGUS_DOCTYPE_STATE","CDATA_SECTION_STATE","CDATA_SECTION_BRACKET_STATE","CDATA_SECTION_END_STATE","CHARACTER_REFERENCE_STATE","NAMED_CHARACTER_REFERENCE_STATE","AMBIGUOUS_AMPERSAND_STATE","NUMERIC_CHARACTER_REFERENCE_STATE","HEXADEMICAL_CHARACTER_REFERENCE_START_STATE","DECIMAL_CHARACTER_REFERENCE_START_STATE","HEXADEMICAL_CHARACTER_REFERENCE_STATE","DECIMAL_CHARACTER_REFERENCE_STATE","NUMERIC_CHARACTER_REFERENCE_END_STATE","isWhitespace","isAsciiDigit","isAsciiUpper","isAsciiLower","isAsciiLetter","isAsciiAlphaNumeric","isAsciiUpperHexDigit","isAsciiLowerHexDigit","toAsciiLowerCodePoint","toChar","toAsciiLowerChar","findNamedEntityTreeBranch","nodeIx","branchCount","lo","hi","mid","midCp","_errOnNextCodePoint","_unconsume","_ensureHibernation","isLastChunk","insertHtmlAtCurrentPos","_reconsumeInState","_consumeSequenceIfMatch","startCp","consumedCount","isMatch","patternLength","patternCp","patternPos","_isTempBufferEqualToScriptString","ct","_emitEOFToken","_appendCharToCurrentCharacterToken","_emitCodePoint","_emitSeveralCodePoints","codePoints","_emitChars","_matchNamedCharacterReference","excess","inNode","HAS_DATA_FLAG","_isCharacterReferenceInAttribute","_isCharacterReferenceAttributeQuirk","withSemicolon","nextCp","_flushCodePointsConsumedAsCharacterReference","matchResult","isAsciiHexDigit","DATA","attrName","Uint16Array","bufferWaterline","_addGap","_processSurrogate","substring","_checkForProblematicCharacters","createTextNode","newNode","referenceNode","templateElement","contentElement","doctypeNode","prevNode","recipientAttrsMap","getTextNodeContent","getCommentNodeContent","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isTextNode","isCommentNode","isElementNode","endLocation","defaults","reduce","merged","optObj","originalMethods","overriddenMethods","Ctor","mixin"],"sourceRoot":""}