"use strict";(self.webpackChunkmyjscourse=self.webpackChunkmyjscourse||[]).push([[1858],{391:function(e,n,t){t.r(n),t.d(n,{default:function(){return w}});var r=t(3905),a=t(7294);function l(e){const n=Object.assign({h1:"h1",p:"p",br:"br",strong:"strong",ul:"ul",li:"li",pre:"pre",code:"code",h2:"h2",h3:"h3",a:"a"},(0,r.ah)(),e.components),{PathViewer:t,PathViewerItem:l,InternalPageMenu:s,InternalPageMenuItem:i,InternalPageTitle:u}=n;return s||o("InternalPageMenu",!0),i||o("InternalPageMenuItem",!0),u||o("InternalPageTitle",!0),t||o("PathViewer",!0),l||o("PathViewerItem",!0),a.createElement(a.Fragment,null,a.createElement(t,null,a.createElement(l,{to:"/"}," web2course "),a.createElement(l,{to:"/part1"}," Partie 1 "),a.createElement(l,{selected:!0}," c) JSON ")),"\n",a.createElement(n.h1,null,"c) Introduction au JSON et persistance des donn√©es"),"\n",a.createElement(s,null,a.createElement(i,null," Introduction au JSON "),a.createElement(i,null," Communication de donn√©es en JSON "),a.createElement(i,null," Sauvegarde de donn√©es JSON ")),"\n",a.createElement(n.h1,null,a.createElement(u,null," Introduction au JSON ")),"\n",a.createElement(n.p,null,"Pr√©c√©demment, nous avons d√©velopp√© notre premi√®re RESTful API.",a.createElement(n.br),"\n","Nous avons implicitement d√©couvert le JSON, notamment lorsque nous avons fait des requ√™tes vers nos API."),"\n",a.createElement(n.p,null,"Nous allons maintenant voir ce que permet le JSON, notamment la cr√©ation de fichiers permettant de sauvegarder des donn√©es facilement en JS."),"\n",a.createElement(n.p,null,a.createElement(n.strong,null,"JSON")," vient de ",a.createElement(n.strong,null,"J"),"ava",a.createElement(n.strong,null,"S"),"cript ",a.createElement(n.strong,null,"O"),"bject ",a.createElement(n.strong,null,"N"),"otation."),"\n",a.createElement(n.p,null,"C'est une syntaxe pour ",a.createElement(n.strong,null,"√©changer")," et ",a.createElement(n.strong,null,"faire persister des donn√©es"),"."),"\n",a.createElement(n.p,null,"Du JSON, c'est du texte en notation JS."),"\n",a.createElement(n.p,null,"Voici les types de donn√©es qui sont valides en JSON :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,a.createElement(n.strong,null,"string")),"\n",a.createElement(n.li,null,a.createElement(n.strong,null,"number")),"\n",a.createElement(n.li,null,a.createElement(n.strong,null,"object")),"\n",a.createElement(n.li,null,a.createElement(n.strong,null,"array")),"\n",a.createElement(n.li,null,a.createElement(n.strong,null,"boolean")),"\n",a.createElement(n.li,null,a.createElement(n.strong,null,"null")),"\n"),"\n",a.createElement(n.p,null,"‚ö° Il n'y a donc pas de ",a.createElement(n.strong,null,"function"),", ",a.createElement(n.strong,null,"date")," et ",a.createElement(n.strong,null,"undefined"),"."),"\n",a.createElement(n.p,null,"Voici un exemple de repr√©sentation de donn√©es en JSON qui correspond √† ce que tr√®s souvent une API renvoie, un array d'objets :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-json"},'[\r\n  {\r\n    "email": "raphael@voila.com",\r\n    "fullname": "Raphael Baroni"\r\n  },\r\n  {\r\n    "email": "jkj@herenqn.com",\r\n    "fullname": "JK Roling"\r\n  },\r\n  {\r\n    "email": "serena@gmail.com",\r\n    "fullname": "Serena Here"\r\n  }\r\n]\n')),"\n",a.createElement(n.h1,null,a.createElement(u,null," Communication de donn√©es en JSON ")),"\n",a.createElement(n.h2,null,"S√©rialisation d'objets JS vers du JSON"),"\n",a.createElement(n.h3,null,"Envoi d'une application serveur vers un client"),"\n",a.createElement(n.p,null,"Via Express, nous pouvons tr√®s facilement convertir un objet JS en JSON afin de l'envoyer vers une application cliente gr√¢ce √† la m√©thode ",a.createElement(n.strong,null,a.createElement(n.code,null,"res.json()")),"."),"\n",a.createElement(n.p,null,'C\'est ce que nous appelons de la s√©rialisation de donn√©es, nous passons du monde "objets en m√©moire" vers du texte (ou des octets) qui vont voyager sur un r√©seau.'),"\n",a.createElement(n.p,null,"Le code actuel de notre RESTful API, renvoyant un array de pizzas au format JSON, est g√©r√© automatiquement via :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"res.json(orderedMenu ?? MENU);\n")),"\n",a.createElement(n.p,null,"Lorsque l'API renvoie ",a.createElement(n.strong,null,a.createElement(n.code,null,"MENU"))," avec les pizzas par d√©faut, voici le JSON qui voyage sur le r√©seau :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-json"},'[\r\n  {\r\n    "id": 1,\r\n    "title": "4 fromages",\r\n    "content": "Gruy√®re, S√©rac, Appenzel, Gorgonzola, Tomates"\r\n  },\r\n  {\r\n    "id": 2,\r\n    "title": "Vegan",\r\n    "content": "Tomates, Courgettes, Oignons, Aubergines, Poivrons"\r\n  },\r\n  {\r\n    "id": 3,\r\n    "title": "Vegetarian",\r\n    "content": "Mozarella, Tomates, Oignons, Poivrons, Champignons, Olives"\r\n  },\r\n  {\r\n    "id": 4,\r\n    "title": "Alpage",\r\n    "content": "Gruy√®re, Mozarella, Lardons, Tomates"\r\n  },\r\n  {\r\n    "id": 5,\r\n    "title": "Diable",\r\n    "content": "Tomates, Mozarella, Chorizo piquant, Jalapenos"\r\n  }\r\n]\n')),"\n",a.createElement(n.p,null,"üí≠ La puissance du JSON peut d√©j√† s'exprimer ici. Mais comment ?"),"\n",a.createElement(n.p,null,"L'API renvoie un array d'objets, des pizzas, au format JSON, qui correspond en fait √† un format texte avec des conventions.",a.createElement(n.br),"\n","Il est donc possible √† n'importe quelle application cliente d'utiliser ces donn√©es, quelque soit la technologie, le langage utilis√© pour d√©velopper cette application cliente.",a.createElement(n.br),"\n","Ainsi, par exemple, une application Android, d√©velopp√©e en Java, pourrait consommer cette API pour afficher un menu de pizzas !"),"\n",a.createElement(n.h3,null,"Envoi d'une application cliente vers un serveur"),"\n",a.createElement(n.p,null,"Il est possible aussi, et nous le verrons plus tard en d√©tails, de communiquer des donn√©es d'une IHM vers une API."),"\n",a.createElement(n.p,null,"Nous avons d√©j√† envoy√© du JSON √† une API via REST Client.",a.createElement(n.br),"\n",'Voici la requ√™te envoyant, dans son body, la repr√©sentation JSON d\'une ressource de type "pizzas" √† cr√©er :'),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-http"},'### Create a pizza\r\nPOST {{baseUrl}}/pizzas\r\nContent-Type: application/json\r\n\r\n{\r\n    "title":"Magic Green",\r\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\r\n}\n')),"\n",a.createElement(n.p,null,'Il est important de communiquer le "media type" (ou ',a.createElement(n.strong,null,"MIME"),') du corps de la requ√™te : "',a.createElement(n.strong,null,'application/json"'),".",a.createElement(n.br),"\n","Cela indique √† l'application qui est la cible de la requ√™te quelle genre d'outil elle devra utiliser pour d√©coder les donn√©es.",a.createElement(n.br),"\n","Par exemple, il faut faire un traitement diff√©rent pour r√©cup√©rer des donn√©es au format JSON que pour r√©cup√©rer des donn√©es directement associ√©es √† un fichier image."),"\n",a.createElement(n.p,null,"Si l'on consid√®re une IHM, il sera utile plus tard d'avoir un formulaire permettant d'ajouter des pizzas.",a.createElement(n.br),"\n","Le JS associ√© √† l'IHM permettra d'envoyer les donn√©es du formulaire au format JSON, via la m√©thode ",a.createElement(n.strong,null,a.createElement(n.code,null,"fetch")),", vers notre RESTful API g√©rant les ressources de type pizzas."),"\n",a.createElement(n.p,null,'Voici un exemple de code que vous ne devez pas encore comprendre, qui permet √† une IHM de cr√©er une ressource de type "pizzas" :'),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"const options = {\r\n  method: 'POST',\r\n  body: JSON.stringify({\r\n    title: title.value,\r\n    content: content.value,\r\n  }),\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n};\r\n\r\nconst response = await fetch('/api/pizzas', options);\r\nconst pizza = await response.json();\n")),"\n",a.createElement(n.h2,null,"Parsing de donn√©es JSON vers un objet JS"),"\n",a.createElement(n.h3,null,"R√©ception par une application serveur"),"\n",a.createElement(n.p,null,"Via Express, nous pouvons tr√®s facilement convertir du JSON vers un objet JS √† l'aide du middleware ",a.createElement(n.strong,null,a.createElement(n.code,null,"express.json()")),"."),"\n",a.createElement(n.p,null,"C'est ce que nous appelons du parsing de donn√©es, ou de la d√©s√©rialisation, c'est quand nous passons du monde texte / JSON (ou des octets) vers des \"objets en m√©moire\"."),"\n",a.createElement(n.p,null,"Le code actuel de notre RESTful API r√©cup√©rant les donn√©es d'une pizza √† cr√©er est tr√®s simple :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"const title = req?.body?.title?.length !== 0 ? req.body.title : undefined;\r\nconst content = req?.body?.content?.length !== 0 ? req.body.content : undefined;\n")),"\n",a.createElement(n.p,null,"Automatiquement gr√¢ce √† Express et au middleware appel√© dans ",a.createElement(n.strong,null,"apps.js")," (",a.createElement(n.strong,null,a.createElement(n.code,null,"app.use(express.json());")),"), ",a.createElement(n.strong,null,a.createElement(n.code,null,"req.body"))," contient un objet JS repr√©sentant toutes les donn√©es JSON qui √©taient pr√©sentes dans le body de la requ√™te cliente, comme par exemple :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-http"},'### Create a pizza\r\nPOST {{baseUrl}}/pizzas\r\nContent-Type: application/json\r\n\r\n{\r\n    "title":"Magic Green",\r\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\r\n}\n')),"\n",a.createElement(n.h3,null,"R√©ception par une application cliente"),"\n",a.createElement(n.p,null,"Plus tard, nous verrons comment une IHM peut utiliser les donn√©es envoy√©es par une API."),"\n",a.createElement(n.p,null,"La m√©thode ",a.createElement(n.strong,null,a.createElement(n.code,null,"fetch"))," en collaboration avec la m√©thode ",a.createElement(n.strong,null,a.createElement(n.code,null,"json"))," sur la r√©ponse d'une API permet de r√©cup√©rer et parser des donn√©es JSON vers un objet JS.",a.createElement(n.br),"\n","Par exemple, cette requ√™te de cr√©ation d'une pizza parse la ressource qui a √©t√© rajout√©e c√¥t√© API au sein de la variable ",a.createElement(n.strong,null,a.createElement(n.code,null,"pizza"))," :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"const options = {\r\n  method: 'POST',\r\n  body: JSON.stringify({\r\n    title: title.value,\r\n    content: content.value,\r\n  }),\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n};\r\n\r\nconst response = await fetch('/api/pizzas', options);\r\nconst pizza = await response.json();\n")),"\n",a.createElement(n.h1,null,a.createElement(u,null," Sauvegarde de donn√©es JSON ")),"\n",a.createElement(n.h2,null,"S√©rialisation d'objets JS vers du JSON"),"\n",a.createElement(n.h3,null,"Application c√¥t√© serveur"),"\n",a.createElement(n.p,null,"La fonction JS ",a.createElement(n.strong,null,a.createElement(n.code,null,"JSON.stringify(objectToSerialised)"))," permet de cr√©er une ",a.createElement(n.strong,null,"string")," contenant la repr√©sentation JSON de l'objet √† s√©rialiser."),"\n",a.createElement(n.p,null,"C√¥t√© serveur, il est ensuite facile de sauvegarder les donn√©es JSON au sein d'un fichier."),"\n",a.createElement(n.p,null,"Voici un exemple de code, une fonction, permettant √† une application Express de sauvegarder au format JSON un objet dans un fichier ",a.createElement(n.strong,null,".json")," dont son chemin et nom complet sont indiqu√©s dans le param√®tre ",a.createElement(n.strong,null,"filePath")," :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"/**\r\n * Serialize the content of an Object within a file\r\n * @param {String} filePath - path to the .json file\r\n * @param {Array} object - Object to be written within the .json file.\r\n * Even if the file exists, its whole content is reset by the given object.\r\n */\r\nfunction serialize(filePath, object) {\r\n  const objectSerialized = JSON.stringify(object);\r\n  fs.writeFileSync(filePath, objectSerialized);\r\n}\n")),"\n",a.createElement(n.p,null,'Imaginez que, au sein du router traitant des ressources de type "pizzas", vous passiez la valeur suivante √† ',a.createElement(n.strong,null,"filePath")," :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"const jsonDbPath = __dirname + '/../data/pizzas.json';\r\nserialize(jsonDbPath, MENU);\n")),"\n",a.createElement(n.p,null,"Cela signifie que dans le projet contenant notre API, nous allons sauvegarder le menu des pizzas au format JSON dans le fichier JSON ",a.createElement(n.strong,null,"/data/pizzas.json"),"."),"\n",a.createElement(n.p,null,"Ce fichier est en fait une base de donn√©es simplifi√©e !",a.createElement(n.br),"\n","Nous allons prochainement voir comment r√©cup√©rer ces donn√©es au sein d'un array."),"\n",a.createElement(n.p,null,'Nous allons maintenant r√©aliser un tutoriel pour rendre les ressources de type "pizzas" persistantes.',a.createElement(n.br),"\n","Nous allons repartir de l'API cr√©√©e au module 4."),"\n",a.createElement(n.p,null,"Dans votre repo ",a.createElement(n.strong,null,"web2"),", veuillez copier / coller le r√©pertoire ",a.createElement(n.strong,null,"/tutorials/pizzeria/api/basic")," et le renommer en ",a.createElement(n.strong,null,"/tutorials/pizzeria/api/persistence"),"."),"\n",a.createElement(n.p,null,"En cas de souci, vous pouvez t√©l√©charger le code du tutoriel pr√©c√©dent ici : ",a.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/basic"},"api-basic"),"."),"\n",a.createElement(n.p,null,"Veuillez ouvrir un terminal au niveau de ce r√©pertoire."),"\n",a.createElement(n.p,null,"Pour la suite du tutoriel, nous consid√©rons que tous les chemins absolus d√©marrent du r√©pertoire ",a.createElement(n.strong,null,"/tutorials/pizzeria/api/persistence")," (ou ",a.createElement(n.strong,null,"/web2/tutorials/pizzeria/api/persistence")," si l'on consid√®re le nom du r√©pertoire du repo)."),"\n",a.createElement(n.p,null,"Veuillez cr√©er un nouveau r√©pertoire ",a.createElement(n.strong,null,"/utils"),". Au sein de ce r√©pertoire, veuillez cr√©er le module ",a.createElement(n.strong,null,"/utils/json.js")," dans lequel vous allez ajouter ces fonctions :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"const fs = require('fs');\r\n\r\n/**\r\n * Parse items given in a .json file\r\n * @param {String} filePath - path to the .json file\r\n * If the file does not exist or it's content cannot be parsed as JSON data,\r\n * use the default data.\r\n * @param {Array} defaultArray - Content to be used when the .json file does not exists\r\n * @returns {Array} : the array that was parsed from the file (or defaultArray)\r\n */\r\nfunction parse(filePath, defaultArray = []) {\r\n  if (!fs.existsSync(filePath)) return defaultArray;\r\n  const fileData = fs.readFileSync(filePath);\r\n  try {\r\n    // parse() Throws a SyntaxError exception if the string to parse is not valid JSON.\r\n    return JSON.parse(fileData);\r\n  } catch (err) {\r\n    return defaultArray;\r\n  }\r\n}\r\n\r\n/**\r\n * Serialize the content of an Object within a file\r\n * @param {String} filePath - path to the .json file\r\n * @param {Array} object - Object to be written within the .json file.\r\n * Even if the file exists, its whole content is reset by the given object.\r\n */\r\nfunction serialize(filePath, object) {\r\n  const objectSerialized = JSON.stringify(object);\r\n  createPotentialLastDirectory(filePath);\r\n  fs.writeFileSync(filePath, objectSerialized);\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} filePath - path to the .json file\r\n */\r\nfunction createPotentialLastDirectory(filePath) {\r\n  const pathToLastDirectory = filePath.substring(0, filePath.lastIndexOf('/'));\r\n\r\n  if (fs.existsSync(pathToLastDirectory)) return;\r\n\r\n  fs.mkdirSync(pathToLastDirectory);\r\n}\r\n\r\nmodule.exports = { parse, serialize };\n")),"\n",a.createElement(n.p,null,"L'op√©ration de s√©rialisation des donn√©es est faite via la fonction ",a.createElement(n.strong,null,"serialize")," de ",a.createElement(n.strong,null,"/utils/json.js"),". Pour se simplifier la vie et ne pas obliger les d√©veloppeurs √† devoir cr√©er manuellement un r√©pertoire qui contiendra la mini DB de pizzas (le fichier ",a.createElement(n.strong,null,"pizzas.json")," dans la suite de l'exemple), une fonction a √©t√© cr√©√©e qui s'appelle ",a.createElement(n.strong,null,"createPotentialLastDirectory"),".",a.createElement(n.br),"\n","La fonction ",a.createElement(n.strong,null,"serialize")," fait appel √† cette fonction qui va, si n√©cessaire, cr√©er le dernier r√©pertoire donn√© dans le chemin vers le fichier JSON (le r√©pertoire ",a.createElement(n.strong,null,"/data")," dans la suite de l'exemple)."),"\n",a.createElement(n.p,null,"Il n'est pas int√©ressant de retenir par coeur le code donn√© dans ",a.createElement(n.strong,null,"/utils/json.js"),". Par contre, il est important que vous compreniez celui-ci, ce qu'il fait."),"\n",a.createElement(n.p,null,'A pr√©sent, nous allons convertir le code du router de "pizzas" pour rendre les donn√©es peristantes.',a.createElement(n.br),"\n","Voici ce que nous devons faire pour les op√©rations de :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,a.createElement(n.strong,null,"lecture de ressources")," : il suffit de faire appel √† la fonction ",a.createElement(n.strong,null,a.createElement(n.code,null,"parse"))," qui tentera de charger les ressources qui devraient se trouver dans le r√©pertoire ",a.createElement(n.strong,null,"/data/pizzas.json"),". Notons que le chemin vers ce fichier JSON est un simple choix, il doit √™tre configurable."),"\n",a.createElement(n.li,null,a.createElement(n.strong,null,"√©criture de ressources")," : lors d'une op√©ration d'√©criture pour cr√©er une nouvelle ressource, ou pour mettre √† jour une ressource existante, voici les √©tapes :","\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"cr√©ation d'une liste de toutes les pizzas dans un array : cela correspond √† l'utilisation de la fonction ",a.createElement(n.strong,null,a.createElement(n.code,null,"parse"))," pour tenter de charger ce qui est contenu dans la mini DB de pizzas."),"\n",a.createElement(n.li,null,"mise √† jour de l'array soit en ajoutant un nouvel objet (une pizza), soit en modifiant un objet existant, soit en supprimant un objet."),"\n",a.createElement(n.li,null,"r√©√©criture compl√®te du fichier JSON contenant la liste de pizzas sur base de l'array de pizzas qui a pr√©c√©demment √©t√© mis √† jour via la m√©thode ",a.createElement(n.strong,null,a.createElement(n.code,null,"serialize")),"."),"\n"),"\n"),"\n"),"\n",a.createElement(n.p,null,"Voici le code du router mis √† jour afin de g√©rer la persistance selon la strat√©gie d√©finie ci-dessus, les modifications √©tant surlign√©es :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"var express = require('express');\r\nconst { serialize, parse } = require('../utils/json');\r\nvar router = express.Router();\r\n\r\nconst jsonDbPath = __dirname + '/../data/pizzas.json';\r\n\r\nconst MENU = [\r\n  {\r\n    id: 1,\r\n    title: '4 fromages',\r\n    content: 'Gruy√®re, S√©rac, Appenzel, Gorgonzola, Tomates',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Vegan',\r\n    content: 'Tomates, Courgettes, Oignons, Aubergines, Poivrons',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Vegetarian',\r\n    content: 'Mozarella, Tomates, Oignons, Poivrons, Champignons, Olives',\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Alpage',\r\n    content: 'Gruy√®re, Mozarella, Lardons, Tomates',\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Diable',\r\n    content: 'Tomates, Mozarella, Chorizo piquant, Jalapenos',\r\n  },\r\n];\r\n\r\n/* Read all the pizzas from the menu\r\n   GET /pizzas?order=title¬†:¬†ascending order¬†by¬†title\r\n¬†  GET /pizzas?order=-title¬†:¬†descending order¬†by¬†title\r\n*/\r\nrouter.get('/', (req, res, next) => {\r\n  const orderByTitle =\r\n    req?.query?.order?.includes('title') ? req.query.order : undefined;\r\n  let orderedMenu;\r\n  console.log(`order by ${orderByTitle ?? 'not requested'}`);\r\n\r\n  const pizzas = parse(jsonDbPath, MENU);\r\n  \r\n  if (orderByTitle) orderedMenu = [...pizzas].sort((a, b) => a.title.localeCompare(b.title));\r\n  if (orderByTitle === '-title') orderedMenu = orderedMenu.reverse();\r\n\r\n  console.log('GET /pizzas');\r\n  return res.json(orderedMenu ?? pizzas);\r\n});\r\n\r\n// Read the pizza identified by an id in the menu\r\nrouter.get('/:id', (req, res) => {\r\n  console.log(`GET /pizzas/${req.params.id}`);\r\n\r\n  const pizzas = parse(jsonDbPath, MENU);\r\n\r\n  const indexOfPizzaFound = pizzas.findIndex(pizza => pizza.id == req.params.id);\r\n\r\n  if (indexOfPizzaFound < 0) return res.sendStatus(404);\r\n\r\n  return res.json(pizzas[indexOfPizzaFound]);\r\n});\r\n\r\n// Create a pizza to be added to the menu.\r\nrouter.post('/', (req, res) => {\r\n  const title = req?.body?.title?.length !== 0 ? req.body.title : undefined;\r\n  const content = req?.body?.content?.length !== 0 ? req.body.content : undefined;\r\n\r\n  console.log('POST /pizzas');\r\n\r\n  if (!title || !content) return res.sendStatus(400); // error code '400 Bad request'\r\n\r\n  const pizzas = parse(jsonDbPath, MENU);\r\n  const lastItemIndex = pizzas?.length !== 0 ? pizzas.length - 1 : undefined;\r\n  const lastId = lastItemIndex !== undefined ? pizzas[lastItemIndex]?.id : 0;\r\n  const nextId = lastId + 1;\r\n\r\n  const newPizza = {\r\n    id: nextId,\r\n    title: title,\r\n    content: content,\r\n  };\r\n\r\n  pizzas.push(newPizza);\r\n\r\n  serialize(jsonDbPath, pizzas);\r\n\r\n  return res.json(newPizza);\r\n});\r\n\r\n// Delete a pizza from the menu based on its id\r\nrouter.delete('/:id', (req, res) => {\r\n  console.log(`DELETE /pizzas/${req.params.id}`);\r\n\r\n  const pizzas = parse(jsonDbPath, MENU);\r\n\r\n  const foundIndex = pizzas.findIndex(pizza => pizza.id == req.params.id);\r\n\r\n  if (foundIndex < 0) return res.sendStatus(404);\r\n\r\n  const itemsRemovedFromMenu = pizzas.splice(foundIndex, 1);\r\n  const itemRemoved = itemsRemovedFromMenu[0];\r\n\r\n  serialize(jsonDbPath, pizzas);\r\n\r\n  return res.json(itemRemoved);\r\n});\r\n\r\n// Update a pizza based on its id and new values for its parameters\r\nrouter.patch('/:id', (req, res) => {\r\n  console.log(`PATCH /pizzas/${req.params.id}`);\r\n\r\n  const title = req?.body?.title;\r\n  const content = req?.body?.content;\r\n\r\n  console.log('POST /pizzas');\r\n\r\n  if ((!title && !content) || title?.length === 0 || content?.length === 0) return res.sendStatus(400);\r\n\r\n  const pizzas = parse(jsonDbPath, MENU);\r\n\r\n  const foundIndex = pizzas.findIndex(pizza => pizza.id == req.params.id);\r\n\r\n  if (foundIndex < 0) return res.sendStatus(404);\r\n\r\n  const updatedPizza = {...pizzas[foundIndex], ...req.body};\r\n\r\n  pizzas[foundIndex] = updatedPizza;\r\n\r\n  serialize(jsonDbPath, pizzas);\r\n\r\n  return res.json(updatedPizza);\r\n});\r\n\r\nmodule.exports = router;\n")),"\n",a.createElement(n.p,null,"Veuillez mettre √† jour votre fichier ",a.createElement(n.strong,null,"/router/pizzas.js")," sur base du code donn√© et testez le bon fonctionnement de l'application. Faites quelques requ√™tes pour ajouter et modifier des donn√©es et v√©rifiez, une fois que vous red√©marrer votre application, que les donn√©es persistent."),"\n",a.createElement(n.h3,null,"Application c√¥t√© client"),"\n",a.createElement(n.p,null,"Au niveau d'une IHM, il doit aussi √™tre possible de sauvegarder des informations.",a.createElement(n.br),"\n","Or, pour des raisons de s√©curit√©, le browser ne peut pas cr√©er des fichiers JSON de mani√®re transparente √† l'utilisateur.",a.createElement(n.br),"\n",'Afin de sauvegarder des donn√©es, le browser met n√©anmoins √† disposition un web storage dans lequel on peut sauvegarder des donn√©es sous forme de paires "cl√© / valeur", au format texte.',a.createElement(n.br),"\n","Nous verrons cela plus tard en d√©tails."),"\n",a.createElement(n.p,null,"Voici d√©j√† malgr√© tout un exemple de code, une fonction, permettant de sauvegarder les donn√©es de session d'un utilisateur dans le web storage d'un browser :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"const setUserSessionData = (user) => {\r\n  const storageValue = JSON.stringify(user);\r\n  localStorage.setItem(STORE_NAME, storageValue);\r\n};\n")),"\n",a.createElement(n.h2,null,"Parsing de donn√©es JSON vers un objet JS"),"\n",a.createElement(n.h3,null,"Application c√¥t√© serveur"),"\n",a.createElement(n.p,null,"La fonction JS ",a.createElement(n.strong,null,a.createElement(n.code,null,"JSON.parse(objectSerialized) "))," permet de cr√©er un objet JS √† partir d'une ",a.createElement(n.strong,null,"string")," contenant des donn√©es au format JSON."),"\n",a.createElement(n.p,null,"C√¥t√© serveur, il est ensuite facile de sauvegarder les donn√©es JSON au sein d'un fichier."),"\n",a.createElement(n.p,null,"Voici un exemple de code, une fonction, permettant √† une application Express de cr√©er un objet JS sur base de donn√©es JSON se trouvant dans un fichier ",a.createElement(n.strong,null,".json")," dont le chemin et nom complet sont indiqu√©s dans le param√®tre ",a.createElement(n.strong,null,"filePath")," :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"/**\r\n * Parse items given in a .json file\r\n * @param {String} filePath - path to the .json file\r\n * If the file does not exist or it's content cannot be parsed as JSON data,\r\n * use the default data.\r\n * @param {Array} defaultArray - Content to be used when the .json file does not exists\r\n * @returns {Array} : the array that was parsed from the file (or defaultData)\r\n */\r\nfunction parse(filePath, defaultArray = []) {\r\n  if (!fs.existsSync(filePath)) return defaultArray;\r\n  const fileData = fs.readFileSync(filePath);\r\n  try {\r\n    // parse() Throws a SyntaxError exception if the string to parse is not valid JSON.\r\n    return JSON.parse(fileData);\r\n  } catch (err) {\r\n    return defaultArray;\r\n  }\r\n}\n")),"\n",a.createElement(n.p,null,"Imaginez que, au sein du router traitant des ressources de type \"pizzas\", que l'on r√©cup√®re le menu des pizzas √† l'aide du fichier JSON dont le chemin et nom complet est donn√© dans ",a.createElement(n.strong,null,"jsonDbPath"),". Voici ce que donnerait l'op√©ration de lecture de toutes les pizzas :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"// Read all the pizzas from the menu\r\nrouter.get('/', function (req, res) {\r\n  console.log('GET /pizzas');\r\n  const pizzas = parse(jsonDbPath, DEFAULT_MENU);\r\n  res.json(pizzas);\r\n});\n")),"\n",a.createElement(n.h3,null,"Application c√¥t√© client"),"\n",a.createElement(n.p,null,"Au niveau d'une IHM, il doit aussi √™tre possible de r√©cup√©rer des donn√©es JSON qui auraient √©t√© sauvegard√©es au sein du web browser."),"\n",a.createElement(n.p,null,"Nous verrons cela plus tard en d√©tails. Voici d√©j√† malgr√© tout un exemple de code, une fonction, permettant de parser les donn√©es de session d'un utilisateur se trouvant dans le web storage d'un browser :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"const getUserSessionData = () => {\r\n  const retrievedUser = localStorage.getItem(STORE_NAME);\r\n  if (!retrievedUser) return;\r\n  return JSON.parse(retrievedUser);\r\n};\n")))}var s=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?a.createElement(n,e,a.createElement(l,e)):l(e)};function o(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}var i=t(4854),u=t(1263),c=t(5679),d=t(307),p=t(7410),m=t(9523),E=t(8075),f=t(9063),g=t(1631),z=t(6896),h=t(2770),v=t(7008),b=t(9771),j=t(1218),S=(t(5258),t(9394)),y=t(4579),P=t(9653),N=t(9256),q=t(6488),O=t(5175),I=t(158),J=t(6044);const x={Link:i.Link,Image:c.Z,Section:d.Z,Content:p.Z,Background:m.Z,SectionHeader:E.Z,SectionFooter:f.Z,PageHeader:g.Z,CodeBlock:h.Z,LinkFile:v.Z,ScrollableImage:b.Z,PublicProjectsView:j.Z,AuthenticatedBlock:S.Z,UnAuthenticatedBlock:y.Z,NestedMdxBlock:P.Z,YoutubeImage:N.Z,InternalPageMenu:q.Z,InternalPageMenuItem:O.Z,InternalPageTitle:I.Z,PathViewer:J.k,PathViewerItem:J.F};function A(e){var n,t,l,s,o;let{data:{mdx:i,allImages:c},children:d}=e;return x.PageHeader=(0,z.u)(g.Z,null==i?void 0:i.frontmatter),a.createElement(u.Z,Object.assign({},null!=i&&i.frontmatter?{frontmatter:i.frontmatter}:{},null!=i&&null!==(n=i.frontmatter)&&void 0!==n&&n.navbarExtraStyles?{navbarExtraStyles:i.frontmatter.navbarExtraStyles}:{},null!=i&&null!==(t=i.frontmatter)&&void 0!==t&&t.headerImage?{headerImage:i.frontmatter.headerImage}:{},null!=i&&null!==(l=i.frontmatter)&&void 0!==l&&l.featuredImage?{featuredImage:i.frontmatter.featuredImage}:{},null!=i&&null!==(s=i.frontmatter)&&void 0!==s&&s.title?{pageTitle:i.frontmatter.title}:{},c&&c.length>0?{allImages:c}:{}),a.createElement(r.Zo,{components:x},a.createElement("div",{className:null!=i&&null!==(o=i.frontmatter)&&void 0!==o&&o.autoMargin?"page page--auto-margin":"page"},d)))}function w(e){return a.createElement(A,e,a.createElement(s,e))}}}]);
//# sourceMappingURL=component---src-templates-mdx-pages-js-content-file-path-src-mdx-pages-part-1-json-fr-mdx-242dfff5e267afc060c5.js.map