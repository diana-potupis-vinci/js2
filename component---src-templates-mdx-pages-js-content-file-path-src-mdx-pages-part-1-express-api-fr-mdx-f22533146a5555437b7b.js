"use strict";(self.webpackChunkmyjscourse=self.webpackChunkmyjscourse||[]).push([[8327],{3863:function(e,n,t){t.r(n),t.d(n,{default:function(){return A}});var r=t(3905),l=t(7294);function a(e){const n=Object.assign({h1:"h1",h2:"h2",p:"p",strong:"strong",br:"br",ul:"ul",li:"li",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",code:"code",a:"a",pre:"pre",h4:"h4"},(0,r.ah)(),e.components),{PathViewer:t,PathViewerItem:a,InternalPageMenu:s,InternalPageMenuItem:o,InternalPageTitle:i,ScrollableImage:c}=n;return s||u("InternalPageMenu",!0),o||u("InternalPageMenuItem",!0),i||u("InternalPageTitle",!0),t||u("PathViewer",!0),a||u("PathViewerItem",!0),c||u("ScrollableImage",!0),l.createElement(l.Fragment,null,l.createElement(t,null,l.createElement(a,{to:"/"}," web2course "),l.createElement(a,{to:"/part1"}," Partie 1 "),l.createElement(a,{selected:!0}," b) RESTful API ")),"\n",l.createElement(n.h1,null,"b) Introduction aux RESTful API en Node.js & Express"),"\n",l.createElement(s,null,l.createElement(o,null," Introduction aux RESTful API & conventions "),l.createElement(o,null," Configuration & d√©marrage d'une RESTful API en Express "),l.createElement(o,null," Les fonctions middleware en Express "),l.createElement(o,null," D√©finition d'une route en Express "),l.createElement(o,null," Op√©ration de lecture "),l.createElement(o,null," Chemin et param√®tres de route "),l.createElement(o,null," Chemin et param√®tres de requ√™te "),l.createElement(o,null," Op√©ration de cr√©ation & parsing du body "),l.createElement(o,null," Client REST "),l.createElement(o,null," R√©pondre avec un code de statut HTTP "),l.createElement(o,null," Op√©rations de suppression & de modification "),l.createElement(o,null," Exercice 1.1 : Cr√©ation d'une RESTfull API non prot√©g√©e pour myMovies "),l.createElement(o,null," üç¨ Exercice 1.2 : Gestion de la pagination, de l'ordre de pr√©sentation et du filtrage de films ")),"\n",l.createElement(n.h1,null,l.createElement(i,null," Introduction aux RESTful API & conventions ")),"\n",l.createElement(n.h2,null,"C'est quoi une application REST ?"),"\n",l.createElement(n.p,null,l.createElement(n.strong,null,"REST")," vient de ",l.createElement(n.strong,null,"RE"),"presentational ",l.createElement(n.strong,null,"S"),"tate ",l.createElement(n.strong,null,"T"),"ransfer : c'est un style architectural pour construire des applications web extensibles, o√π les client et serveurs sont s√©par√©s."),"\n",l.createElement(n.p,null,"Dans une application REST, une ",l.createElement(n.strong,null,"interface uniforme")," (ou API) est d√©finie afin de permettre √† des applications de coop√©rer."),"\n",l.createElement(n.p,null,"Toute application REST se doit d'√™tre ",l.createElement(n.strong,null,"stateless")," : il n'y a pas d'enregistrement du contexte d'une session sur le serveur pour comprendre une requ√™te d'un client.",l.createElement(n.br),"\n","Ainsi, les requ√™tes clientes ne d√©pendent pas d'un historique de requ√™tes, chaque requ√™te contient tout l'information n√©cessaire au serveur."),"\n",l.createElement(n.p,null,"Une RESTful API met √† disposition des ",l.createElement(n.strong,null,"op√©rations")," sur des ",l.createElement(n.strong,null,"ressources")," via :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"des ",l.createElement(n.strong,null,"URI")," ; il y a donc une adresse unique pur chaque ressource ;"),"\n",l.createElement(n.li,null,"des ",l.createElement(n.strong,null,"m√©thodes HTTP")," (GET, POST, DELETE, PATCH, PUT) repr√©sentant les op√©rations possibles ; on parle souvent d'op√©rations ",l.createElement(n.strong,null,"CRUD"),", des op√©rations de type ",l.createElement(n.strong,null,"C"),"reate, ",l.createElement(n.strong,null,"R"),"ead, ",l.createElement(n.strong,null,"U"),"pdate ou ",l.createElement(n.strong,null,"D"),"elete) ;"),"\n",l.createElement(n.li,null,"des ",l.createElement(n.strong,null,"repr√©sentations"),' des ressources compr√©hensibles tant par les clients que les serveurs ; les ressources sont repr√©sent√©es par leur "Media type" : ',l.createElement(n.strong,null,"JSON"),", ",l.createElement(n.strong,null,"XML"),", ",l.createElement(n.strong,null,"HTML"),", ",l.createElement(n.strong,null,"TXT"),", ",l.createElement(n.strong,null,"JPEG"),"... ; dans le cadre de ce cours, les ressources seront quasi toujours repr√©sent√©es via du ",l.createElement(n.strong,null,"JSON"),"."),"\n"),"\n",l.createElement(n.h2,null,"Conventions REST"),"\n",l.createElement(n.p,null,"Le type d'op√©ration CRUD sur une ressource est d√©fini via la ",l.createElement(n.strong,null,"m√©thode http")," de la requ√™te.",l.createElement(n.br),"\n","Les op√©rations possibles sont :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"GET = Read"),"\n",l.createElement(n.li,null,"POST = Create"),"\n",l.createElement(n.li,null,"DELETE = Delete üòâ"),"\n",l.createElement(n.li,null,"PATCH / PUT = Update","\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"PATCH = Update d'une ou plusieurs propri√©t√©(s) de la ressources"),"\n",l.createElement(n.li,null,"PUT = Update de toutes les propri√©t√©s de la ressources, ou cr√©ation si la ressource n'existe pas"),"\n"),"\n"),"\n"),"\n",l.createElement(n.p,null,"Voici un exemple d'application de ces conventions REST dans le cadre d'une RESTful API permettant de g√©rer des ",l.createElement(n.strong,null,"posts")," :"),"\n",l.createElement(n.table,null,l.createElement(n.thead,null,l.createElement(n.tr,null,l.createElement(n.th,null,"URI"),l.createElement(n.th,null,"M√©thode HTTP"),l.createElement(n.th,null,"Op√©ration"))),l.createElement(n.tbody,null,l.createElement(n.tr,null,l.createElement(n.td,null,l.createElement(n.strong,null,l.createElement(n.code,null,"posts"))),l.createElement(n.td,null,"GET"),l.createElement(n.td,null,"READ ALL : Lire toutes les ressources de la collection")),l.createElement(n.tr,null,l.createElement(n.td,null,l.createElement(n.strong,null,l.createElement(n.code,null,"posts?userId=value"))),l.createElement(n.td,null,"GET"),l.createElement(n.td,null,"READ ALL FILTERED : Lire toutes les ressources de la collection selon le filtre donn√©")),l.createElement(n.tr,null,l.createElement(n.td,null,l.createElement(n.strong,null,l.createElement(n.code,null,"posts/{id}"))),l.createElement(n.td,null,"GET"),l.createElement(n.td,null,"READ ONE : Lire la ressource identifi√©e")),l.createElement(n.tr,null,l.createElement(n.td,null,l.createElement(n.strong,null,l.createElement(n.code,null,"posts"))),l.createElement(n.td,null,"POST"),l.createElement(n.td,null,"CREATE ONE : Cr√©er une ressource bas√©e sur les donn√©es de la requ√™te")),l.createElement(n.tr,null,l.createElement(n.td,null,l.createElement(n.strong,null,l.createElement(n.code,null,"posts/{id}"))),l.createElement(n.td,null,"DELETE"),l.createElement(n.td,null,"DELETE ONE : Effacer la ressource identifi√©e")),l.createElement(n.tr,null,l.createElement(n.td,null,l.createElement(n.strong,null,l.createElement(n.code,null,"posts/{id}"))),l.createElement(n.td,null,"PUT"),l.createElement(n.td,null,"UPDATE ONE : Remplacer l'enti√®ret√© de la ressource par les donn√©es de la requ√™te")))),"\n",l.createElement("br"),"\n",l.createElement(n.p,null,"Si cette API est h√©berg√©e √† l'URL racine ",l.createElement(n.strong,null,l.createElement(n.a,{href:"https://jsonplaceholder.typicode.com/"},"https://jsonplaceholder.typicode.com/")),", alors nous pourrions identifier une ressource de type ",l.createElement(n.strong,null,"posts")," de cette fa√ßon : ",l.createElement(n.strong,null,l.createElement(n.a,{href:"https://jsonplaceholder.typicode.com/posts/10"},"https://jsonplaceholder.typicode.com/posts/10")),"."),"\n",l.createElement(n.p,null,"Pour lire cette ressource, il faudrait faire une requ√™te http de type ",l.createElement(n.strong,null,"GET")," sur cette ",l.createElement(n.strong,null,"URL")," : ",l.createElement(n.strong,null,l.createElement(n.a,{href:"https://jsonplaceholder.typicode.com/posts/10"},"https://jsonplaceholder.typicode.com/posts/10")),"."),"\n",l.createElement(n.h1,null,l.createElement(i,null," Configuration & d√©marrage d'une RESTful API en Express ")),"\n",l.createElement(n.h2,null,"Cr√©ation d'un projet"),"\n",l.createElement(n.p,null,'Nous allons maintenant cr√©er notre toute premi√®re RESTful API pour g√©rer les donn√©es associ√©es √† une pizzeria, afin de b√©n√©ficier d\'op√©rations sur des ressources de type "pizzas".'),"\n",l.createElement(n.p,null,"Dans votre repo ",l.createElement(n.strong,null,"web2"),", veuillez cr√©er le r√©pertoire ",l.createElement(n.strong,null,l.createElement(n.code,null,"/tutorials/pizzeria/api")),"."),"\n",l.createElement(n.p,null,"Veuillez ouvrir un terminal au niveau de ce r√©pertoire."),"\n",l.createElement(n.p,null,"Dans ce r√©pertoire, veuillez g√©n√©rer une application express nomm√©e ",l.createElement(n.strong,null,"basic"),".",l.createElement(n.br),"\n","Pour ce faire :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-bash"},"npx express-generator --no-view basic\n")),"\n",l.createElement(n.p,null,"Veuillez installer les d√©pendances :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-bash"},"cd basic\r\nnpm i\n")),"\n",l.createElement(n.p,null,"Pour la suite du tutoriel, nous consid√©rons que tous les chemins absolus d√©marrent du r√©pertoire ",l.createElement(n.strong,null,l.createElement(n.code,null,"/tutorials/pizzeria/api/basic"))," (ou ",l.createElement(n.strong,null,l.createElement(n.code,null,"/web2/tutorials/pizzeria/api/basic"))," si l'on consid√®re le nom du r√©pertoire du repo)."),"\n",l.createElement(n.p,null,"Nous allons d√©velopper des RESTful API qui ne poss√®dent pas de serveur de fichiers statiques.",l.createElement(n.br),"\n","On n'a donc pas besoin d'avoir un r√©pertoire ",l.createElement(n.strong,null,l.createElement(n.code,null,"/public"))," ni d'un serveur statique.",l.createElement(n.br),"\n","On peut donc effacer le r√©pertoire ",l.createElement(n.strong,null,l.createElement(n.code,null,"/public"))," et supprimer le middleware de serveur de fichiers statiques au sein de ",l.createElement(n.strong,null,l.createElement(n.code,null,"/app.js"))," (en supprimant cette ligne) :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"app.use(express.static(path.join(__dirname, 'public'))); \n")),"\n",l.createElement(n.h2,null,"Fonctionnement d'une application Express"),"\n",l.createElement(n.p,null,"Nous allons maintenant nous attarder √† comprendre les concepts associ√©s √† l'utilisation d'Express, mais en focalisant sur ceux utiles aux applications REST.",l.createElement(n.br),"\n","Voici comment une requ√™te faite √† une application Express est trait√©e :"),"\n",l.createElement(c,{name:"express-flow.png",minWidth:"800px",maxWidth:"800px"}),"\n",l.createElement("figcaption",null,"Flux d'une requ√™te vers une application Express [R.51]"),"\n",l.createElement(n.p,null,"Dans ce flux de traitement d'une requ√™te, la responsabilit√© des d√©veloppeurs est de s'occuper de la partie \"Middleware\"."),"\n",l.createElement(n.p,null,'La grande majorit√© du code √©crit sera du "routing middleware" : notre code s\'occupera de r√©pondre √† des requ√™tes clientes pour diff√©rentes URLs et m√©thodes HTTP (GET, POST...).'),"\n",l.createElement(n.p,null,"On l'a d√©j√† vu, la configuration d'une application Express, comme toutes applications Node.js, est faite au sein de ",l.createElement(n.strong,null,l.createElement(n.code,null,"package.json")),"."),"\n",l.createElement(n.p,null,"En fonction de comment est configur√© l'application, on la d√©marrera via ",l.createElement(n.strong,null,l.createElement(n.code,null,"npm start")),", ",l.createElement(n.strong,null,l.createElement(n.code,null,"npm run dev")),", ",l.createElement(n.strong,null,l.createElement(n.code,null,"npm run build")),"..."),"\n",l.createElement(n.p,null,"Un ",l.createElement(n.strong,null,"serveur web int√©gr√©")," √† nos applications Express est d√©marr√© au sein du fichier ",l.createElement(n.strong,null,l.createElement(n.code,null,"bin/www")),"."),"\n",l.createElement(n.p,null,"C'est ce fichier que vous devez mettre √† jour si par exemple vous souhaitez que votre application fonctionne sur un port diff√©rent que le port par d√©faut ",l.createElement(n.strong,null,"3000"),"."),"\n",l.createElement(n.p,null,"Un serveur int√©gr√© est diff√©rent d'une application web offerte par un serveur standalone comme Apache, Tomcat... C'est un serveur tr√®s l√©ger d√©di√© √† votre application."),"\n",l.createElement(n.h1,null,l.createElement(i,null," Les fonctions middleware en Express ")),"\n",l.createElement(n.h2,null,"C'est quoi une fonction middleware ?"),"\n",l.createElement(n.p,null,"Les fonctions middleware s'occupent du traitement des requ√™tes des clients et de la pr√©paration des r√©ponses :"),"\n",l.createElement(c,{name:"middlewares.jpg",minWidth:"638px",maxWidth:"638px"}),"\n",l.createElement("figcaption",null,"Les fonctions Middleware et Express [R.52]"),"\n",l.createElement(n.p,null,"Une fonction middleware a acc√®s aux objets de la requ√™te et de la r√©ponse et peut utiliser la requ√™te et la r√©ponse pour ajouter, par exemple, un log, pour autoriser un utilisateur, pour parser des donn√©es Json vers des objets JS, pour servir des fichiers statiques, pour faire un traitement pour une route bien sp√©cifique..."),"\n",l.createElement(n.p,null,"Si une fonction middleware ne termine pas le cycle de requ√™te-r√©ponse, elle doit appeler ",l.createElement(n.strong,null,l.createElement(n.code,null,"next()"))," pour permettre √† d'autres fonctions qui sont dans la queue de pouvoir √™tre ex√©cut√©es."),"\n",l.createElement(n.p,null,"Voici les √©l√©ments associ√©s √† l'appel d'une fonction middleware :"),"\n",l.createElement(c,{name:"middleware-function.png",minWidth:"944px",maxWidth:"944px"}),"\n",l.createElement("figcaption",null,"Une fonction middleware [R.53]"),"\n",l.createElement(n.p,null,"Il existe diff√©rents types de fonctions middleware ayant diff√©rents cas d'utilisation :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"Application-level middleware")," : la fonction middleware est li√©e √† l'objet ",l.createElement(n.strong,null,"app")," et peut s'appliquer √† toutes les requ√™tes."),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"Router-level middleware")," : la fonction middleware est li√©e √† un objet de type ",l.createElement(n.strong,null,l.createElement(n.code,null,"express.router()"))," et est tr√®s similaire au \"application-level middleware\", mais ne s'applique qu'√† un groupe de requ√™tes."),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"Error-handling middleware")," : fonction de gestion des erreurs qui se d√©finit comme les fonctions ci-dessus (au niveau ",l.createElement(n.strong,null,"app")," ou ",l.createElement(n.strong,null,"router"),"), mais qui contient un quatri√®me param√®tre nomm√© ",l.createElement(n.strong,null,"error"),"."),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"Built-in middleware")," : fonctions middleware mises √† disposition par Express directement. En voici quelques exemples :","\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"express.static")," : pour servir des assets statiques ;"),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"express.json")," : pour parser le body de requ√™tes en JSON vers des objets JS ;"),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"express.urlencoded"),' : pour parser des requ√™tes dont le body est de type "urlencoded" (type par d√©faut des formulaires) vers des objets JS.'),"\n"),"\n"),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"Third-party middleware")," : fonctions mises √† disposition par la communaut√© et installables via npm, comme par exemple la fonction middleware ",l.createElement(n.strong,null,"cookieParser"),"."),"\n"),"\n",l.createElement(n.p,null,"La suite fournit quelques exemples de fonctions middleware qui seront soit plus tard rencontr√©es dans notre code, soit sont extraites de la documentation d'Express : ",l.createElement(n.a,{href:"https://expressjs.com/en/guide/using-middleware.html"},"Using middleware")," ",l.createElement(n.a,{href:"/js2/references/#r54"},"[R.54]"),"."),"\n",l.createElement(n.h2,null,"Application-level middleware : exemple"),"\n",l.createElement(n.p,null,"Voici une fonction middleware qui sera ex√©cut√©e √† chaque fois qu'il y a une requ√™te, quelque soit le chemin (ou path) associ√© √† la requ√™te :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"var¬†express¬†=¬†require('express');\r\nvar¬†app¬†=¬†express();\r\napp.use((req,¬†res,¬†next) =>¬†{\r\n¬†¬†console.log('Time:',¬†Date.now());\r\n¬†¬†next();\r\n});\n")),"\n",l.createElement(n.h2,null,"Router-level middleware : exemple"),"\n",l.createElement(n.p,null,"Voici une partie du code qui se trouverait au sein d'un router de pizzas, dans le fichier ",l.createElement(n.strong,null,"/routes/pizzas.js")," :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"var¬†router¬†=¬†express.Router();\r\n\r\nrouter.use((req,¬†res,¬†next)¬†=> {\r\n¬†¬†console.log('Time:',¬†Date.now());\r\n¬†¬†next();\r\n});\r\n\r\nrouter.get('/',(req,¬†res,¬†next)¬†=> {\r\n¬†¬†return¬†res.json(menu);\r\n});\n")),"\n",l.createElement(n.p,null,"La premi√®re fonction middleware ne contient pas de m√©thode HTTP, ni de chemin, elle s'applique donc √† toutes les routes associ√©es au router de pizzas.",l.createElement(n.br),"\n","Voici le code qui permettrait, dans ",l.createElement(n.strong,null,"/app.js"),", d'appeler le router de pizzas :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"var pizzaRouter = require('./routes/pizzas');\r\napp.use('/pizzas', pizzaRouter);\n")),"\n",l.createElement(n.p,null,"Si le router est utilis√© de cette fa√ßon, en relisant l'avant-dernier snippet, on voit que :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"la premi√®re fonction (o√π il y a un ",l.createElement(n.code,null,"console.log"),") s'applique donc √† toutes les routes qui commencent par ",l.createElement(n.strong,null,"/pizzas")," ;"),"\n",l.createElement(n.li,null,"la deuxi√®me fonction middleware s'appliquent seulement aux requ√™tes de type ",l.createElement(n.strong,null,"GET")," sur la route (ou le chemin) ",l.createElement(n.strong,null,"/pizzas")," (√©quivalent de la route ",l.createElement(n.strong,null,"/pizzas/"),")."),"\n"),"\n",l.createElement(n.h2,null,"Error-handling middleware : exemple"),"\n",l.createElement(n.p,null,"Ce type de middleware est √† d√©finir apr√®s tous les middlewares pouvant g√©n√©rer une erreur et est appel√© via ",l.createElement(n.strong,null,l.createElement(n.code,null,"next(err)"))," dans une fonction middleware o√π un souci est d√©tect√©."),"\n",l.createElement(n.p,null,"Voici la d√©finition d'un gestionnaire d'erreurs :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"app.use((err, req, res, next) => {\r\n  console.error(err.stack)\r\n  res.status(500).send('Something broke!')\r\n});\n")),"\n",l.createElement(n.p,null,"Attention, il y a bien 4 param√®tres au lieu des 3 habituels pour les autres types de fonctions middleware."),"\n",l.createElement(n.h2,null,"Built-in middleware & third-party middleware : exemple"),"\n",l.createElement(n.p,null,"Dans ",l.createElement(n.strong,null,"app.js"),", on trouve pas mal d'exemples de ces types de middleware. Ils sont comment√©s ci-dessous dans le code :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"var express = require('express');\r\nvar path = require('path');\r\nvar cookieParser = require('cookie-parser');\r\nvar logger = require('morgan');\r\n\r\nvar app = express();\r\n\r\napp.use(logger('dev')); //¬†HTTP request logger\r\napp.use(express.json()); //¬†Parse requests with JSON payloads\r\napp.use(express.urlencoded({ extended: false })); //¬†Parse requests with URL-\r\n                                                  // encoded payload \r\napp.use(cookieParser()); //¬†Parse cookie header (req.cookies)\r\napp.use(express.static(path.join(__dirname, 'public'))); //¬†Serve static assets\n")),"\n",l.createElement(n.h1,null,l.createElement(i,null," D√©finition d'une route en Express ")),"\n",l.createElement(n.h2,null,"D√©finition d'une route"),"\n",l.createElement(n.p,null,"Le routing, ou routage, contr√¥le la r√©ponse √† une requ√™te client pour un chemin et une m√©thode HTTP. Le chemin est aussi appel√© ",l.createElement(n.strong,null,"endpoint")," ou ",l.createElement(n.strong,null,"URI")," ou ",l.createElement(n.strong,null,"PATH"),"."),"\n",l.createElement(n.p,null,"On va d√©finir une route soit sur l'objet ",l.createElement(n.strong,null,"app"),", soit sur un ",l.createElement(n.strong,null,"router"),".",l.createElement(n.br),"\n","Un objet de type ",l.createElement(n.strong,null,"router")," permet de regrouper toutes les routes associ√©es √† un type de ressources."),"\n",l.createElement(n.p,null,"On d√©finit une route de cette fa√ßon : ",l.createElement(n.strong,null,l.createElement(n.code,null,"app."))," ou ",l.createElement(n.strong,null,l.createElement(n.code,null,"router.")),"  ",l.createElement(n.strong,null,l.createElement(n.code,null,"METHOD(PATH, MIDDLEWARE_FUNCTION)")),"."),"\n",l.createElement(n.p,null,"üëç Dans notre cours, nous vous recommandons d'organiser vos routes par type de ressources et donc de mettre en place des routers."),"\n",l.createElement(n.h1,null,l.createElement(i,null," Op√©ration de lecture ")),"\n",l.createElement(n.p,null,'Nous souhaitons par commencer √† d√©velopper une op√©ration permettant de lire toutes les ressources de type "pizzas".',l.createElement(n.br),"\n","Veuillez cr√©er un router pour traiter des ressources ",l.createElement(n.strong,null,"/pizzas")," au sein de ",l.createElement(n.strong,null,l.createElement(n.code,null,"/routes/pizzas.js")),".",l.createElement(n.br),"\n","Le plus simple est d'adapter ",l.createElement(n.strong,null,l.createElement(n.code,null,"indexRouter"))," dans ",l.createElement(n.strong,null,l.createElement(n.code,null,"app.js"))," en ",l.createElement(n.strong,null,l.createElement(n.code,null,"pizzaRouter"))," et ",l.createElement(n.strong,null,l.createElement(n.code,null,"/routers/index.js"))," en ",l.createElement(n.strong,null,l.createElement(n.code,null,"/routes/pizzas.js")),".",l.createElement(n.br),"\n","NB : Il est aussi possible de partir de rien et de cr√©er ",l.createElement(n.strong,null,l.createElement(n.code,null,"pizzaRouter"))," dans ",l.createElement(n.strong,null,l.createElement(n.code,null,"app.js"))," et ",l.createElement(n.strong,null,l.createElement(n.code,null,"/routes/pizzas.js")),"."),"\n",l.createElement(n.p,null,"Pour l'op√©ration de lecture de toutes les pizzas, selon les conventions REST, il faut faire une requ√™te de type ",l.createElement(n.strong,null,l.createElement(n.code,null,"GET /pizzas")),". Le router de ",l.createElement(n.strong,null,l.createElement(n.code,null,"/routes/pizzas.js"))," doit donc offrir une route renvoyant toutes les pizzas qui existent dans le menu."),"\n",l.createElement(n.p,null,"Pour d√©marrer, nous souhaitons une application basique qui ne g√®re pas la persistance des donn√©es. Le menu sera donc un array d'objets, chaque objet repr√©sentant une pizza."),"\n",l.createElement(n.p,null,"Notre op√©ration de lecture de pizza va renvoyer du JSON au client, c'est √† dire une repr√©sentation textuelle d'un array d'objets. Nous verrons plus tard ce qu'est r√©ellement le JSON. A ce stade-ci, il est suffisant de conna√Ætre la fonction d'Express qui permet √† un objet JS de circuler sur le r√©seau : ",l.createElement(n.strong,null,l.createElement(n.code,null,"res.json()")),"."),"\n",l.createElement(n.p,null,"Voici le code du router ",l.createElement(n.strong,null,l.createElement(n.code,null,"/routes/pizzas.js"))," :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"var express = require('express');\r\nvar router = express.Router();\r\n\r\nconst MENU = [\r\n  {\r\n    id: 1,\r\n    title: '4 fromages',\r\n    content: 'Gruy√®re, S√©rac, Appenzel, Gorgonzola, Tomates',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Vegan',\r\n    content: 'Tomates, Courgettes, Oignons, Aubergines, Poivrons',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Vegetarian',\r\n    content: 'Mozarella, Tomates, Oignons, Poivrons, Champignons, Olives',\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Alpage',\r\n    content: 'Gruy√®re, Mozarella, Lardons, Tomates',\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Diable',\r\n    content: 'Tomates, Mozarella, Chorizo piquant, Jalapenos',\r\n  },\r\n];\r\n\r\n// Read all the pizzas from the menu\r\nrouter.get('/', (req, res, next) => {\r\n  console.log('GET /pizzas');\r\n  res.json(MENU);\r\n});\r\n\r\nmodule.exports = router;\n")),"\n",l.createElement(n.p,null,"Et voici le code de ",l.createElement(n.strong,null,"app.js")," (les parties modifi√©es sont surlign√©es) :"),"\n",l.createElement(n.pre,{numbered:!0,highlighting:"6,16"},l.createElement(n.code,{className:"language-js"},"var express = require('express');\r\nvar path = require('path');\r\nvar cookieParser = require('cookie-parser');\r\nvar logger = require('morgan');\r\n\r\nvar pizzaRouter = require('./routes/pizzas');\r\nvar usersRouter = require('./routes/users');\r\n\r\nvar app = express();\r\n\r\napp.use(logger('dev'));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\n\r\napp.use('/pizzas', pizzaRouter);\r\napp.use('/users', usersRouter);\r\n\r\nmodule.exports = app;\n")),"\n",l.createElement(n.p,null,"Veuillez d√©marrer l'API (par d√©faut elle est configur√©e sur le port 3000 au sein de ",l.createElement(n.strong,null,l.createElement(n.code,null,"bin/www")),") :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-bash"},"npm start\n")),"\n",l.createElement(n.p,null,'Pour consommer l\'op√©ration de lecture via un browser, nous pouvons lire toutes les ressources de type "pizzas" ici :\r\n',l.createElement(n.a,{href:"http://localhost:3000/pizzas"},"http://localhost:3000/pizzas")),"\n",l.createElement(n.h1,null,l.createElement(i,null," Chemin et param√®tres de route ")),"\n",l.createElement(n.p,null,"Les ",l.createElement(n.strong,null,"route parameters")," sont des segments d'une URL qui sont utilis√©s pour capturer une valeur sp√©cifi√©e √† leur position dans l'URL. On r√©cup√®re ces param√®tres via l'objet ",l.createElement(n.strong,null,l.createElement(n.code,null,"req.params")),"."),"\n",l.createElement(n.p,null,"Pour notre pizzeria, nous souhaitons pouvoir lire une pizza identifi√©e par son ",l.createElement(n.strong,null,"id"),"."),"\n",l.createElement(n.p,null,"Nous allons donc ajouter le param√®tre de route ",l.createElement(n.strong,null,"id"),".",l.createElement(n.br),"\n","En respect des conventions REST, un client, pour faire appel √† cette op√©ration, devra faire une requ√™te du genre : ",l.createElement(n.strong,null,l.createElement(n.code,null,"GET /pizzas/2")),"."),"\n",l.createElement(n.p,null,"Voici la nouvelle route permettant de traiter de cette op√©ration, √† ajouter dans le router ",l.createElement(n.strong,null,l.createElement(n.code,null,"/routes/pizza.js"))," :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"// Read the pizza identified by an id in the menu\r\nrouter.get('/:id', (req, res) => {\r\n  console.log(`GET /pizzas/${req.params.id}`);\r\n\r\n  const indexOfPizzaFound = MENU.findIndex((pizza) => pizza.id == req.params.id);\r\n\r\n  if (indexOfPizzaFound < 0) return res.sendStatus(404);\r\n\r\n  res.json(MENU[indexOfPizzaFound]);\r\n});\n")),"\n",l.createElement(n.p,null,"Veuillez red√©marrer l'API (",l.createElement(n.strong,null,l.createElement(n.code,null,"CTRL c"))," puis ",l.createElement(n.strong,null,l.createElement(n.code,null,"npm start")),")."),"\n",l.createElement(n.p,null,'Pour consommer cette nouvelle op√©ration via un browser, nous pouvons lire la ressource de type "pizzas" identifi√©e par ',l.createElement(n.strong,null,"2")," dans le menu ainsi :\r\n",l.createElement(n.a,{href:"http://localhost:3000/pizzas/2"},"http://localhost:3000/pizzas/2")),"\n",l.createElement(n.p,null,"Le browser fait bien une requ√™te du genre : ",l.createElement(n.strong,null,l.createElement(n.code,null,"GET /pizzas/2")),".",l.createElement(n.br),"\n",'Le param√®tre de la route "2" est r√©cup√©r√© dans l\'URL de la route par Express et est offert via ',l.createElement(n.strong,null,l.createElement(n.code,null,"req.params.id")),"."),"\n",l.createElement(n.p,null,"N'h√©sitez pas √† faire une requ√™te pour un identifiant n'existant pas de le menu pour voir ce qui se passe : ",l.createElement(n.a,{href:"http://localhost:3000/pizzas/666"},"http://localhost:3000/pizzas/666"),"."),"\n",l.createElement(n.h1,null,l.createElement(i,null," Chemin et param√®tres de requ√™te ")),"\n",l.createElement(n.p,null,"Les ",l.createElement(n.strong,null,"query parameters")," sont des param√®tres qui peuvent √™tre ajout√©s √† une URL.",l.createElement(n.br),"\n","On r√©cup√®re ces param√®tres via l'objet ",l.createElement(n.strong,null,l.createElement(n.code,null,"req.query")),"."),"\n",l.createElement(n.p,null,'Pour notre pizzeria, nous souhaitons pouvoir lire toutes les ressources de type "pizzas" tri√©es par ordre ascendant ou descendant du titre.'),"\n",l.createElement(n.p,null,"En respect des conventions REST, un client, pour faire appel √† cette op√©ration, devra faire une requ√™te du genre :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"pour le tri ascendant : ",l.createElement(n.strong,null,l.createElement(n.code,null,"GET /pizzas?order=title"))," ;"),"\n",l.createElement(n.li,null,"pour le tri descendant : ",l.createElement(n.strong,null,l.createElement(n.code,null,"GET /pizzas?order=-title")),"."),"\n"),"\n",l.createElement(n.p,null,"Il n'y a donc pas de nouvelle route √† ajouter ici. En effet, √ßa reste une requ√™te de type GET sur la route ",l.createElement(n.strong,null,l.createElement(n.code,null,"/pizzas")),"."),"\n",l.createElement(n.p,null,"Veuillez donc mettre √† jour ",l.createElement(n.strong,null,"/routes/pizza.js")," pour la lecture de toutes les pizzas :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"/* Read all the pizzas from the menu\r\n   GET /pizzas?order=title¬†:¬†ascending order¬†by¬†title\r\n¬†  GET /pizzas?order=-title¬†:¬†descending order¬†by¬†title\r\n*/\r\nrouter.get('/', (req, res, next) => {\r\n  const orderByTitle =\r\n    req?.query?.order?.includes('title')\r\n      ? req.query.order\r\n      : undefined;\r\n  let orderedMenu;\r\n  console.log(`order by ${orderByTitle ?? 'not requested'}`);\r\n  if (orderByTitle)\r\n    orderedMenu = [...MENU].sort((a, b) => a.title.localeCompare(b.title));\r\n  if (orderByTitle === '-title') orderedMenu = orderedMenu.reverse();\r\n\r\n  console.log('GET /pizzas');\r\n  res.json(orderedMenu ?? MENU);\r\n});\n")),"\n",l.createElement(n.p,null,"Veuillez red√©marrer l'API (",l.createElement(n.strong,null,l.createElement(n.code,null,"CTRL c"))," puis ",l.createElement(n.strong,null,l.createElement(n.code,null,"npm start")),")."),"\n",l.createElement(n.p,null,'Pour consommer cette nouvelle op√©ration via un browser, nous pouvons lire toutes les ressources de type "pizzas" tri√©es par leur titre de mani√®re descendante :\r\n',l.createElement(n.a,{href:"http://localhost:3000/pizzas?order=-title"},"http://localhost:3000/pizzas?order=-title"),"."),"\n",l.createElement(n.p,null,"N'h√©sitez pas √† tester d'autres tris."),"\n",l.createElement(n.h1,null,l.createElement(i,null," Op√©ration de cr√©ation & parsing du body ")),"\n",l.createElement(n.p,null,'Nous souhaitons d√©velopper une op√©ration permettant de cr√©er une ressource de type "pizzas".',l.createElement(n.br),"\n","Selon les conventions REST, il faut faire une requ√™te de type ",l.createElement(n.strong,null,l.createElement(n.code,null,"POST /pizzas"))," qui offre une repr√©sentation de la ressource √† cr√©er. La repr√©sentation utilis√©e est le JSON que nous verrons plus en d√©tails plus tard.",l.createElement(n.br),"\n",'Si nous souhaitons cr√©er une ressource dont le titre est "Magic Green" et le contenu est "Epinards, Brocolis, Olives vertes, Basilic", la repr√©sentation de la ressource √† cr√©er sera la suivante :'),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-json"},'{\r\n    "title":"Magic Green",\r\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\r\n}\n')),"\n",l.createElement(n.p,null,"Selon les conventions REST, une requ√™te de cr√©ation est de type ",l.createElement(n.strong,null,"POST")," et contient ses ",l.createElement(n.strong,null,"param√®tres\r\nau sein du body")," de la requ√™te."),"\n",l.createElement(n.p,null,l.createElement(n.strong,null,l.createElement(n.code,null,"/routes/pizzas.js"))," doit offrir une nouvelle route permettant d'ajouter une nouvelle pizza au menu, qui est un array d'objets. Une nouvelle pizza doit donc √™tre ajout√©e √† une variable, un array, qui est contenu dans la m√©moire vive de votre machine.",l.createElement(n.br),"\n","Lorsque l'ajout d'une pizza au menu a r√©ussi, nous souhaitons renvoyer la repr√©sentation de la nouvelle ressource au client. Ainsi, le client aura notamment acc√®s √† l'",l.createElement(n.strong,null,"id")," de la pizza cr√©√© par l'API."),"\n",l.createElement(n.p,null,"Voici le code du router ",l.createElement(n.strong,null,l.createElement(n.code,null,"/routes/pizzas.js"))," pour la nouvelle op√©ration, veuillez le rajouter dans votre application :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"// Create a pizza to be added to the menu.\r\nrouter.post('/', (req, res) => {\r\n  const title = req?.body?.title?.length !== 0 ? req.body.title : undefined;\r\n  const content = req?.body?.content?.length !== 0 ? req.body.content : undefined;\r\n\r\n  console.log('POST /pizzas');\r\n\r\n  if (!title || !content) return res.sendStatus(400); // error code '400 Bad request'\r\n\r\n  const lastItemIndex = MENU?.length !== 0 ? MENU.length - 1 : undefined;\r\n  const lastId = lastItemIndex !== undefined ? MENU[lastItemIndex]?.id : 0;\r\n  const nextId = lastId + 1;\r\n\r\n  const newPizza = {\r\n    id: nextId,\r\n    title: title,\r\n    content: content,\r\n  };\r\n\r\n  MENU.push(newPizza);\r\n\r\n  res.json(newPizza);\r\n});\n")),"\n",l.createElement(n.p,null,"La repr√©sentation de la ressource √† cr√©er est pars√©e dans l'objet ",l.createElement(n.strong,null,l.createElement(n.code,null,"req.body"))," gr√¢ce √† la fonction middleware ",l.createElement(n.strong,null,l.createElement(n.code,null,"express.json()"))," appel√©e dans ",l.createElement(n.strong,null,l.createElement(n.code,null,"/app.js"))," :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"app.use(express.json());\n")),"\n",l.createElement(n.p,null,"Il est donc important de ne pas retirer cette ligne lorsque l'on cr√©e une RESTful API."),"\n",l.createElement(n.p,null,"OK, c'est bien, mais comment tester ce nouveau code ?"),"\n",l.createElement(n.p,null,"Le browser permet de facilement cr√©er des requ√™tes de type ",l.createElement(n.strong,null,"GET"),", mais pas des requ√™tes de type ",l.createElement(n.strong,null,"POST"),"...",l.createElement(n.br),"\n","Nous avons donc besoin d'un client l√©ger permettant de faire des requ√™tes HTTP."),"\n",l.createElement(n.h1,null,l.createElement(i,null," Client REST ")),"\n",l.createElement(n.h2,null,"Introduction"),"\n",l.createElement(n.p,null,"Dans le cadre de ce cours, tout comme g√©n√©ralement dans un environnement professionnel, nous souhaitons pouvoir d√©velopper une API ind√©pendamment du d√©veloppement d'une IHM."),"\n",l.createElement(n.p,null,"En effet, cela prendrait trop de temps de devoir d√©velopper un frontend (HTML / JavaScript / CSS) pour tester nos API."),"\n",l.createElement(n.p,null,"Nous allons donc utiliser un client l√©ger permettant de faire des requ√™tes √† nos API.",l.createElement(n.br),"\n","Il en existe de nombreux, comme REST Client ",l.createElement(n.a,{href:"/js2/references/#r55"},"[R.55]")," ou Postman ",l.createElement(n.a,{href:"/js2/references/#r56"},"[R.56]"),"."),"\n",l.createElement(n.p,null,"Pour ce cours, nous vous pr√©sentons et recommandons d'utiliser REST Client pour √©crire et ex√©cuter vos requ√™tes HTTP."),"\n",l.createElement(n.h2,null,"REST Client"),"\n",l.createElement(n.p,null,"Dans le cadre de ce cours, nous utilisons REST Client ",l.createElement(n.a,{href:"/js2/references/#r55"},"[R.55]")," de Visual Studio Code pour tester nos API."),"\n",l.createElement(n.p,null,"Pour installer REST Client au sein de VS Code, veuillez cliquer sur l'onglet ",l.createElement(n.strong,null,"Extensions"),"."),"\n",l.createElement(n.p,null,"Recherchez l'extension ",l.createElement(n.strong,null,"REST Client")," et cliquez sur ",l.createElement(n.strong,null,"Install"),"."),"\n",l.createElement(n.p,null,"Quelques notions pour utiliser REST Client :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"Il faut cr√©er un fichier ",l.createElement(n.strong,null,".http")," (ou ",l.createElement(n.strong,null,".rest"),") contenant les requ√™tes vers vos RESTful APIs.",l.createElement(n.br),"\n","NB : Il est appropri√© de cr√©er un fichier par par type de ressources."),"\n",l.createElement(n.li,null,"Chaque requ√™te est introduite par ",l.createElement(n.strong,null,"###"),' (3 "',l.createElement(n.strong,null,"#"),'"" ou plus) ; voici la requ√™te permettant de lire toutes les pizzas :'),"\n"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-http"},"### Read all pizzas\r\nGET http://localhost:3000/pizzas\n")),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"Pour ex√©cuter une requ√™te, il suffit de cliquer sur ",l.createElement(n.strong,null,"Send Request"),"."),"\n",l.createElement(n.li,null,"Lorsqu'on envoie des donn√©es au format JSON, il est important d'avoir un espace avant les accolades (avant le \"",l.createElement(n.strong,null,"{"),'" ).'),"\n",l.createElement(n.li,null,'On peut d√©finir des "',l.createElement(n.strong,null,"File variables"),'" via ce genre de syntaxe : ',l.createElement(n.strong,null,"@baseUrl = ",l.createElement(n.a,{href:"http://localhost:3000"},"http://localhost:3000")),"."),"\n",l.createElement(n.li,null,"Pour utiliser la variable ",l.createElement(n.strong,null,"baseUrl"),", il suffit de la mettre entre double accolades. Par exemple, voici la requ√™te permettant de lire toutes les pizzas :"),"\n"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-http"},"### Read all pizzas with File variable\r\n@baseUrl = http://localhost:3000\r\nGET {{baseUrl}}/pizzas\n")),"\n",l.createElement(n.p,null,"Nous allons maintenant tester l'API de la pizzeria que nous avons cr√©√©e pour toutes ses op√©rations."),"\n",l.createElement(n.p,null,"Au sein de VS Code, dans votre projet ",l.createElement(n.strong,null,"/tutorials/pizzeria/api/basic"),", veuillez cr√©er un r√©pertoire nomm√© ",l.createElement(n.strong,null,"REST Client"),". Dans ce r√©pertoire, veuillez cr√©er un fichier nomm√© ",l.createElement(n.strong,null,"pizzas.http"),"."),"\n",l.createElement(n.p,null,"Dans ",l.createElement(n.strong,null,"pizzas.http"),", veuillez ajouter cette requ√™te pour la lecture de toutes les pizzas et ex√©cutez la :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-http"},"### Read all pizzas with File variable\r\n@baseUrl = http://localhost:3000\r\nGET {{baseUrl}}/pizzas\n")),"\n",l.createElement(n.p,null,"Est-ce que cela fonctionne bien ?  Avez vous bien d√©marr√© votre API ?",l.createElement(n.br),"\n","Vous devriez obtenir le m√™me r√©sultat que si vous acc√©diez √† votre API √† l'aide du browser."),"\n",l.createElement(n.p,null,"Au sein de ",l.createElement(n.strong,null,"pizzas.http"),", veuillez ajouter ces deux requ√™tes pour la lecture de toutes les pizzas en les triant selon leur titre :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-http"},"### Read all pizzas sorted by title (ascending)\r\nGET {{baseUrl}}/pizzas/?order=+title\r\n\r\n### Read all pizzas sorted by title (descending)\r\nGET {{baseUrl}}/pizzas/?order=-title\n")),"\n",l.createElement(n.p,null,"Veuillez ex√©cuter ces deux requ√™tes."),"\n",l.createElement(n.p,null,"Il semble que nous sommes pr√™ts pour cr√©er une requ√™te appelant l'op√©ration de cr√©ation d'une pizza."),"\n",l.createElement(n.p,null,"Au sein de ",l.createElement(n.strong,null,"pizzas.http"),", veuillez ajouter cette requ√™te pour la cr√©ation d'une pizza :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-http"},'### Create a pizza\r\nPOST {{baseUrl}}/pizzas\r\nContent-Type: application/json\r\n\r\n{\r\n    "title":"Magic Green",\r\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\r\n}\n')),"\n",l.createElement(n.p,null,"On remarque qu'il est important de mettre une ligne vide avant les accolades repr√©sentant le body de la requ√™te.  N'h√©sitez pas √† tester cette requ√™te avec ou sans la ligne vide pour y croire."),"\n",l.createElement(n.p,null,"üí≠ Comment tester que le bon fonctionnement de l'op√©ration de cr√©ation ?"),"\n",l.createElement(n.p,null,"Et bien il suffit d'ex√©cuter l'op√©ration de lecture de toutes les pizzas üòé !\r\nSi la nouvelle ressource appara√Æt, c'est qu'elle a bien √©t√© cr√©√©e !\r\nFaites le test."),"\n",l.createElement(n.h1,null,l.createElement(i,null," R√©pondre avec un code de statut HTTP ")),"\n",l.createElement(n.p,null,'On ne peut pas toujours renvoyer du JSON suite √† une requ√™te client ainsi qu\'un code HTTP correspondant au fait que tout est OK ("200 OK").'),"\n",l.createElement(n.p,null,"Quand vous ex√©cutez cette requ√™te :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-http"},"### Read all pizzas with File variable\r\nGET {{baseUrl}}/pizzas\n")),"\n",l.createElement(n.p,null,"Vous faites appel √† l'op√©ration de lecture de toutes les pizzas. La derni√®re ligne de cette op√©ration est la suivante :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"res.json(orderedMenu ?? MENU);\n")),"\n",l.createElement(n.p,null,"En fait, la fonction ",l.createElement(n.strong,null,"json"),' renvoie une r√©ponse au format JSON, mais de plus, elle renvoie un "status code" ',l.createElement(n.strong,null,"200")," indiquant au client que tout s'est bien pass√©."),"\n",l.createElement(n.p,null,"Au sein de ",l.createElement(n.strong,null,"pizzas.http"),", veuillez ajouter cette requ√™te pour tenter de cr√©er une pizza en oubliant un param√®tre :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-http"},'### Create a pizza which lacks a property\r\nPOST {{baseUrl}}/pizzas\r\nContent-Type: application/json\r\n\r\n{\r\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\r\n}\n')),"\n",l.createElement(n.p,null,"Veuillez ex√©cuter cette requ√™te. Que se passe-t-il ?",l.createElement(n.br),"\n",'On r√©cup√®re un code d\'erreur "400 Bad Request".'),"\n",l.createElement(n.p,null,"En effet, lorsqu'on omet un param√®tre dans la repr√©sentation de la ressource √† cr√©er, voici les lignes de code amenant au renvoi du code d'erreur 400 au sein de ",l.createElement(n.strong,null,"pizzas.js")," :"),"\n",l.createElement(n.pre,{numbered:!0,highlighting:"3,4,8"},l.createElement(n.code,{className:"language-js"},"// Create a pizza to be added to the menu.\r\nrouter.post('/', (req, res) => {\r\n  const title = req?.body?.title?.length !== 0 ? req.body.title : undefined;\r\n  const content = req?.body?.content?.length !== 0 ? req.body.content : undefined;\r\n\r\n  console.log('POST /pizzas');\r\n\r\n  if (!title || !content) return res.sendStatus(400); // error code '400 Bad request'\r\n\r\n  const lastItemIndex = MENU?.length !== 0 ? MENU.length - 1 : undefined;\r\n  const lastId = lastItemIndex !== undefined ? MENU[lastItemIndex]?.id : 0;\r\n  const nextId = lastId + 1;\r\n\r\n  const newPizza = {\r\n    id: nextId,\r\n    title: title,\r\n    content: content,\r\n  };\r\n\r\n  MENU.push(newPizza);\r\n\r\n  res.json(newPizza);\r\n});\n")),"\n",l.createElement(n.p,null,"Le client est donc bien inform√© qu'il y a eu un probl√®me lors de l'ex√©cution de l'op√©ration.",l.createElement(n.br),"\n","Il pourrait par exemple utiliser cette information pour pr√©senter un message d'erreur au niveau d'une IHM."),"\n",l.createElement(n.p,null,'Voici les grandes cat√©gories de "status codes" :'),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"R√©ponses informatives : ",l.createElement(n.strong,null,"100-199")),"\n",l.createElement(n.li,null,"R√©ponses en cas de succ√®s : ",l.createElement(n.strong,null,"200-299")),"\n",l.createElement(n.li,null,"Redirections : ",l.createElement(n.strong,null,"300-399")),"\n",l.createElement(n.li,null,"Erreurs du client : ",l.createElement(n.strong,null,"400-499")),"\n",l.createElement(n.li,null,"Erreurs du serveur : ",l.createElement(n.strong,null,"500-599")),"\n"),"\n",l.createElement(n.p,null,'Voici les "status codes" que nous allons g√©n√©ralement utiliser :'),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"200 OK")," : tout s'est bien pass√©, Express ajoute ce code automatiquement pour nous quand nous utilisons une m√©thode comme ",l.createElement(n.strong,null,"res.json()"),"."),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"400 Bad Request")," : pour indiquer au client que la requ√™te contient des param√®tres non valides ou n'est pas compl√®te."),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"401 Unauthorized")," : pour indiquer au client qu'il doit s'authentifier pour acc√©der √† cette op√©ration. On renvoie aussi ce code d'erreur quand un client fournit un mauvais username ou password."),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"403 Forbidden")," : le client est connu du serveur, mais il n'a pas les privil√®ges pour acc√©der √† cette op√©ration (par exemple, le client n'est pas admin et tente d'acc√©der √† une op√©ration seulement accessible √† un admin)."),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"404 Not Found")," : la ressource demand√©e n'existe pas, bien que l'URL semble valide."),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"409 Conflict")," : l'√©tat du serveur entre en conflit avec la requ√™te. Par exemple, la requ√™te demande de cr√©er un utilisateur qui existe d√©j√†."),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"500 Internal Server Error")," : le serveur a rencontr√© une erreur qu'il ne peut pas r√©gler. Par exemple, le serveur de base de donn√©es ne r√©pond pas et ne permet donc pas d'acc√©der aux ressources."),"\n"),"\n",l.createElement(n.h1,null,l.createElement(i,null," Op√©rations de suppression & de modification ")),"\n",l.createElement(n.h2,null,"Op√©ration de suppression"),"\n",l.createElement(n.p,null,'Nous souhaitons d√©velopper une op√©ration permettant de supprimer une ressource de type "pizzas" √† l\'aide de son identifiant.',l.createElement(n.br),"\n","Selon les conventions REST, il faut faire une requ√™te de type ",l.createElement(n.strong,null,l.createElement(n.code,null,"DELETE /pizzas/{id}"))," contenant l'identifiant de la ressource √† supprimer au sein de l'URL comme \"path parameter\"."),"\n",l.createElement(n.p,null,"Une op√©ration de suppression ne contient donc pas de body et est de type DELETE."),"\n",l.createElement(n.p,null,"Voici le code du router ",l.createElement(n.strong,null,"/routes/pizzas.js")," pour la nouvelle op√©ration, veuillez la rajouter dans votre application :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"// Delete a pizza from the menu based on its id\r\nrouter.delete('/:id', (req, res) => {\r\n  console.log(`DELETE /pizzas/${req.params.id}`);\r\n\r\n  const foundIndex = MENU.findIndex(pizza => pizza.id == req.params.id);\r\n\r\n  if (foundIndex < 0) return res.sendStatus(404);\r\n\r\n  const itemsRemovedFromMenu = MENU.splice(foundIndex, 1);\r\n  const itemRemoved = itemsRemovedFromMenu[0];\r\n\r\n  res.json(itemRemoved);\r\n});\n")),"\n",l.createElement(n.p,null,"Au sein de ",l.createElement(n.strong,null,"pizzas.http"),', veuillez ajouter cette requ√™te pour supprimer la pizza poss√©dant l\'identifiant "2" :'),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-http"},"### Delete pizza identified by 2\r\nDELETE {{baseUrl}}/pizzas/2\n")),"\n",l.createElement(n.p,null,"Veuillez ex√©cuter cette requ√™te et v√©rifier que la pizza a bien √©t√© supprim√©e."),"\n",l.createElement(n.h2,null,"Op√©ration de modification"),"\n",l.createElement(n.p,null,'Nous souhaitons d√©velopper une op√©ration permettant de modifier une ressource de type "pizzas" √† l\'aide de son identifiant et de nouvelles valeurs pour ses propri√©t√©s.',l.createElement(n.br),"\n","Selon les conventions REST, comme on accepte de modifier que certaines des propri√©t√©s d'une pizza, qu'il ne faut pas fournir toutes les propri√©t√©s d'une pizza, il faut faire une requ√™te de type ",l.createElement(n.strong,null,l.createElement(n.code,null,"PATCH /pizzas/{id}"))," contenant\r\nl'identifiant de la ressource √† supprimer au sein de l'URL comme \"path parameter\" ainsi que les nouvelles donn√©es au sein du body de la requ√™te."),"\n",l.createElement(n.p,null,'Si nous souhaitons modifier une ressource identifi√©e par 6 en fournissant un nouveau titre "Magic Green 2", la repr√©sentation des donn√©es de la ressource √† modifier sera la suivante :'),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-json"},'{\r\n    "title":"Magic Green 2"\r\n}\n')),"\n",l.createElement(n.p,null,"Selon les conventions REST, la requ√™te de modification est de type PATCH et contient ses param√®tres au sein du body de la requ√™te."),"\n",l.createElement(n.p,null,"Voici le code du router ",l.createElement(n.strong,null,"/routes/pizzas.js")," pour la nouvelle op√©ration, veuillez la rajouter dans votre application :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"// Update a pizza based on its id and new values for its parameters\r\nrouter.patch('/:id', (req, res) => {\r\n  console.log(`PATCH /pizzas/${req.params.id}`);\r\n\r\n  const title = req?.body?.title;\r\n  const content = req?.body?.content;\r\n\r\n  console.log('POST /pizzas');\r\n\r\n  if ((!title && !content) || title?.length === 0 || content?.length === 0) return res.sendStatus(400);\r\n\r\n  const foundIndex = MENU.findIndex(pizza => pizza.id == req.params.id);\r\n\r\n  if (foundIndex < 0) return res.sendStatus(404);\r\n\r\n  const updatedPizza = {...MENU[foundIndex], ...req.body};\r\n\r\n  MENU[foundIndex] = updatedPizza;\r\n\r\n  res.json(updatedPizza);\r\n});\n")),"\n",l.createElement(n.p,null,"Au sein de ",l.createElement(n.strong,null,"pizzas.http"),', veuillez ajouter cette requ√™te pour modifier la pizza poss√©dant l\'identifiant "6" :'),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-http"},'### Update the pizza identified by 6\r\nPATCH {{baseUrl}}/pizzas/6\r\nContent-Type: application/json\r\n\r\n{\r\n    "title":"Magic Green 2"\r\n}\n')),"\n",l.createElement(n.p,null,"Veuillez ex√©cuter cette requ√™te et v√©rifier que la pizza a bien √©t√© modifi√©e."),"\n",l.createElement(n.p,null,"üí≠ Cela ne fonctionne pas ?",l.createElement(n.br),"\n","Avez vous pr√©c√©demment ex√©cut√© la requ√™te permettant de cr√©er une sixi√®me pizza."),"\n",l.createElement(n.p,null,"Si tout fonctionne bien, faites un ",l.createElement(n.strong,null,"commit")," de votre repo (",l.createElement(n.strong,null,"web2"),') avec le message "',l.createElement(n.strong,null,"api-basic"),'".'),"\n",l.createElement(n.p,null,"En cas de souci, vous pouvez acc√©der au code du tutoriel ici : ",l.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/basic"},"api-basic"),"."),"\n",l.createElement(n.h1,null,l.createElement(i,null," Exercice 1.1 : Cr√©ation d'une RESTfull API non prot√©g√©e pour myMovies ")),"\n",l.createElement(n.p,null,"Veuillez continuer le d√©veloppement de ",l.createElement(n.strong,null,"myMovies"),". Vous allez cr√©er la premi√®re version de la RESTful API de ",l.createElement(n.strong,null,"myMovies"),", sous Express, afin de mettre √† disposition toutes les op√©ration de type CRUD sur des films."),"\n",l.createElement(n.p,null,"Afin de r√©aliser cet exercice, voici les contraintes d'impl√©mentation :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"Veuillez cr√©er une RESTful API pour la collection de films, qui r√©ponde sur le port par d√©faut d'une application Express (3000), et qui couvre ces op√©rations :"),"\n"),"\n",l.createElement(n.table,null,l.createElement(n.thead,null,l.createElement(n.tr,null,l.createElement(n.th,null,"URI"),l.createElement(n.th,null,"M√©thode HTTP"),l.createElement(n.th,null,"Op√©ration"))),l.createElement(n.tbody,null,l.createElement(n.tr,null,l.createElement(n.td,null,l.createElement(n.strong,null,"films")),l.createElement(n.td,null,"GET"),l.createElement(n.td,null,"READ ALL : Lire toutes les ressources de la collection")),l.createElement(n.tr,null,l.createElement(n.td,null,l.createElement(n.strong,null,"films?minimum-duration=value")),l.createElement(n.td,null,"GET"),l.createElement(n.td,null,"READ ALL FILTERED : Lire toutes les ressources de la collection selon le filtre donn√©")),l.createElement(n.tr,null,l.createElement(n.td,null,l.createElement(n.strong,null,l.createElement(n.code,null,"films/{id}"))),l.createElement(n.td,null,"GET"),l.createElement(n.td,null,"READ ONE : Lire la ressource identifi√©e")),l.createElement(n.tr,null,l.createElement(n.td,null,l.createElement(n.strong,null,"films")),l.createElement(n.td,null,"POST"),l.createElement(n.td,null,"CREATE ONE : Cr√©er une ressource bas√©e sur les donn√©es de la requ√™te")),l.createElement(n.tr,null,l.createElement(n.td,null,l.createElement(n.strong,null,l.createElement(n.code,null,"films/{id}"))),l.createElement(n.td,null,"DELETE"),l.createElement(n.td,null,"DELETE ONE : Effacer la ressource identifi√©e")),l.createElement(n.tr,null,l.createElement(n.td,null,l.createElement(n.strong,null,l.createElement(n.code,null,"films/{id}"))),l.createElement(n.td,null,"PATCH"),l.createElement(n.td,null,"UPDATE ONE : Mettre √† jour les propri√©t√©s de la ressource par les valeurs donn√©es dans la requ√™te, pour une ou plusieurs propri√©t√©s")))),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"Une ressource de type ",l.createElement(n.strong,null,"films")," doit contenir les propri√©t√©s suivantes :","\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"id")," : un entier"),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"title")," : titre du film (String)"),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"duration")," : dur√©e du film en minutes ; elle doit √™tre un nombre positif (pas une string !)."),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"budget")," : pour informer du co√ªt qu'a cout√© la production du film, en millions ; le budget doit √™tre un nombre positif (pas une string !)."),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"link")," : pour donner une URL vers la description du film (lien vers imdb, rottentomatoes ou autre)"),"\n"),"\n"),"\n",l.createElement(n.li,null,"Les ressources ne doivent pas persister : d√®s lors, ajoutez les donn√©es associ√©es aux films dans un array."),"\n",l.createElement(n.li,null,"Veuillez bien valider les param√®tres re√ßu par les op√©rations de vos API (v√©rifier par exemple que ",l.createElement(n.strong,null,"budget")," et ",l.createElement(n.strong,null,"duration")," sont des ",l.createElement(n.strong,null,"number")," positifs) et veuillez renvoyer les bons status codes en cas d'erreur."),"\n",l.createElement(n.li,null,"Veuillez tester toutes les fonctions de la RESTful API pour la collection de films √† l'aide du REST Client dans VS Code (extension √† installer au sein de VS Code). Veuillez ajouter vos requ√™tes au sein du fichier ",l.createElement(n.strong,null,"films.http")," dans le r√©pertoire ",l.createElement(n.strong,null,"REST Client")," du dossier associ√© √† cet exercice."),"\n"),"\n",l.createElement(n.h4,null,"ü§ù Tips"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"N'h√©sitez pas √† utiliser le g√©n√©rateur d'applications d'Express pour initier votre projet."),"\n",l.createElement(n.li,null,"D√©veloppez les op√©rations de votre API de mani√®re incr√©mentale : testez une op√©ration via REST Client avant de passer √† une nouvelle op√©ration."),"\n",l.createElement(n.li,null,"Pour le filtre sur les films, vous allez r√©cup√©rer un param√®tre de requ√™te.",l.createElement(n.br),"\n","‚ö° Attention, le signe ",l.createElement(n.strong,null,"-")," est un op√©rateur en JS, vous ne pouvez pas r√©cup√©rer le param√®tre de requ√™te via ",l.createElement(n.strong,null,l.createElement(n.code,null,"req.query.minimum-duration")),"...",l.createElement(n.br),"\n","üí≠ Mais alors comment faire ?",l.createElement(n.br),"\n","On acc√®de aussi au propri√©t√© d'un objet √† l'aide d'un array, ici √ßa serait via ",l.createElement(n.strong,null,l.createElement(n.code,null,"req.query['minimum-duration']")),"."),"\n",l.createElement(n.li,null,"N'h√©sitez pas √† vous inspirer du code du tutoriel ",l.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/basic"},"api-basic"),"."),"\n",l.createElement(n.li,null,"Pour v√©rifier le type d'une variable, n'h√©sitez pas √† utiliser l'op√©rateur ",l.createElement(n.strong,null,l.createElement(n.code,null,"typeof")),"."),"\n"),"\n",l.createElement(n.p,null,"Le code de votre application web doit se trouver dans votre repository local et votre web repository (normalement appel√© ",l.createElement(n.strong,null,"web2"),") dans le r√©pertoire nomm√© ",l.createElement(n.strong,null,"/exercises/module4/4.1"),"."),"\n",l.createElement(n.p,null,"Veuillez faire un ",l.createElement(n.strong,null,"commit"),' de votre code avec le message suivant :\r\n"',l.createElement(n.strong,null,"myMovies : module 4 : basic API"),'".'),"\n",l.createElement(n.h1,null,l.createElement(i,null," üç¨ Exercice 1.2 : Gestion de la pagination, de l'ordre de pr√©sentation et du filtrage de films ")),"\n",l.createElement(n.p,null,"N'h√©sitez pas, c'est optionnel, de g√©rer de nouvelles op√©rations au sein de votre RESTful API de ",l.createElement(n.strong,null,"myMovies")," :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"Filtrez tous les films qui commencent par une certaines cha√Ænes de caract√®res."),"\n",l.createElement(n.li,null,"G√©rez l'ordre de pr√©sentation des films."),"\n"),"\n",l.createElement(n.h4,null,"ü§ù Tips"),"\n",l.createElement(n.p,null,"Besoin d'inspiration pour l'aspect filtrage et la gestion de l'ordre des ressources ? ",l.createElement(n.a,{href:"https://dev.to/drminnaar/rest-api-guide-14n2"},"REST API Guide")," ",l.createElement(n.a,{href:"/js2/references/#r58"},"[R.58]"),"."),"\n",l.createElement(n.p,null,"Veuillez faire un ",l.createElement(n.strong,null,"commit"),' de votre code avec le message suivant : "',l.createElement(n.strong,null,"myMovies : module 4 : ordering & filtrering"),'".'),"\n",l.createElement(n.p,null,"üç¨ Et si vraiment vous avez encore du temps et souhaitez d√©j√† approfondir les RESTful APIs, n'h√©sitez pas aussi √† impl√©menter la gestion de la pagination."))}var s=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?l.createElement(n,e,l.createElement(a,e)):a(e)};function u(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}var o=t(4854),i=t(5583),c=t(5679),d=t(307),m=t(7410),p=t(9523),E=t(8075),g=t(9063),z=t(1631),f=t(5772),v=t(2770),h=t(7008),q=t(9771),b=t(1218),T=(t(5258),t(9394)),x=t(4579),P=t(9416),y=t(9256),j=t(6488),R=t(5175),I=t(6387),S=t(6044);const N={Link:o.Link,Image:c.Z,Section:d.Z,Content:m.Z,Background:p.Z,SectionHeader:E.Z,SectionFooter:g.Z,PageHeader:z.Z,CodeBlock:v.Z,LinkFile:h.Z,ScrollableImage:q.Z,PublicProjectsView:b.Z,AuthenticatedBlock:T.Z,UnAuthenticatedBlock:x.Z,NestedMdxBlock:P.Z,YoutubeImage:y.Z,InternalPageMenu:j.Z,InternalPageMenuItem:R.Z,InternalPageTitle:I.Z,PathViewer:S.k,PathViewerItem:S.F};function w(e){var n,t,a,s,u;let{data:{mdx:o,allImages:c},children:d}=e;return N.PageHeader=(0,f.u)(z.Z,null==o?void 0:o.frontmatter),l.createElement(i.Z,Object.assign({},null!=o&&o.frontmatter?{frontmatter:o.frontmatter}:{},null!=o&&null!==(n=o.frontmatter)&&void 0!==n&&n.navbarExtraStyles?{navbarExtraStyles:o.frontmatter.navbarExtraStyles}:{},null!=o&&null!==(t=o.frontmatter)&&void 0!==t&&t.headerImage?{headerImage:o.frontmatter.headerImage}:{},null!=o&&null!==(a=o.frontmatter)&&void 0!==a&&a.featuredImage?{featuredImage:o.frontmatter.featuredImage}:{},null!=o&&null!==(s=o.frontmatter)&&void 0!==s&&s.title?{pageTitle:o.frontmatter.title}:{},c&&c.length>0?{allImages:c}:{}),l.createElement(r.Zo,{components:N},l.createElement("div",{className:null!=o&&null!==(u=o.frontmatter)&&void 0!==u&&u.autoMargin?"page page--auto-margin":"page"},d)))}function A(e){return l.createElement(w,e,l.createElement(s,e))}}}]);
//# sourceMappingURL=component---src-templates-mdx-pages-js-content-file-path-src-mdx-pages-part-1-express-api-fr-mdx-f22533146a5555437b7b.js.map