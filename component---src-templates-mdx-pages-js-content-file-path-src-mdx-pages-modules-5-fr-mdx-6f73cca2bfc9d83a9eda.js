"use strict";(self.webpackChunkmyjscourse=self.webpackChunkmyjscourse||[]).push([[634],{9647:function(e,n,t){t.r(n),t.d(n,{default:function(){return w}});var r=t(3905),l=t(7294);function a(e){const n=Object.assign({h1:"h1",p:"p",ul:"ul",li:"li",a:"a",h2:"h2",br:"br",strong:"strong",pre:"pre",code:"code",h3:"h3",h4:"h4",ol:"ol"},(0,r.ah)(),e.components),{ScrollableImage:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ScrollableImage",!0),l.createElement(l.Fragment,null,l.createElement(n.h1,null,"Module 5 : Service web persistant via JSON et architectur√©"),"\n",l.createElement(n.p,null,"Ce module vous offre principalement la persistance des ressources via des fichiers JSON et le refactoring de web services afin de faciliter la maintenabilit√© et la lisibilit√© du code."),"\n",l.createElement(n.p,null,"Voici les sujets trait√©s :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"a) ",l.createElement(n.a,{href:"#a"},"Introduction au JSON et persistance des donn√©es"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"a.1) ",l.createElement(n.a,{href:"#a1"},"Introduction g√©n√©rale")),"\n",l.createElement(n.li,null,"a.2) ",l.createElement(n.a,{href:"#a2"},"Introduction au JSON")),"\n",l.createElement(n.li,null,"a.3) ",l.createElement(n.a,{href:"#a3"},"Communication de donn√©es en JSON")),"\n",l.createElement(n.li,null,"a.4) ",l.createElement(n.a,{href:"#a4"},"Sauvegarde de donn√©es JSON")),"\n"),"\n"),"\n",l.createElement(n.li,null,"b) ",l.createElement(n.a,{href:"#b"},"Am√©lioration des outils de d√©veloppement"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"b.1) ",l.createElement(n.a,{href:"#b1"},"Introduction")),"\n",l.createElement(n.li,null,"b.2) ",l.createElement(n.a,{href:"#b2"},"Red√©marrage automatique au changement d'un fichier")),"\n",l.createElement(n.li,null,"b.3) ",l.createElement(n.a,{href:"#b3"},"Debugging")),"\n",l.createElement(n.li,null,"b.4) ",l.createElement(n.a,{href:"#b4"},"Autres outils de d√©veloppement")),"\n"),"\n"),"\n",l.createElement(n.li,null,"c) ",l.createElement(n.a,{href:"#c"},"Exercice 5.1 : Persistance de la RESTfull API pour myMovies")),"\n",l.createElement(n.li,null,"d) ",l.createElement(n.a,{href:"#d"},"Refactoring √† l'aide d'un \"fat model\""),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"d.1) ",l.createElement(n.a,{href:"#d1"},"Architectures possibles ?")),"\n",l.createElement(n.li,null,"d.2) ",l.createElement(n.a,{href:"#d2"},'Architecture Express & "fat model"')),"\n"),"\n"),"\n",l.createElement(n.li,null,"e) ",l.createElement(n.a,{href:"#e"},"Exercice 5.2 : Refactor de la RESTfull API pour myMovies")),"\n"),"\n",l.createElement(n.h1,null,l.createElement("a",{id:"a"})," a) Introduction au JSON et persistance des donn√©es"),"\n",l.createElement(n.h2,null,l.createElement("a",{id:"a1"})," a.1) Introduction g√©n√©rale"),"\n",l.createElement(n.p,null,"Au module 4, nous avons d√©velopp√© notre premi√®re RESTful API.",l.createElement(n.br),"\n","Nous avons implicitement d√©couvert le JSON, notamment lorsque nous avons fait des requ√™tes vers nos API."),"\n",l.createElement(n.p,null,"Nous allons maintenant voir ce que permet le JSON, notamment la cr√©ation de fichiers permettant de sauvegarder des donn√©es facilement en JS."),"\n",l.createElement(n.h2,null,l.createElement("a",{id:"a2"})," a.2) Introduction au JSON"),"\n",l.createElement(n.p,null,"JSON vient de ",l.createElement(n.strong,null,"J"),"ava",l.createElement(n.strong,null,"S"),"cript ",l.createElement(n.strong,null,"O"),"bject ",l.createElement(n.strong,null,"N"),"otation."),"\n",l.createElement(n.p,null,"C'est une syntaxe pour ",l.createElement(n.strong,null,"√©changer")," et ",l.createElement(n.strong,null,"faire persister des donn√©es"),"."),"\n",l.createElement(n.p,null,"Du JSON, c'est du texte en notation JS."),"\n",l.createElement(n.p,null,"Voici les types de donn√©es qui sont valides en JSON :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"string")),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"number")),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"object")),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"array")),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"boolean")),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"null")),"\n"),"\n",l.createElement(n.p,null,"‚ö° Il n'y a donc pas de ",l.createElement(n.strong,null,"function"),", ",l.createElement(n.strong,null,"date")," et ",l.createElement(n.strong,null,"undefined"),"."),"\n",l.createElement(n.p,null,"Voici un exemple de repr√©sentation de donn√©es en JSON qui correspond √† ce que tr√®s souvent une API renvoie, un array d'objets :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-json"},'[\r\n  {\r\n    "email": "raphael@voila.com",\r\n    "fullname": "Raphael Baroni"\r\n  },\r\n  {\r\n    "email": "jkj@herenqn.com",\r\n    "fullname": "JK Roling"\r\n  },\r\n  {\r\n    "email": "serena@gmail.com",\r\n    "fullname": "Serena Here"\r\n  }\r\n]\n')),"\n",l.createElement(n.h2,null,l.createElement("a",{id:"a3"})," a.3) Communication de donn√©es en JSON"),"\n",l.createElement(n.h3,null,"a.3.1) S√©rialisation d'objets JS vers du JSON"),"\n",l.createElement(n.h4,null,"a.3.1.1) Envoi d'une application serveur vers un client"),"\n",l.createElement(n.p,null,"Via Express, nous pouvons tr√®s facilement convertir un objet JS en JSON afin de l'envoyer vers une application cliente gr√¢ce √† la m√©thode ",l.createElement(n.strong,null,l.createElement(n.code,null,"res.json()")),"."),"\n",l.createElement(n.p,null,'C\'est ce que nous appelons de la s√©rialisation de donn√©es, nous passons du monde "objets en m√©moire" vers du texte (ou des octets) qui vont voyager sur un r√©seau.'),"\n",l.createElement(n.p,null,"Le code actuel de notre RESTful API, renvoyant un array de pizzas au format JSON, est g√©r√© automatiquement via :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"res.json(orderedMenu ?? MENU);\n")),"\n",l.createElement(n.p,null,"Lorsque l'API renvoie ",l.createElement(n.strong,null,l.createElement(n.code,null,"MENU"))," avec les pizzas par d√©faut, voici le JSON qui voyage sur le r√©seau :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-json"},'[\r\n  {\r\n    "id": 1,\r\n    "title": "4 fromages",\r\n    "content": "Gruy√®re, S√©rac, Appenzel, Gorgonzola, Tomates"\r\n  },\r\n  {\r\n    "id": 2,\r\n    "title": "Vegan",\r\n    "content": "Tomates, Courgettes, Oignons, Aubergines, Poivrons"\r\n  },\r\n  {\r\n    "id": 3,\r\n    "title": "Vegetarian",\r\n    "content": "Mozarella, Tomates, Oignons, Poivrons, Champignons, Olives"\r\n  },\r\n  {\r\n    "id": 4,\r\n    "title": "Alpage",\r\n    "content": "Gruy√®re, Mozarella, Lardons, Tomates"\r\n  },\r\n  {\r\n    "id": 5,\r\n    "title": "Diable",\r\n    "content": "Tomates, Mozarella, Chorizo piquant, Jalapenos"\r\n  }\r\n]\n')),"\n",l.createElement(n.p,null,"üí≠ La puissance du JSON peut d√©j√† s'exprimer ici. Mais comment ?"),"\n",l.createElement(n.p,null,"L'API renvoie un array d'objets, des pizzas, au format JSON, qui correspond en fait √† un format texte avec des conventions.",l.createElement(n.br),"\n","Il est donc possible √† n'importe quelle application cliente d'utiliser ces donn√©es, quelque soit la technologie, le langage utilis√© pour d√©velopper cette application cliente.",l.createElement(n.br),"\n","Ainsi, par exemple, une application Android, d√©velopp√©e en Java, pourrait consommer cette API pour afficher un menu de pizzas !"),"\n",l.createElement(n.h4,null,"a.3.1.2) Envoi d'une application cliente vers un serveur"),"\n",l.createElement(n.p,null,"Il est possible aussi, et nous le verrons plus tard en d√©tails, de communiquer des donn√©es d'une IHM vers une API."),"\n",l.createElement(n.p,null,"Nous avons d√©j√† envoy√© du JSON √† une API via REST Client.",l.createElement(n.br),"\n",'Voici la requ√™te envoyant, dans son body, la repr√©sentation JSON d\'une ressource de type "pizzas" √† cr√©er :'),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-http"},'### Create a pizza\r\nPOST {{baseUrl}}/pizzas\r\nContent-Type: application/json\r\n\r\n{\r\n    "title":"Magic Green",\r\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\r\n}\n')),"\n",l.createElement(n.p,null,'Il est important de communiquer le "media type" (ou ',l.createElement(n.strong,null,"MIME"),') du corps de la requ√™te : "',l.createElement(n.strong,null,'application/json"'),".",l.createElement(n.br),"\n","Cela indique √† l'application qui est la cible de la requ√™te quelle genre d'outil elle devra utiliser pour d√©coder les donn√©es.",l.createElement(n.br),"\n","Par exemple, il faut faire un traitement diff√©rent pour r√©cup√©rer des donn√©es au format JSON que pour r√©cup√©rer des donn√©es directement associ√©es √† un fichier image."),"\n",l.createElement(n.p,null,"Si l'on consid√®re une IHM, il sera utile plus tard d'avoir un formulaire permettant d'ajouter des pizzas.",l.createElement(n.br),"\n","Le JS associ√© √† l'IHM permettra d'envoyer les donn√©es du formulaire au format JSON, via la m√©thode ",l.createElement(n.strong,null,l.createElement(n.code,null,"fetch")),", vers notre RESTful API g√©rant les ressources de type pizzas."),"\n",l.createElement(n.p,null,'Voici un exemple de code que vous ne devez pas encore comprendre, qui permet √† une IHM de cr√©er une ressource de type "pizzas" :'),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"const options = {\r\n  method: 'POST',\r\n  body: JSON.stringify({\r\n    title: title.value,\r\n    content: content.value,\r\n  }),\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n};\r\n\r\nconst response = await fetch('/api/pizzas', options);\r\nconst pizza = await response.json();\n")),"\n",l.createElement(n.h3,null,"a.3.2) Parsing de donn√©es JSON vers un objet JS"),"\n",l.createElement(n.h4,null,"a.3.2.1) R√©ception par une application serveur"),"\n",l.createElement(n.p,null,"Via Express, nous pouvons tr√®s facilement convertir du JSON vers un objet JS √† l'aide du middleware ",l.createElement(n.strong,null,l.createElement(n.code,null,"express.json()")),"."),"\n",l.createElement(n.p,null,"C'est ce que nous appelons du parsing de donn√©es, ou de la d√©s√©rialisation, c'est quand nous passons du monde texte / JSON (ou des octets) vers des \"objets en m√©moire\"."),"\n",l.createElement(n.p,null,"Le code actuel de notre RESTful API r√©cup√©rant les donn√©es d'une pizza √† cr√©er est tr√®s simple :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"const title = req?.body?.title?.length !== 0 ? req.body.title : undefined;\r\nconst content = req?.body?.content?.length !== 0 ? req.body.content : undefined;\n")),"\n",l.createElement(n.p,null,"Automatiquement gr√¢ce √† Express et au middleware appel√© dans ",l.createElement(n.strong,null,"apps.js")," (",l.createElement(n.strong,null,l.createElement(n.code,null,"app.use(express.json());")),"), ",l.createElement(n.strong,null,l.createElement(n.code,null,"req.body"))," contient un objet JS repr√©sentant toutes les donn√©es JSON qui √©taient pr√©sentes dans le body de la requ√™te cliente, comme par exemple :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-http"},'### Create a pizza\r\nPOST {{baseUrl}}/pizzas\r\nContent-Type: application/json\r\n\r\n{\r\n    "title":"Magic Green",\r\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\r\n}\n')),"\n",l.createElement(n.h4,null,"a.3.2.2) R√©ception par une application cliente"),"\n",l.createElement(n.p,null,"Plus tard, nous verrons comment une IHM peut utiliser les donn√©es envoy√©es par une API."),"\n",l.createElement(n.p,null,"La m√©thode ",l.createElement(n.strong,null,l.createElement(n.code,null,"fetch"))," en collaboration avec la m√©thode ",l.createElement(n.strong,null,l.createElement(n.code,null,"json"))," sur la r√©ponse d'une API permet de r√©cup√©rer et parser des donn√©es JSON vers un objet JS.",l.createElement(n.br),"\n","Par exemple, cette requ√™te de cr√©ation d'une pizza parse la ressource qui a √©t√© rajout√©e c√¥t√© API au sein de la variable ",l.createElement(n.strong,null,l.createElement(n.code,null,"pizza"))," :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"const options = {\r\n  method: 'POST',\r\n  body: JSON.stringify({\r\n    title: title.value,\r\n    content: content.value,\r\n  }),\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n};\r\n\r\nconst response = await fetch('/api/pizzas', options);\r\nconst pizza = await response.json();\n")),"\n",l.createElement(n.h2,null,l.createElement("a",{id:"a4"})," a.4) Sauvegarde de donn√©es JSON"),"\n",l.createElement(n.h3,null,"a.4.1) S√©rialisation d'objets JS vers du JSON"),"\n",l.createElement(n.h4,null,"a.4.1.1) Application c√¥t√© serveur"),"\n",l.createElement(n.p,null,"La fonction JS ",l.createElement(n.strong,null,l.createElement(n.code,null,"JSON.stringify(objectToSerialised)"))," permet de cr√©er une ",l.createElement(n.strong,null,"string")," contenant la repr√©sentation JSON de l'objet √† s√©rialiser."),"\n",l.createElement(n.p,null,"C√¥t√© serveur, il est ensuite facile de sauvegarder les donn√©es JSON au sein d'un fichier."),"\n",l.createElement(n.p,null,"Voici un exemple de code, une fonction, permettant √† une application Express de sauvegarder au format JSON un objet dans un fichier ",l.createElement(n.strong,null,".json")," dont son chemin et nom complet sont indiqu√©s dans le param√®tre ",l.createElement(n.strong,null,"filePath")," :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"/**\r\n * Serialize the content of an Object within a file\r\n * @param {String} filePath - path to the .json file\r\n * @param {Array} object - Object to be written within the .json file.\r\n * Even if the file exists, its whole content is reset by the given object.\r\n */\r\nfunction serialize(filePath, object) {\r\n  const objectSerialized = JSON.stringify(object);\r\n  fs.writeFileSync(filePath, objectSerialized);\r\n}\n")),"\n",l.createElement(n.p,null,'Imaginez que, au sein du router traitant des ressources de type "pizzas", vous passiez la valeur suivante √† ',l.createElement(n.strong,null,"filePath")," :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"const jsonDbPath = __dirname + '/../data/pizzas.json';\r\nserialize(jsonDbPath, MENU);\n")),"\n",l.createElement(n.p,null,"Cela signifie que dans le projet contenant notre API, nous allons sauvegarder le menu des pizzas au format JSON dans le fichier JSON ",l.createElement(n.strong,null,"/data/pizzas.json"),"."),"\n",l.createElement(n.p,null,"Ce fichier est en fait une base de donn√©es simplifi√©e !",l.createElement(n.br),"\n","Nous allons prochainement voir comment r√©cup√©rer ces donn√©es au sein d'un array."),"\n",l.createElement(n.p,null,'Nous allons maintenant r√©aliser un tutoriel pour rendre les ressources de type "pizzas" persistantes.',l.createElement(n.br),"\n","Nous allons repartir de l'API cr√©√©e au module 4."),"\n",l.createElement(n.p,null,"Dans votre repo ",l.createElement(n.strong,null,"web2"),", veuillez copier / coller le r√©pertoire ",l.createElement(n.strong,null,"/tutorials/pizzeria/api/basic")," et le renommer en ",l.createElement(n.strong,null,"/tutorials/pizzeria/api/persistence"),"."),"\n",l.createElement(n.p,null,"En cas de souci, vous pouvez t√©l√©charger le code du tutoriel pr√©c√©dent ici : ",l.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/basic"},"api-basic"),"."),"\n",l.createElement(n.p,null,"Veuillez ouvrir un terminal au niveau de ce r√©pertoire."),"\n",l.createElement(n.p,null,"Pour la suite du tutoriel, nous consid√©rons que tous les chemins absolus d√©marrent du r√©pertoire ",l.createElement(n.strong,null,"/tutorials/pizzeria/api/persistence")," (ou ",l.createElement(n.strong,null,"/web2/tutorials/pizzeria/api/persistence")," si l'on consid√®re le nom du r√©pertoire du repo)."),"\n",l.createElement(n.p,null,"Veuillez cr√©er un nouveau r√©pertoire ",l.createElement(n.strong,null,"/utils"),". Au sein de ce r√©pertoire, veuillez cr√©er le module ",l.createElement(n.strong,null,"/utils/json.js")," dans lequel vous allez ajouter ces fonctions :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"const fs = require('fs');\r\n\r\n/**\r\n * Parse items given in a .json file\r\n * @param {String} filePath - path to the .json file\r\n * If the file does not exist or it's content cannot be parsed as JSON data,\r\n * use the default data.\r\n * @param {Array} defaultArray - Content to be used when the .json file does not exists\r\n * @returns {Array} : the array that was parsed from the file (or defaultArray)\r\n */\r\nfunction parse(filePath, defaultArray = []) {\r\n  if (!fs.existsSync(filePath)) return defaultArray;\r\n  const fileData = fs.readFileSync(filePath);\r\n  try {\r\n    // parse() Throws a SyntaxError exception if the string to parse is not valid JSON.\r\n    return JSON.parse(fileData);\r\n  } catch (err) {\r\n    return defaultArray;\r\n  }\r\n}\r\n\r\n/**\r\n * Serialize the content of an Object within a file\r\n * @param {String} filePath - path to the .json file\r\n * @param {Array} object - Object to be written within the .json file.\r\n * Even if the file exists, its whole content is reset by the given object.\r\n */\r\nfunction serialize(filePath, object) {\r\n  const objectSerialized = JSON.stringify(object);\r\n  createPotentialLastDirectory(filePath);\r\n  fs.writeFileSync(filePath, objectSerialized);\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} filePath - path to the .json file\r\n */\r\nfunction createPotentialLastDirectory(filePath) {\r\n  const pathToLastDirectory = filePath.substring(0, filePath.lastIndexOf('/'));\r\n\r\n  if (fs.existsSync(pathToLastDirectory)) return;\r\n\r\n  fs.mkdirSync(pathToLastDirectory);\r\n}\r\n\r\nmodule.exports = { parse, serialize };\n")),"\n",l.createElement(n.p,null,"L'op√©ration de s√©rialisation des donn√©es est faite via la fonction ",l.createElement(n.strong,null,"serialize")," de ",l.createElement(n.strong,null,"/utils/json.js"),". Pour se simplifier la vie et ne pas obliger les d√©veloppeurs √† devoir cr√©er manuellement un r√©pertoire qui contiendra la mini DB de pizzas (le fichier ",l.createElement(n.strong,null,"pizzas.json")," dans la suite de l'exemple), une fonction a √©t√© cr√©√©e qui s'appelle ",l.createElement(n.strong,null,"createPotentialLastDirectory"),".",l.createElement(n.br),"\n","La fonction ",l.createElement(n.strong,null,"serialize")," fait appel √† cette fonction qui va, si n√©cessaire, cr√©er le dernier r√©pertoire donn√© dans le chemin vers le fichier JSON (le r√©pertoire ",l.createElement(n.strong,null,"/data")," dans la suite de l'exemple)."),"\n",l.createElement(n.p,null,"Il n'est pas int√©ressant de retenir par coeur le code donn√© dans ",l.createElement(n.strong,null,"/utils/json.js"),". Par contre, il est important que vous compreniez celui-ci, ce qu'il fait."),"\n",l.createElement(n.p,null,'A pr√©sent, nous allons convertir le code du router de "pizzas" pour rendre les donn√©es peristantes.',l.createElement(n.br),"\n","Voici ce que nous devons faire pour les op√©rations de :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"lecture de ressources")," : il suffit de faire appel √† la fonction ",l.createElement(n.strong,null,l.createElement(n.code,null,"parse"))," qui tentera de charger les ressources qui devraient se trouver dans le r√©pertoire ",l.createElement(n.strong,null,"/data/pizzas.json"),". Notons que le chemin vers ce fichier JSON est un simple choix, il doit √™tre configurable."),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"√©criture de ressources")," : lors d'une op√©ration d'√©criture pour cr√©er une nouvelle ressource, ou pour mettre √† jour une ressource existante, voici les √©tapes :","\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"cr√©ation d'une liste de toutes les pizzas dans un array : cela correspond √† l'utilisation de la fonction ",l.createElement(n.strong,null,l.createElement(n.code,null,"parse"))," pour tenter de charger ce qui est contenu dans la mini DB de pizzas."),"\n",l.createElement(n.li,null,"mise √† jour de l'array soit en ajoutant un nouvel objet (une pizza), soit en modifiant un objet existant, soit en supprimant un objet."),"\n",l.createElement(n.li,null,"r√©√©criture compl√®te du fichier JSON contenant la liste de pizzas sur base de l'array de pizzas qui a pr√©c√©demment √©t√© mis √† jour via la m√©thode ",l.createElement(n.strong,null,l.createElement(n.code,null,"serialize")),"."),"\n"),"\n"),"\n"),"\n",l.createElement(n.p,null,"Voici le code du router mis √† jour afin de g√©rer la persistance selon la strat√©gie d√©finie ci-dessus, les modifications √©tant surlign√©es :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"var express = require('express');\r\nconst { serialize, parse } = require('../utils/json');\r\nvar router = express.Router();\r\n\r\nconst jsonDbPath = __dirname + '/../data/pizzas.json';\r\n\r\nconst MENU = [\r\n  {\r\n    id: 1,\r\n    title: '4 fromages',\r\n    content: 'Gruy√®re, S√©rac, Appenzel, Gorgonzola, Tomates',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Vegan',\r\n    content: 'Tomates, Courgettes, Oignons, Aubergines, Poivrons',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Vegetarian',\r\n    content: 'Mozarella, Tomates, Oignons, Poivrons, Champignons, Olives',\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Alpage',\r\n    content: 'Gruy√®re, Mozarella, Lardons, Tomates',\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Diable',\r\n    content: 'Tomates, Mozarella, Chorizo piquant, Jalapenos',\r\n  },\r\n];\r\n\r\n/* Read all the pizzas from the menu\r\n   GET /pizzas?order=title¬†:¬†ascending order¬†by¬†title\r\n¬†  GET /pizzas?order=-title¬†:¬†descending order¬†by¬†title\r\n*/\r\nrouter.get('/', (req, res, next) => {\r\n  const orderByTitle =\r\n    req?.query?.order?.includes('title') ? req.query.order : undefined;\r\n  let orderedMenu;\r\n  console.log(`order by ${orderByTitle ?? 'not requested'}`);\r\n\r\n  const pizzas = parse(jsonDbPath, MENU);\r\n  \r\n  if (orderByTitle) orderedMenu = [...pizzas].sort((a, b) => a.title.localeCompare(b.title));\r\n  if (orderByTitle === '-title') orderedMenu = orderedMenu.reverse();\r\n\r\n  console.log('GET /pizzas');\r\n  return res.json(orderedMenu ?? pizzas);\r\n});\r\n\r\n// Read the pizza identified by an id in the menu\r\nrouter.get('/:id', (req, res) => {\r\n  console.log(`GET /pizzas/${req.params.id}`);\r\n\r\n  const pizzas = parse(jsonDbPath, MENU);\r\n\r\n  const indexOfPizzaFound = pizzas.findIndex(pizza => pizza.id == req.params.id);\r\n\r\n  if (indexOfPizzaFound < 0) return res.sendStatus(404);\r\n\r\n  return res.json(pizzas[indexOfPizzaFound]);\r\n});\r\n\r\n// Create a pizza to be added to the menu.\r\nrouter.post('/', (req, res) => {\r\n  const title = req?.body?.title?.length !== 0 ? req.body.title : undefined;\r\n  const content = req?.body?.content?.length !== 0 ? req.body.content : undefined;\r\n\r\n  console.log('POST /pizzas');\r\n\r\n  if (!title || !content) return res.sendStatus(400); // error code '400 Bad request'\r\n\r\n  const pizzas = parse(jsonDbPath, MENU);\r\n  const lastItemIndex = pizzas?.length !== 0 ? pizzas.length - 1 : undefined;\r\n  const lastId = lastItemIndex !== undefined ? pizzas[lastItemIndex]?.id : 0;\r\n  const nextId = lastId + 1;\r\n\r\n  const newPizza = {\r\n    id: nextId,\r\n    title: title,\r\n    content: content,\r\n  };\r\n\r\n  pizzas.push(newPizza);\r\n\r\n  serialize(jsonDbPath, pizzas);\r\n\r\n  return res.json(newPizza);\r\n});\r\n\r\n// Delete a pizza from the menu based on its id\r\nrouter.delete('/:id', (req, res) => {\r\n  console.log(`DELETE /pizzas/${req.params.id}`);\r\n\r\n  const pizzas = parse(jsonDbPath, MENU);\r\n\r\n  const foundIndex = pizzas.findIndex(pizza => pizza.id == req.params.id);\r\n\r\n  if (foundIndex < 0) return res.sendStatus(404);\r\n\r\n  const itemsRemovedFromMenu = pizzas.splice(foundIndex, 1);\r\n  const itemRemoved = itemsRemovedFromMenu[0];\r\n\r\n  serialize(jsonDbPath, pizzas);\r\n\r\n  return res.json(itemRemoved);\r\n});\r\n\r\n// Update a pizza based on its id and new values for its parameters\r\nrouter.patch('/:id', (req, res) => {\r\n  console.log(`PATCH /pizzas/${req.params.id}`);\r\n\r\n  const title = req?.body?.title;\r\n  const content = req?.body?.content;\r\n\r\n  console.log('POST /pizzas');\r\n\r\n  if ((!title && !content) || title?.length === 0 || content?.length === 0) return res.sendStatus(400);\r\n\r\n  const pizzas = parse(jsonDbPath, MENU);\r\n\r\n  const foundIndex = pizzas.findIndex(pizza => pizza.id == req.params.id);\r\n\r\n  if (foundIndex < 0) return res.sendStatus(404);\r\n\r\n  const updatedPizza = {...pizzas[foundIndex], ...req.body};\r\n\r\n  pizzas[foundIndex] = updatedPizza;\r\n\r\n  serialize(jsonDbPath, pizzas);\r\n\r\n  return res.json(updatedPizza);\r\n});\r\n\r\nmodule.exports = router;\n")),"\n",l.createElement(n.p,null,"Veuillez mettre √† jour votre fichier ",l.createElement(n.strong,null,"/router/pizzas.js")," sur base du code donn√© et testez le bon fonctionnement de l'application. Faites quelques requ√™tes pour ajouter et modifier des donn√©es et v√©rifiez, une fois que vous red√©marrer votre application, que les donn√©es persistent."),"\n",l.createElement(n.h4,null,"a.4.1.2) Application c√¥t√© client"),"\n",l.createElement(n.p,null,"Au niveau d'une IHM, il doit aussi √™tre possible de sauvegarder des informations.",l.createElement(n.br),"\n","Or, pour des raisons de s√©curit√©, le browser ne peut pas cr√©er des fichiers JSON de mani√®re transparente √† l'utilisateur.",l.createElement(n.br),"\n",'Afin de sauvegarder des donn√©es, le browser met n√©anmoins √† disposition un web storage dans lequel on peut sauvegarder des donn√©es sous forme de paires "cl√© / valeur", au format texte.',l.createElement(n.br),"\n","Nous verrons cela plus tard en d√©tails."),"\n",l.createElement(n.p,null,"Voici d√©j√† malgr√© tout un exemple de code, une fonction, permettant de sauvegarder les donn√©es de session d'un utilisateur dans le web storage d'un browser :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"const setUserSessionData = (user) => {\r\n  const storageValue = JSON.stringify(user);\r\n  localStorage.setItem(STORE_NAME, storageValue);\r\n};\n")),"\n",l.createElement(n.h3,null,"a.4.2) Parsing de donn√©es JSON vers un objet JS"),"\n",l.createElement(n.h4,null,"a.4.2.1) Application c√¥t√© serveur"),"\n",l.createElement(n.p,null,"La fonction JS ",l.createElement(n.strong,null,l.createElement(n.code,null,"JSON.parse(objectSerialized) "))," permet de cr√©er un objet JS √† partir d'une ",l.createElement(n.strong,null,"string")," contenant des donn√©es au format JSON."),"\n",l.createElement(n.p,null,"C√¥t√© serveur, il est ensuite facile de sauvegarder les donn√©es JSON au sein d'un fichier."),"\n",l.createElement(n.p,null,"Voici un exemple de code, une fonction, permettant √† une application Express de cr√©er un objet JS sur base de donn√©es JSON se trouvant dans un fichier ",l.createElement(n.strong,null,".json")," dont le chemin et nom complet sont indiqu√©s dans le param√®tre ",l.createElement(n.strong,null,"filePath")," :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"/**\r\n * Parse items given in a .json file\r\n * @param {String} filePath - path to the .json file\r\n * If the file does not exist or it's content cannot be parsed as JSON data,\r\n * use the default data.\r\n * @param {Array} defaultArray - Content to be used when the .json file does not exists\r\n * @returns {Array} : the array that was parsed from the file (or defaultData)\r\n */\r\nfunction parse(filePath, defaultArray = []) {\r\n  if (!fs.existsSync(filePath)) return defaultArray;\r\n  const fileData = fs.readFileSync(filePath);\r\n  try {\r\n    // parse() Throws a SyntaxError exception if the string to parse is not valid JSON.\r\n    return JSON.parse(fileData);\r\n  } catch (err) {\r\n    return defaultArray;\r\n  }\r\n}\n")),"\n",l.createElement(n.p,null,"Imaginez que, au sein du router traitant des ressources de type \"pizzas\", que l'on r√©cup√®re le menu des pizzas √† l'aide du fichier JSON dont le chemin et nom complet est donn√© dans ",l.createElement(n.strong,null,"jsonDbPath"),". Voici ce que donnerait l'op√©ration de lecture de toutes les pizzas :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"// Read all the pizzas from the menu\r\nrouter.get('/', function (req, res) {\r\n  console.log('GET /pizzas');\r\n  const pizzas = parse(jsonDbPath, DEFAULT_MENU);\r\n  res.json(pizzas);\r\n});\n")),"\n",l.createElement(n.h4,null,"a.4.2.2) Application c√¥t√© client"),"\n",l.createElement(n.p,null,"Au niveau d'une IHM, il doit aussi √™tre possible de r√©cup√©rer des donn√©es JSON qui auraient √©t√© sauvegard√©es au sein du web browser."),"\n",l.createElement(n.p,null,"Nous verrons cela plus tard en d√©tails. Voici d√©j√† malgr√© tout un exemple de code, une fonction, permettant de parser les donn√©es de session d'un utilisateur se trouvant dans le web storage d'un browser :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"const getUserSessionData = () => {\r\n  const retrievedUser = localStorage.getItem(STORE_NAME);\r\n  if (!retrievedUser) return;\r\n  return JSON.parse(retrievedUser);\r\n};\n")),"\n",l.createElement(n.h1,null,l.createElement("a",{id:"b"})," b) Am√©lioration des outils de d√©veloppement"),"\n",l.createElement(n.h2,null,l.createElement("a",{id:"b1"})," b.1) Introduction"),"\n",l.createElement(n.p,null,"Dans le d√©veloppement de nos API, nous souhaitons plus de facilit√©s.",l.createElement(n.br),"\n","Notamment, √† chaque changement de notre code, nous ne souhaitons pas devoir red√©marrer manuellement notre application."),"\n",l.createElement(n.p,null,"Nous souhaiterions aussi b√©n√©ficier d'un debugger et d'autres outils, comme un linter..."),"\n",l.createElement(n.h2,null,l.createElement("a",{id:"b2"})," b.2) Red√©marrage automatique au changement d'un fichier"),"\n",l.createElement(n.h3,null,"b.2.1) Configuration de l'utilisation de nodemon"),"\n",l.createElement(n.p,null,"Il est possible de faire en sorte qu'√† chaque fois que vous sauvez un fichier, votre application ",l.createElement(n.strong,null,"node.js")," red√©marre automatiquement."),"\n",l.createElement(n.p,null,"Voici la pr√©c√©dure :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"Installez ",l.createElement(n.strong,null,"nodemon")," au niveau du r√©pertoire du projet :"),"\n"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-bash"},"npm i nodemon -D\n")),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"Pour lancer ",l.createElement(n.strong,null,"nodemon")," (au lieu du simple ",l.createElement(n.strong,null,"node"),") quand on tape ",l.createElement(n.strong,null,l.createElement(n.code,null,"npm run dev"))," : Veuillez ajouter la ligne ",l.createElement(n.strong,null,l.createElement(n.code,null,'"dev": "nodemon /bin/www"'))," dans ",l.createElement(n.strong,null,"package.json")," :"),"\n"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-json"},'"scripts": {\r\n    "dev": "nodemon ./bin/www",\r\n    "start": "node ./bin/www"\r\n  },\n')),"\n",l.createElement(n.h3,null,"b.2.2) Configuration des fichiers √† ignorer pour √©viter des r√©d√©marrages"),"\n",l.createElement(n.p,null,"Il est possible d'indiquer les fichiers qui doivent √™tre ignor√©s par ",l.createElement(n.strong,null,"nodemon")," via l'ajout dans ",l.createElement(n.strong,null,"package.json")," :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-json"},'"nodemonConfig": {\r\n    "ignore": [\r\n      "data/*"\r\n    ]\r\n  },\n')),"\n",l.createElement(n.p,null,"Dans la configuration ajout√©e ci-dessous, tous les fichiers qui seraient mis √† jour dans le r√©pertoire ",l.createElement(n.strong,null,"/data")," ne provoqueront pas de red√©marrage du serveur ",l.createElement(n.strong,null,"nodemon")," lorsqu'il est lanc√© (en mode 'dev')."),"\n",l.createElement(n.p,null,"Veuillez installer ",l.createElement(n.strong,null,"nodemon")," dans le cadre de votre tutoriel ",l.createElement(n.strong,null,"api-persistence")," et configurer celui-ci pour que l'application ne red√©marre pas √† chaque fois que vous cr√©ez une nouvelle pizza.",l.createElement(n.br),"\n","N'h√©sitez pas √† tester la cr√©ation d'une pizza avant de dire √† ",l.createElement(n.strong,null,"nodemon")," d'ignorer les fichiers se trouvant dans ",l.createElement(n.strong,null,"/data"),"."),"\n",l.createElement(n.h2,null,l.createElement("a",{id:"b3"})," b.3) Debugging"),"\n",l.createElement(n.h3,null,"b.3.1) Introduction"),"\n",l.createElement(n.p,null,"Est-ce que nous pouvons utiliser VS Code pour d√©bugger notre API ?",l.createElement(n.br),"\n","Oui, heureusement, car le debugger est probablement le meilleur ami des d√©veloppeurs."),"\n",l.createElement(n.p,null,"Il est toujours l√† pour aider, √† l'√©coute de nos investigations, mettant r√©guli√®rement en lumi√®re des pistes de sortie de probl√®mes, tout cela de mani√®re bienveillante, sans jamais nous brusquer üòÅ."),"\n",l.createElement(n.p,null,l.createElement(n.a,{href:"https://code.visualstudio.com/docs/editor/debugging"},"Debugging via VS Code")," ",l.createElement(n.a,{href:"/js2/references/#r59"},"[R.59]")," fournit le d√©tails de comment d√©bugger sous VS Code. Nous vous offrons par la suite une fa√ßon pratique de rapidement d√©bugger."),"\n",l.createElement(n.h3,null,"b.3.2) Debugging sans configuration"),"\n",l.createElement(n.p,null,"Sans aucune configuration, il est possible de d√©bugger une application ",l.createElement(n.strong,null,"Node.js"),"."),"\n",l.createElement(n.p,null,"Il suffit d'ouvrir le script d'entr√©e de votre application dans VS Code. Pour une application Express, le script d'entr√©e est ",l.createElement(n.strong,null,"/bin/www"),". Cliquez dans l'Explorer de VS Code sur ",l.createElement(n.strong,null,"/bin/www")," de votre tutoriel ",l.createElement(n.strong,null,"api-persistence"),". Une fois le script ",l.createElement(n.strong,null,"/bin/www")," ouvert, il ne reste plus qu'√† ex√©cuter le ",l.createElement(n.strong,null,"Debug"),".",l.createElement(n.br),"\n","Pour ce faire :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"soit vous cliquez sur l'ic√¥ne \"",l.createElement(n.strong,null,"Run and Debug"),'" √† gauche de l\'Explorer, puis sur le bouton "',l.createElement(n.strong,null,"Run and Debug"),'";'),"\n",l.createElement(n.li,null,'soit vous cliquez sur "',l.createElement(n.strong,null,"Run"),'" puis sur "',l.createElement(n.strong,null,"Start Debugging"),'";'),"\n",l.createElement(n.li,null,'soit vous cliquez sur "',l.createElement(n.strong,null,"F5"),'",'),"\n",l.createElement(n.li,null,"Il est probable que la premi√®re fois que vous lancez le ",l.createElement(n.strong,null,"Debug"),", vous devrez s√©lectionner ",l.createElement(n.strong,null,"Node.js"),'   (il sera indiqu√© : "',l.createElement(n.strong,null,"Select debugger"),'") comme debugger dans une liste.'),"\n"),"\n",l.createElement(n.p,null,"En r√©sum√©, une fois le debugger lanc√©, il suffit d'ajouter des breakpoints dans le code source et d'ex√©cuter le code pas √† pas."),"\n",l.createElement(n.p,null,"N'h√©sitez pas √† ex√©cuter pas √† pas une op√©ration de votre api, comme la cr√©ation d'une pizza par exemple."),"\n",l.createElement(n.h3,null,"b.3.3) Debugging avec une bonne configuration"),"\n",l.createElement(n.p,null,"Trouver une configuration qui permet de bien d√©bugger n'est pas si ais√©. Nous allons donc voir ensemble comment mettre en place une configuration des plus utiles dans le cadre de ce cours."),"\n",l.createElement(n.p,null,"Premi√®rement, il est important que quand on lance le debugger, on puisse b√©n√©ficier de ",l.createElement(n.strong,null,"nodemon")," et des red√©marrages automatiques en cas de changement de code.",l.createElement(n.br),"\n","Pour ce faire, veuillez mettre √† jour le fichier ",l.createElement(n.strong,null,"packages.json")," pour rajouter un script de d√©marrage :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-json"},'"scripts":¬†{\r\n¬†¬†¬†¬†"debug":¬†"nodemon¬†./bin/www",\r\n¬†¬†¬†¬†"dev":¬†"nodemon¬†./bin/www",\r\n¬†¬†¬†¬†"start":¬†"node¬†./bin/www"\r\n¬†¬†},\n')),"\n",l.createElement(n.p,null,"Nous allons maintenant cr√©er une configuration de debugging associ√©e √† notre repo ",l.createElement(n.strong,null,"web2")," :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"Cliquez sur l'ic√¥ne \"",l.createElement(n.strong,null,"Run and Debug"),'" √† gauche de l\'Explorer, puis sur le lien "',l.createElement(n.strong,null,"create launch.json file"),'" (',l.createElement(n.strong,null,".vscode/launch.json"),")."),"\n",l.createElement(n.li,null,'Quand il sera indiqu√© "',l.createElement(n.strong,null,"Select debugger"),'", s√©lectionnez ',l.createElement(n.strong,null,"Node.js"),".",l.createElement(n.br),"\n","NB : Peu importe le debugger que vous s√©lectionnez, car vous aller par la suite copier / coller la configuration propos√©e."),"\n",l.createElement(n.li,null,"Une fois le debugger ",l.createElement(n.strong,null,"Node.js")," choisi, VS Code cr√©e un r√©pertoire ",l.createElement(n.strong,null,".vscode")," √† la racine du folder ouvert au sein de VS Code (normalement vous devriez avoir ouvert votre repo local ",l.createElement(n.strong,null,"web2"),") contenant un fichier ",l.createElement(n.strong,null,"launch.json")," et une configuration initiale. Veuillez remplacer le contenu de ce fichier (",l.createElement(n.strong,null,".vscode/launch.json"),") par celui-ci :"),"\n"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-json"},'{\r\n  // Use IntelliSense to learn about possible attributes.\r\n  // Hover to view descriptions of existing attributes.\r\n  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\r\n  "version": "0.2.0",\r\n  "configurations": [\r\n    {\r\n      "name": "Launch via NPM",\r\n      "request": "launch",\r\n      "runtimeArgs": ["run-script", "debug"],\r\n      "runtimeExecutable": "npm",\r\n      "skipFiles": ["<node_internals>/**"],\r\n      "type": "pwa-node",\r\n      "cwd": "${fileDirname}"\r\n    }\r\n  ]\r\n}\n')),"\n",l.createElement(n.p,null,l.createElement(n.strong,null,"runtimeArgs")," permet de s√©lectionner le script √† lancer par le debugger, √† savoir ici : ",l.createElement(n.strong,null,"debug"),".",l.createElement(n.br),"\n","Ainsi, quand on lancera le debugger, celui-ci lancera le programme avec l'√©quivalent de la commande ",l.createElement(n.strong,null,l.createElement(n.code,null,"npm run debug")),"."),"\n",l.createElement(n.p,null,l.createElement(n.strong,null,l.createElement(n.code,null,'"cwd":"${fileDirname}"'))," : ",l.createElement(n.strong,null,"cwd")," permet d'indiquer le chemin vers la racine du programme √† d√©bugger. La variable ",l.createElement(n.strong,null,"fileDirname")," permet de s√©lectionner le programme √† d√©bugger sur base du fichier ouvert et actif dans VS Code."),"\n",l.createElement(n.p,null,"Si vous avez plusieurs applications au sein d'un folder de VS Code, pour d√©bugger une application en particulier, nous vous conseillons cette approche :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"Ouvrez le fichier ",l.createElement(n.strong,null,"package.json")," de l'application √† d√©bugger ;"),"\n",l.createElement(n.li,null,"Cliquez sur l'ic√¥ne ",l.createElement(n.strong,null,"Run and Debug")," √† gauche de l'Explorer, puis cliquez sur ",l.createElement(n.strong,null,"Start Debugging")," (ou cliquez juste sur ",l.createElement(n.strong,null,"F5"),") en v√©rifiant que la configuration de debugging s√©lectionn√©e est bien nomm√©e ",l.createElement(n.strong,null,"Launch via NPM"),"."),"\n"),"\n",l.createElement(n.p,null,"Nottons que le nom de la configuration de debugging peut facilement √™tre modifi√©e en changeant la valeur de l'attribut ",l.createElement(n.strong,null,"name")," dans ",l.createElement(n.strong,null,"/.vscode/launch.json"),"."),"\n",l.createElement(n.p,null,"Veuillez tester cette configuration de debugging au sein de votre repo local ",l.createElement(n.strong,null,"web2"),".",l.createElement(n.br),"\n","Vous pourriez par exemple observer pas √† pas une op√©ration de suppression d'une pizza, afin de voir √† quel moment le contenu de l'array ",l.createElement(n.strong,null,"pizzas")," est mis √† jour, ainsi que le fichier ",l.createElement(n.strong,null,"/data/pizzas.json"),"."),"\n",l.createElement(n.p,null,"Si tout fonctionne bien, faites un ",l.createElement(n.strong,null,"commit")," de votre repo (",l.createElement(n.strong,null,"web2"),') avec le message "',l.createElement(n.strong,null,"api-persistence"),'".'),"\n",l.createElement(n.p,null,"En cas de souci, vous pouvez acc√©der au code du tutoriel ici :\r\n",l.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/persistence"},"api-persistence"),"."),"\n",l.createElement(n.h2,null,l.createElement("a",{id:"b4"})," b.4) Autres outils de d√©veloppement"),"\n",l.createElement(n.p,null,"Il serait utile de b√©n√©ficier :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,'d\'un linter : celui-ci devrait imposer un "style guide" qui est √©quivalent √† notre style de programmation pour les IHM.'),"\n",l.createElement(n.li,null,"d'un formater : celui-ci devrait automatiquement permettre d'am√©liorer le style de notre code pour se rapprocher de ce qui est impos√© par le linter."),"\n"),"\n",l.createElement(n.p,null,"Un boilerplate a √©t√© cr√©√© afin de mettre en place ces outils :\r\n",l.createElement(n.a,{href:"https://github.com/e-vinci/basic-api-boilerplate"},"basic-api-boilerplate")),"\n",l.createElement(n.p,null,"Vous ne devez pas savoir comment cr√©er et configurer un tel boilerplate.",l.createElement(n.br),"\n","N√©anmoins, pour les personnes tr√®s curieuses, la cr√©ation du boilerplate est expliqu√©e dans le ",l.createElement(n.strong,null,"README")," du boilerplate."),"\n",l.createElement(n.p,null,"Pour la suite du cours, nous n'utiliserons plus le g√©n√©rateur d'application Express, mais ce boilerplate."),"\n",l.createElement(n.p,null,"Il est important d'avoir install√© les extensions ",l.createElement(n.strong,null,"ESLint")," et ",l.createElement(n.strong,null,"prettier")," au sein de VS Code pour bien utiliser le boilerplate d'une API.",l.createElement(n.br),"\n","Vous l'avez normalement d√©j√† fait au module 2. Si non, veuillez suivre la proc√©dure donn√©e ici : ",l.createElement(n.a,{href:"/js2/modules/2/#a6"},"Module 2 : a.6) Installation des extensions pour le linter et le formater")),"\n",l.createElement(n.h1,null,l.createElement("a",{id:"c"})," c) Exercice 5.1 : Persistance de la RESTfull API pour myMovies"),"\n",l.createElement(n.p,null,"Vous allez faire un refactor de la RESTful API de ",l.createElement(n.strong,null,"myMovies"),", afin d'utiliser les outils de d√©veloppement modernes mis √† disposition dans un boilerplate et afin de rendre les donn√©es persistantes dans un fichier JSON."),"\n",l.createElement(n.p,null,"Afin de r√©aliser cet exercice, voici les contraintes d'impl√©mentation :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"Veuillez cr√©er un nouveau projet dans votre repository local et votre web repository (normalement appel√© ",l.createElement(n.strong,null,"web2"),") nomm√© ",l.createElement(n.strong,null,"/exercises/module5/5.1")," sur base du boilerplate : ",l.createElement(n.a,{href:"https://github.com/e-vinci/basic-api-boilerplate"},"basic-api-boilerplate"),"."),"\n",l.createElement(n.li,null,"Reprenez le code du router que vous avez d√©velopp√© √† l'exercice pr√©c√©dent (Exercice 4.1) et int√©grez le dans votre nouveau projet."),"\n",l.createElement(n.li,null,"Faites un refactor de votre API g√©rant les films afin que les ressources persistent au sein du fichier ",l.createElement(n.strong,null,"/data/films.json")," ou ",l.createElement(n.strong,null,"/data/movies.json"),"."),"\n",l.createElement(n.li,null,"Veuillez tester toutes les fonctions de la RESTful API pour la collection de films √† l'aide du REST Client en copiant les requ√™tes d√©velopp√©es pour l'Exercice 4.1 (fichier ",l.createElement(n.strong,null,"films.http")," du r√©pertoire ",l.createElement(n.strong,null,"REST Client"),"). Normalement, il n'y a pas de nouvelles requ√™tes √† √©crire, il suffit juste de les ex√©cuter."),"\n"),"\n",l.createElement(n.h4,null,"ü§ù Tips"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"‚ö° Si vous avez fait un clone du boilerplate, attention au Git dans le Git, n'oubliez pas de supprimer le dossier ",l.createElement(n.strong,null,".git")," pr√©sent dans votre nouveau projet."),"\n",l.createElement(n.li,null,"Vous pourriez simplement commencer en faisant un refactor de votre code sans g√©rer la persistance, simplement en utilisant le ",l.createElement(n.strong,null,"linter")," et ",l.createElement(n.strong,null,"formater"),".",l.createElement(n.br),"\n","Tant que nous n'installez pas les packages, le linter n'est pas activ√© dans VS Code. Il faut aussi fermer et r√©ouvrir les fichiers une fois les packages install√©s pour que les erreurs de style apparaissent dans VS Code.",l.createElement(n.br),"\n","Il est int√©ressant de corriger toutes les erreurs de style avant de s'attaquer √† la persistance."),"\n",l.createElement(n.li,null,"Vous avez un probl√®me du type \"no such file or directory\" ? N'h√©sitez pas √† cr√©er un chemin correct vers votre fichier JSON √† l'aide de la m√©thode ",l.createElement(n.code,null,"join")," de l'objet ",l.createElement(n.strong,null,"path")," :"),"\n"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"const path = require('node:path');\r\n\r\nconst jsonDbPath = path.join(__dirname, '/../data/films.json');\n")),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"Vous pourriez avoir besoin de convertir une string vers un entier, par exemple : ",l.createElement(n.code,null,"const id = parseInt(req.params.id, 10);"),"."),"\n"),"\n",l.createElement(n.p,null,"Le code de votre application web doit donc se trouver dans votre repository local et votre web repository (normalement appel√© ",l.createElement(n.strong,null,"web2"),") dans le r√©pertoire nomm√© ",l.createElement(n.strong,null,"/exercises/module5/5.1"),"."),"\n",l.createElement(n.p,null,"Veuillez faire un ",l.createElement(n.strong,null,"commit"),' de votre code avec le message suivant : "',l.createElement(n.strong,null,"myMovies : module 5 : persistent API"),'".'),"\n",l.createElement(n.h1,null,l.createElement("a",{id:"d"})," d) Refactoring √† l'aide d'un \"fat model\""),"\n",l.createElement(n.h2,null,l.createElement("a",{id:"d1"})," d.1) Architectures possibles ?"),"\n",l.createElement(n.p,null,"Si nous reprenons le code actuel du tutoriel de l'API g√©rant des pizzas (",l.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/persistence"},"api-persistence"),"), nous pouvons d√©tecter que celui-ci pourrait √™tre plus propre."),"\n",l.createElement(n.p,null,"Par exemple, le routeur de \"pizzas\" s'occupe tant de g√©rer les requ√™tes des clients que d'acc√©der directement aux donn√©es.",l.createElement(n.br),"\n","G√©n√©ralement, nous pr√©f√©rons s√©parer le code g√©rant les acc√®s aux donn√©es du code g√©rant la pr√©sentation du r√©sultat des op√©rations."),"\n",l.createElement(n.p,null,"On peut donc se demander comment s√©parer le code traitant de sujets diff√©rents, o√π ayant des responsabilit√©s fort diff√©rentes. Il existe une multitude d'architectures possibles, voici par exemple certains des plus grands noms :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"Architecture MVC (Model View Controller)")," ; au niveau backend, ce genre d'architecture est g√©n√©ralement tr√®s utile quand on fait des MPA (ou Multi-Page Applications) via du Server-Side Rendering. Les ",l.createElement(n.strong,null,"Views")," permettent de g√©n√©rer le frontend √† l'aide d'un moteur de templating ; le ",l.createElement(n.strong,null,"Controller")," s'occupe de traiter les requ√™tes en appelant le ",l.createElement(n.strong,null,"Model")," pour l'acc√®s aux op√©rations sur les donn√©es et en renvoyant les ",l.createElement(n.strong,null,"Views")," ad√©quates. Pour une API, cette architecture n'est pas la plus adapt√©e."),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,'Architecture classique "three-tiers"')," ; au nivau backend, quand on d√©veloppe une architecture trois tiers, cela signifie que l'on d√©coupe notre API en trois couches :","\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"couche de pr√©sentation")," : cette couche est responsable de pr√©senter les ressources aux clients et d'interpr√©ter les repr√©sentations des ressources donn√©es dans les requ√™tes ;"),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"couche business")," : cette couche s'occupe de toute la logique de l'API, elle fait l'interm√©diaire entre la couche de pr√©sentation et la couche de donn√©es ;"),"\n",l.createElement(n.li,null,l.createElement(n.strong,null,"couche de donn√©es")," : cette couche s'occupe des acc√®s aux donn√©es et permet notamment la persistance des ressources au sein de bases de donn√©es.",l.createElement(n.br),"\n","Le mod√®le trois tiers est fort int√©ressant, mais il demande un peu trop d'√©criture de codes sans grande valeur ajout√©e quand nous utilisons le framework Express."),"\n"),"\n"),"\n",l.createElement(n.li,null,"..."),"\n"),"\n",l.createElement(n.p,null,"Finalement, parmi les architectures classiques, il n'y a pas r√©ellement une architecture qui colle parfaitement √† ce qui est offert par le framework Express, sans devoir √©crire du code sans valeur ajout√©e."),"\n",l.createElement(n.p,null,'Ainsi, nous allons simplement cr√©er notre propre architecture "maison", sur base de ces points :'),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"On souhaite pouvoir facilement remplacer la couche d'acc√®s aux donn√©es sans changer la repr√©sentation des ressources ; en effet, dans un premier temps, nous sauvegarderons des donn√©es dans des fichiers JSON. Plus tard, si l'on venait √† sauvegarder les donn√©es dans un syst√®me de gestion de base de donn√©es, on ne veut pas devoir mettre √† jour le code prenant en compte les requ√™tes des clients et pr√©sentant la r√©ponse √† ces requ√™tes ; en gros, on souhaite que le code de nos routers, au sein d'Express, soit ind√©pendant de l'impl√©mentation des acc√®s aux donn√©es."),"\n",l.createElement(n.li,null,"Nous n'avons pas vraiment de contraintes pour l'aspect \"business\" de nos APIs : la logique de l'application peut soit s'associer √† la couche de donn√©es, soit √† la couche pr√©sentation. N√©anmoins, nous allons pr√©f√©rer associer un maximum de la logique de notre application √† ce que nous allons appeler un ",l.createElement(n.strong,null,"fat model"),". Le ",l.createElement(n.strong,null,"fat model")," contiendra toutes les op√©rations possibles sur les ressources, ainsi que les acc√®s aux donn√©es."),"\n",l.createElement(n.li,null,"Le ",l.createElement(n.strong,null,"fat model")," peut √™tre soit √©crit en orient√© objet, soit simplement √™tre un module fournissant des fonctions. Dans le cadre de ce cours, nous choisissons de pr√©senter un maximum de programmation fonctionnelle plut√¥t que de l'orient√© objet.",l.createElement(n.br),"\n","N√©anmoins, n'h√©sitez pas √† √©crire des classes si cela vous tient √† coeur üòâ."),"\n"),"\n",l.createElement(n.h2,null,l.createElement("a",{id:"d1"}),' d.2) Architecture Express & "fat model"'),"\n",l.createElement(n.p,null,"Voici l'architecture que nous allons appliquer dans nos prochaines API :"),"\n",l.createElement(t,{name:"architecture.png",minWidth:"859px",maxWidth:"859px"}),"\n",l.createElement("figcaption",null,"Architecture recommand√©e pour ce cours"),"\n",l.createElement(n.p,null,"Voici quelques explications sur ce diagramme que nous allons appliquer dans le prochain tutoriel :"),"\n",l.createElement(n.ol,null,"\n",l.createElement(n.li,null,"Un client fait la requ√™te √† l'API demandant de lire toutes les pizzas."),"\n",l.createElement(n.li,null,'Le router de "pizzas" prend le r√¥le de "Controller". Il s\'occupe de traiter de la requ√™te et d\'appeler une op√©ration du ',l.createElement(n.strong,null,"fat model")," pour acc√©der aux ressources."),"\n",l.createElement(n.li,null,"Le ",l.createElement(n.strong,null,"fat model")," s'occupe d'acc√©der aux donn√©es, qui se trouvent au sein d'un fichier JSON, et de les lire."),"\n",l.createElement(n.li,null,"Le ",l.createElement(n.strong,null,"fat model"),' retourne des donn√©es sous forme d\'un objet JS au router de "pizzas".'),"\n",l.createElement(n.li,null,'Le router de "pizzas" renvoient une repr√©sentation JSON de l\'objet JS, un array de pizzas, au client.'),"\n"),"\n",l.createElement(n.p,null,'Nous allons maintenant faire un refactor de notre API de gestion des pizzas en cr√©ant et utilisant un "fat model".'),"\n",l.createElement(n.p,null,"Au sein de votre repo ",l.createElement(n.strong,null,"web2"),", √† l'aide du boilerplate du cours ",l.createElement(n.a,{href:"https://github.com/e-vinci/basic-api-boilerplate"},"basic-api-boilerplate"),", veuillez cr√©er le projet nomm√© ",l.createElement(n.strong,null,"/web2/tutorials/pizzeria/api/fat-model"),"."),"\n",l.createElement(n.p,null,"Si vous ne voyez pas comment utiliser le boilerplate, tout est expliqu√© dans le ",l.createElement(n.strong,null,"README")," associ√© au repository du boilerplate.",l.createElement(n.br),"\n","N'h√©sitez pas √† le lire ; )"),"\n",l.createElement(n.p,null,"Pour la suite du tutoriel, nous consid√©rons que tous les chemins absolus d√©marrent du r√©pertoire\r\n",l.createElement(n.strong,null,"/web2/tutorials/pizzeria/api/fat-model"),"."),"\n",l.createElement(n.p,null,"Nous allons commencer par cr√©er le ",l.createElement(n.strong,null,"fat model")," offrant les op√©rations sur les pizzas.",l.createElement(n.br),"\n","Veuillez cr√©er le fichier ",l.createElement(n.strong,null,"/models/pizzas.js"),".",l.createElement(n.br),"\n",'Au sein de ce fichier, veuillez ajouter le code s\'occupant des op√©rations sur les ressources de type "pizzas" :'),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"const path = require('node:path');\r\nconst { parse, serialize } = require('../utils/json');\r\n\r\nconst jsonDbPath = path.join(__dirname, '/../data/pizzas.json');\r\n\r\nconst defaultPizzas = [\r\n  {\r\n    id: 1,\r\n    title: '4 fromages',\r\n    content: 'Gruy√®re, S√©rac, Appenzel, Gorgonzola, Tomates',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Vegan',\r\n    content: 'Tomates, Courgettes, Oignons, Aubergines, Poivrons',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Vegetarian',\r\n    content: 'Mozarella, Tomates, Oignons, Poivrons, Champignons, Olives',\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Alpage',\r\n    content: 'Gruy√®re, Mozarella, Lardons, Tomates',\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Diable',\r\n    content: 'Tomates, Mozarella, Chorizo piquant, Jalapenos',\r\n  },\r\n];\r\n\r\nfunction readAllPizzas(orderBy) {\r\n  const orderByTitle = orderBy?.includes('title') ? orderBy : undefined;\r\n  let orderedMenu;\r\n  const pizzas = parse(jsonDbPath, defaultPizzas);\r\n  if (orderByTitle)\r\n    orderedMenu = [...pizzas].sort((a, b) => a.title.localeCompare(b.title));\r\n  if (orderByTitle === '-title') orderedMenu = orderedMenu.reverse();\r\n\r\n  const allPizzasPotentiallyOrderd = orderedMenu ?? pizzas;\r\n  return allPizzasPotentiallyOrderd;\r\n}\r\n\r\nfunction readOnePizza(id) {\r\n  const idNumber = parseInt(id, 10);\r\n  const pizzas = parse(jsonDbPath, defaultPizzas);\r\n  const indexOfPizzaFound = pizzas.findIndex((pizza) => pizza.id === idNumber);\r\n  if (indexOfPizzaFound < 0) return undefined;\r\n\r\n  return pizzas[indexOfPizzaFound];\r\n}\r\n\r\nfunction createOnePizza(title, content) {\r\n  const pizzas = parse(jsonDbPath, defaultPizzas);\r\n\r\n  const createdPizza = {\r\n    id: getNextId(),\r\n    title,\r\n    content,\r\n  };\r\n\r\n  pizzas.push(createdPizza);\r\n\r\n  serialize(jsonDbPath, pizzas);\r\n\r\n  return createdPizza;\r\n}\r\n\r\nfunction getNextId() {\r\n  const pizzas = parse(jsonDbPath, defaultPizzas);\r\n  const lastItemIndex = pizzas?.length !== 0 ? pizzas.length - 1 : undefined;\r\n  if (lastItemIndex === undefined) return 1;\r\n  const lastId = pizzas[lastItemIndex]?.id;\r\n  const nextId = lastId + 1;\r\n  return nextId;\r\n}\r\n\r\nfunction deleteOnePizza(id) {\r\n  const idNumber = parseInt(id, 10);\r\n  const pizzas = parse(jsonDbPath, defaultPizzas);\r\n  const foundIndex = pizzas.findIndex((pizza) => pizza.id === idNumber);\r\n  if (foundIndex < 0) return undefined;\r\n  const deletedPizzas = pizzas.splice(foundIndex, 1);\r\n  const deletedPizza = deletedPizzas[0];\r\n  serialize(jsonDbPath, pizzas);\r\n\r\n  return deletedPizza;\r\n}\r\n\r\nfunction updateOnePizza(id, propertiesToUpdate) {\r\n  const idNumber = parseInt(id, 10);\r\n  const pizzas = parse(jsonDbPath, defaultPizzas);\r\n  const foundIndex = pizzas.findIndex((pizza) => pizza.id === idNumber);\r\n  if (foundIndex < 0) return undefined;\r\n\r\n  const updatedPizza = { ...pizzas[foundIndex], ...propertiesToUpdate };\r\n\r\n  pizzas[foundIndex] = updatedPizza;\r\n\r\n  serialize(jsonDbPath, pizzas);\r\n\r\n  return updatedPizza;\r\n}\r\n\r\nmodule.exports = {\r\n  readAllPizzas,\r\n  readOnePizza,\r\n  createOnePizza,\r\n  deleteOnePizza,\r\n  updateOnePizza,\r\n};\n")),"\n",l.createElement(n.p,null,"Maintenant, il ne reste plus qu'√† mettre √† jour le router ",l.createElement(n.strong,null,"/routes/pizzas.js")," afin de faire les appels aux fonctions offertes par le mod√®le :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-js"},"const express = require('express');\r\nconst {\r\n  readAllPizzas,\r\n  readOnePizza,\r\n  createOnePizza,\r\n  deleteOnePizza,\r\n  updateOnePizza,\r\n} = require('../models/pizzas');\r\n\r\nconst router = express.Router();\r\n\r\n/* Read all the pizzas from the menu\r\n   GET /pizzas?order=title : ascending order by title\r\n   GET /pizzas?order=-title : descending order by title\r\n*/\r\nrouter.get('/', (req, res) => {\r\n  const allPizzasPotentiallyOrdered = readAllPizzas(req?.query?.order);\r\n\r\n  return res.json(allPizzasPotentiallyOrdered);\r\n});\r\n\r\n// Read the pizza identified by an id in the menu\r\nrouter.get('/:id', (req, res) => {\r\n  const foundPizza = readOnePizza(req.params.id);\r\n\r\n  if (!foundPizza) return res.sendStatus(404);\r\n\r\n  return res.json(foundPizza);\r\n});\r\n\r\n// Create a pizza to be added to the menu.\r\nrouter.post('/', (req, res) => {\r\n  const title = req?.body?.title?.length !== 0 ? req.body.title : undefined;\r\n  const content =\r\n    req?.body?.content?.length !== 0 ? req.body.content : undefined;\r\n\r\n  if (!title || !content) return res.sendStatus(400); // error code '400 Bad request'\r\n\r\n  const createdPizza = createOnePizza(title, content);\r\n\r\n  return res.json(createdPizza);\r\n});\r\n\r\n// Delete a pizza from the menu based on its id\r\nrouter.delete('/:id', (req, res) => {\r\n  const deletedPizza = deleteOnePizza(req.params.id);\r\n\r\n  if (!deletedPizza) return res.sendStatus(404);\r\n\r\n  return res.json(deletedPizza);\r\n});\r\n\r\n// Update a pizza based on its id and new values for its parameters\r\nrouter.patch('/:id', (req, res) => {\r\n  const title = req?.body?.title;\r\n  const content = req?.body?.content;\r\n\r\n  if ((!title && !content) || title?.length === 0 || content?.length === 0) {\r\n    return res.sendStatus(400);\r\n  }\r\n\r\n  const updatedPizza = updateOnePizza(req.params.id, { title, content });\r\n\r\n  if (!updatedPizza) return res.sendStatus(404);\r\n\r\n  return res.json(updatedPizza);\r\n});\r\n\r\nmodule.exports = router;\n")),"\n",l.createElement(n.p,null,"Lancer votre API soit via le debugger, soit via la commande ",l.createElement(n.strong,null,l.createElement(n.code,null,"npm run dev")),".",l.createElement(n.br),"\n","Veuillez ensuite tester que tout fonctionne bien en ex√©cutant les requ√™tes HTTP d√©j√† pr√©sentes dans le r√©pertoire ",l.createElement(n.strong,null,"REST Client")," du boilerplate."),"\n",l.createElement(n.p,null,"Si tout fonctionne bien, faites un ",l.createElement(n.strong,null,"commit")," de votre repo (",l.createElement(n.strong,null,"web2"),') avec le message "',l.createElement(n.strong,null,"fat-model"),'".'),"\n",l.createElement(n.p,null,"En cas de souci, vous pouvez acc√©der au code du tutoriel ici :\r\n",l.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/fat-model"},"fat-model"),"."),"\n",l.createElement(n.h1,null,l.createElement("a",{id:"e"})," e) Exercice 5.2 : Refactoring de la RESTfull API pour myMovies"),"\n",l.createElement(n.p,null,"Vous allez faire un nouveau refactor de la RESTful API de ",l.createElement(n.strong,null,"myMovies"),", afin de restructurer l'architecture de l'application selon l'architecture recommand√©e, en utilisant un \"fat model\" pour g√©rer les op√©rations sur les films."),"\n",l.createElement(n.p,null,"Afin de r√©aliser cet exercice, voici les contraintes d'impl√©mentation :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"Veuillez cr√©er un nouveau projet dans votre repository local et votre web repository (normalement appel√© ",l.createElement(n.strong,null,"web2"),") nomm√© ",l.createElement(n.strong,null,"/exercises/module5/5.2")," sur base d'une copie de votre Exercice 5.1 ou sur base du boilerplate : ",l.createElement(n.a,{href:"https://github.com/e-vinci/basic-api-boilerplate"},"basic-api-boilerplate"),"."),"\n",l.createElement(n.li,null,"Faites un refactor de votre API g√©rant les films afin que tout ce qui traite des op√©rations sur les ressources soit fait au sein du mod√®le ",l.createElement(n.strong,null,"/models/films.json")," ou ",l.createElement(n.strong,null,"/models/movies.json"),"."),"\n",l.createElement(n.li,null,"Veuillez tester toutes les fonctions de la RESTful API pour la collection de films √† l'aide du REST Client en copiant les requ√™tes d√©velopp√©es pour l'Exercice 4.1 (fichier ",l.createElement(n.strong,null,"films.http")," du r√©pertoire ",l.createElement(n.strong,null,"REST Client"),"). Normalement, il n'y a pas de nouvelles requ√™tes √† √©crire, il suffit juste de les ex√©cuter."),"\n"),"\n",l.createElement(n.p,null,"Le code de votre application web doit donc se trouver dans votre repository local et votre web repository (normalement appel√© ",l.createElement(n.strong,null,"web2"),") dans le r√©pertoire nomm√© ",l.createElement(n.strong,null,"/exercises/module5/5.2"),"."),"\n",l.createElement(n.p,null,"Veuillez faire un ",l.createElement(n.strong,null,"commit"),' de votre code avec le message suivant : "',l.createElement(n.strong,null,"myMovies : module 5 : API with fat-model"),'".'))}var s=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?l.createElement(n,e,l.createElement(a,e)):a(e)};var o=t(4854),i=t(1263),u=t(5679),c=t(307),d=t(7410),m=t(9523),p=t(8075),E=t(9063),g=t(1631),f=t(6896),z=t(2770),b=t(7008),h=t(9771),v=t(1218),j=(t(5258),t(9394)),q=t(4579),P=t(9653),S=t(9256),y=t(6488),x=t(5175),I=t(158),N=t(6044);const O={Link:o.Link,Image:u.Z,Section:c.Z,Content:d.Z,Background:m.Z,SectionHeader:p.Z,SectionFooter:E.Z,PageHeader:g.Z,CodeBlock:z.Z,LinkFile:b.Z,ScrollableImage:h.Z,PublicProjectsView:v.Z,AuthenticatedBlock:j.Z,UnAuthenticatedBlock:q.Z,NestedMdxBlock:P.Z,YoutubeImage:S.Z,InternalPageMenu:y.Z,InternalPageMenuItem:x.Z,InternalPageTitle:I.Z,PathViewer:N.k,PathViewerItem:N.F};function A(e){var n,t,a,s,o;let{data:{mdx:u,allImages:c},children:d}=e;return O.PageHeader=(0,f.u)(g.Z,null==u?void 0:u.frontmatter),l.createElement(i.Z,Object.assign({},null!=u&&u.frontmatter?{frontmatter:u.frontmatter}:{},null!=u&&null!==(n=u.frontmatter)&&void 0!==n&&n.navbarExtraStyles?{navbarExtraStyles:u.frontmatter.navbarExtraStyles}:{},null!=u&&null!==(t=u.frontmatter)&&void 0!==t&&t.headerImage?{headerImage:u.frontmatter.headerImage}:{},null!=u&&null!==(a=u.frontmatter)&&void 0!==a&&a.featuredImage?{featuredImage:u.frontmatter.featuredImage}:{},null!=u&&null!==(s=u.frontmatter)&&void 0!==s&&s.title?{pageTitle:u.frontmatter.title}:{},c&&c.length>0?{allImages:c}:{}),l.createElement(r.Zo,{components:O},l.createElement("div",{className:null!=u&&null!==(o=u.frontmatter)&&void 0!==o&&o.autoMargin?"page page--auto-margin":"page"},d)))}function w(e){return l.createElement(A,e,l.createElement(s,e))}}}]);
//# sourceMappingURL=component---src-templates-mdx-pages-js-content-file-path-src-mdx-pages-modules-5-fr-mdx-6f73cca2bfc9d83a9eda.js.map