{"version":3,"file":"component---src-pages-project-page-js-600d4bb5881ff48e9ce7.js","mappings":"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","sources":["webpack://myjscourse/./src/components/content-editable/content-editable.js","webpack://myjscourse/./src/components/context/projects/project-data-context.js","webpack://myjscourse/./src/components/file/link-file.js","webpack://myjscourse/./src/components/spinner/spinner.js","webpack://myjscourse/./src/components/projects/project-card.js","webpack://myjscourse/./src/components/projects/projects-view.js","webpack://myjscourse/./src/components/projects/project-management.js","webpack://myjscourse/./src/pages/project-page.js","webpack://myjscourse/./src/utils/api/fetch.js","webpack://myjscourse/./src/utils/auths/use-id-token.js","webpack://myjscourse/./src/utils/string/string.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport he from 'he';\r\n\r\n/**\r\n * Make a div editable with text (could also be some HTML if needed).\r\n * @param {startContent} String to be used when the content is being updated\r\n * @param {children} React elements to be used when the content is not being updated\r\n * @returns\r\n */\r\n\r\nconst ContentEditable = ({\r\n  className,\r\n  isBeingEdited,\r\n  onChange,\r\n  startContent,\r\n  id,\r\n  isInline,\r\n  children,\r\n}) => {\r\n  //const [content, setContent] = useState(startContent);\r\n\r\n  const handleChange = (e) => {\r\n    const propUpdated = {};\r\n    propUpdated[id] = e.currentTarget.textContent;\r\n    // set state at parent level\r\n    onChange(propUpdated);\r\n  };\r\n\r\n  let currentContent;\r\n  if (isBeingEdited)\r\n    currentContent = startContent\r\n      ? he.decode(startContent)\r\n      : ''; \r\n  else if (children) currentContent = children;\r\n  else if (startContent)\r\n    currentContent = startContent ? he.decode(startContent) : '';\r\n\r\n  let allClasses;\r\n  allClasses = className ? className : '';\r\n  if (isBeingEdited)\r\n    allClasses += ' index__card__content__description--is-being-edited';\r\n  if (isInline) allClasses += ' index__card__content__description--is-inline';\r\n\r\n  return (\r\n    <div\r\n      className={allClasses}\r\n      contentEditable={isBeingEdited ? true : false}\r\n      onInput={handleChange}\r\n      suppressContentEditableWarning={true}\r\n    >\r\n      {currentContent}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContentEditable;\r\n","import React, { useContext, useState } from 'react';\r\nimport callAPI from '../../../utils/api/fetch';\r\nimport { useMsal } from '@azure/msal-react';\r\nimport { getAsyncIdToken } from '../../../utils/auths/use-id-token';\r\n\r\nconst ProjectDataContext = React.createContext([\r\n  {},\r\n  () => {},\r\n  {},\r\n  () => {},\r\n  {},\r\n  () => {},\r\n  {},\r\n  () => {},\r\n]);\r\n\r\nconst ProjectDataProvider = ({ children }) => {\r\n  const [projectGroupData, setProjectGroupData] = useState(undefined);\r\n  const [userData, setUserData] = useState(undefined);\r\n  const [projectData, setProjectData] = useState(undefined);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  return (\r\n    <ProjectDataContext.Provider\r\n      value={[\r\n        projectGroupData,\r\n        setProjectGroupData,\r\n        userData,\r\n        setUserData,\r\n        projectData,\r\n        setProjectData,\r\n        isLoaded,\r\n        setIsLoaded,\r\n      ]}\r\n    >\r\n      {children}\r\n    </ProjectDataContext.Provider>\r\n  );\r\n};\r\n\r\nconst useProjectData = () => {\r\n  const { instance, accounts } = useMsal();\r\n\r\n  const [\r\n    projectGroupData,\r\n    setProjectGroupData,\r\n    userData,\r\n    setUserData,\r\n    projectData,\r\n    setProjectData,\r\n    isLoaded,\r\n    setIsLoaded,\r\n  ] = useContext(ProjectDataContext);\r\n\r\n  const updateProjectGroupData = async (associatedProjectGroupName) => {\r\n    try {\r\n      const idToken = await getAsyncIdToken(accounts, instance);\r\n      const tempProjectGroup = await callAPI(\r\n        `projectgroups/${associatedProjectGroupName}`,\r\n        'get',\r\n        idToken,\r\n        undefined\r\n      );\r\n      setProjectGroupData(tempProjectGroup);\r\n      console.log('STATE NOW ????', tempProjectGroup);\r\n      return tempProjectGroup;\r\n    } catch (err) {\r\n      console.error('useProjectData:error:', err);\r\n    }\r\n  };\r\n\r\n  const updateUserData = async (associatedProjectGroupName) => {\r\n    try {\r\n      const idToken = await getAsyncIdToken(accounts, instance);\r\n      const tempUser = await callAPI(\r\n        `users/role/?projectgroupname=${associatedProjectGroupName}`,\r\n        'get',\r\n        idToken,\r\n        undefined\r\n      );\r\n      setUserData(tempUser);\r\n      return tempUser;\r\n    } catch (err) {\r\n      console.error('useProjectData:updateUserData:error:', err);\r\n    }\r\n  };\r\n\r\n  const updateProjectData = async (projectGroupName) => {\r\n    try {\r\n      const idToken = await getAsyncIdToken(accounts, instance);\r\n      setIsLoaded(false);\r\n      let tempProject = await callAPI(\r\n        'projects/projectgroups/' + projectGroupName,\r\n        'get',\r\n        idToken,\r\n        undefined\r\n      );\r\n      setProjectData(tempProject);\r\n      console.log('project array updated', tempProject);\r\n      setIsLoaded(true);\r\n      return tempProject;\r\n    } catch (err) {\r\n      console.error('useProjectData:updateProjectDataerror:', err);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Add one project to an existing projectGroupName !\r\n   * @param {*} projectGroupName\r\n   */\r\n  const addOneProject = async (projectGroupName) => {\r\n    try {\r\n      const idToken = await getAsyncIdToken(accounts, instance);\r\n      const newProject = await callAPI('projects', 'post', idToken, {\r\n        projectGroupName,\r\n      });\r\n      //return await updateProjectData(projectGroupName);\r\n      return newProject;\r\n    } catch (err) {\r\n      console.error('useProjectData:addOneProject:error:', err);\r\n    }\r\n  };\r\n\r\n  const deleteOneProject = async (project) => {\r\n    try {\r\n      const idToken = await getAsyncIdToken(accounts, instance);\r\n      const deletedProject = await callAPI(\r\n        'projects/' + project._id,\r\n        'DELETE',\r\n        idToken,\r\n        undefined\r\n      );\r\n      //return await updateProjectData(projectGroupName);\r\n      return deletedProject;\r\n    } catch (err) {\r\n      console.error('useProjectData:deleteOneProject:error:', err);\r\n    }\r\n  };\r\n\r\n  const addMemberToProject = async (project) => {\r\n    try {\r\n      const idToken = await getAsyncIdToken(accounts, instance);\r\n      const projectUpdated = await callAPI(\r\n        'projects/' + project._id + '/member',\r\n        'POST',\r\n        idToken,\r\n        undefined\r\n      );\r\n\r\n      return projectUpdated;\r\n    } catch (err) {\r\n      console.error('useProjectData:addMemberToProject:error:', err);\r\n    }\r\n  };\r\n\r\n  const deleteMemberFromProject = async (project) => {\r\n    try {\r\n      const idToken = await getAsyncIdToken(accounts, instance);\r\n      const projectUpdated = await callAPI(\r\n        'projects/' + project._id + '/member',\r\n        'DELETE',\r\n        idToken,\r\n        undefined\r\n      );\r\n\r\n      return projectUpdated;\r\n    } catch (err) {\r\n      console.error('useProjectData:deleteMemberFromProject:error:', err);\r\n    }\r\n  };\r\n\r\n  const updateProject = async (data, id) => {\r\n    console.log('project to be updated:', data);\r\n    try {\r\n      const idToken = await getAsyncIdToken(accounts, instance);\r\n      const projectUpdated = await callAPI(\r\n        'projects/' + id,\r\n        'PATCH',\r\n        idToken,\r\n        data\r\n      );\r\n\r\n      console.log('project updated:', projectUpdated);\r\n      return projectUpdated;\r\n    } catch (err) {\r\n      console.error('useProjectData:updateProject:error:', err);\r\n    }\r\n  };\r\n\r\n  return {\r\n    ...{\r\n      projectGroupData,\r\n      updateProjectGroupData,\r\n      userData,\r\n      updateUserData,\r\n      projectData,\r\n      updateProjectData,\r\n      addOneProject,\r\n      deleteOneProject,\r\n      addMemberToProject,\r\n      deleteMemberFromProject,\r\n      updateProject,\r\n      isLoaded,\r\n      setIsLoaded,\r\n    },\r\n  };\r\n};\r\n\r\nexport { ProjectDataProvider, useProjectData };\r\n","import React from \"react\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\nimport { GatsbyImage, StaticImage } from \"gatsby-plugin-image\";\r\n\r\n/**\r\n * Based on a name of a file (WARNING : there cannot be duplicates), provide a link to this file\r\n *\r\n * It is also possible to provide as name the source of an external file that shall contain\r\n * http:// or https:// to get an external link.\r\n * @param {*} param0\r\n * @returns\r\n */\r\nconst LinkFile = ({ children, name, ...other }) => {\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      allFile {\r\n        edges {\r\n          node {\r\n            relativePath\r\n            publicURL\r\n            base\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  if (\r\n    (name && name.toLowerCase().includes(\"http://\")) ||\r\n    (name && name.toLowerCase().includes(\"https://\"))\r\n  )\r\n    return (\r\n      <a href={name} {...other}>\r\n        {children}\r\n      </a>\r\n    );\r\n\r\n  const requiredFile = data.allFile.edges.find(\r\n    (file) => file.node.base === name\r\n  );\r\n  if (!requiredFile) {\r\n    return (\r\n      <div>\r\n        <h3 style={{ color: \"red\" }}>The file {name} does not exist !</h3>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <a href={requiredFile.node.publicURL} {...other}>\r\n      {children}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default LinkFile;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { fas, faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div className=\"spinner__overlay\"></div>\r\n      <div className=\"spinner__animation\">\r\n        <FontAwesomeIcon icon={faSpinner} className=\"fa-3x fa-spin\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useStaticQuery } from \"gatsby\";\r\nimport YoutubeImage from \"../image/youtube-image.js\";\r\nimport he from \"he\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faEdit,\r\n  faTrashAlt,\r\n  faUserPlus,\r\n  faUserTimes,\r\n  faSave,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { getNamesFromEmail } from \"../../utils/string/string\";\r\nimport { useProjectData } from \"../context/projects/project-data-context\";\r\nimport ContentEditable from \"../content-editable/content-editable.js\";\r\n\r\nconst ProjectCard = ({ project, setFilteredContents }) => {\r\n  const [isBeingEdited, setIsBeingEdited] = useState(false);\r\n  const [isPublic, setIsPublic] = useState(project.isPublic);\r\n  const [projectUpdateState, setProjectUpdateState] = useState({});\r\n  // Get state management functions from the provider\r\n  const {\r\n    deleteOneProject,\r\n    updateProjectData,\r\n    addMemberToProject,\r\n    deleteMemberFromProject,\r\n    updateProject,\r\n    userData,\r\n    projectGroupData,\r\n    projectData,\r\n  } = useProjectData();\r\n  // Deal with events\r\n  const onProjectDelete = async () => {\r\n    //console.log(\"projectId: endpoint:\", \"DELETE /api/projects/\" + projectId);\r\n    await deleteOneProject(project);\r\n    await updateProjectData(project.projectGroupName);\r\n    setFilteredContents(undefined);\r\n  };\r\n\r\n  const onAddMemberToProject = async () => {\r\n    const updatedProject = await addMemberToProject(project);\r\n    console.log(\"onAddMemberToProject:\", updatedProject);\r\n    if (updateProjectData) {\r\n      await updateProjectData(project.projectGroupName);\r\n      setFilteredContents(undefined);\r\n    }\r\n  };\r\n\r\n  const onDeleteMemberFromProject = async () => {\r\n    const updatedProject = await deleteMemberFromProject(project);\r\n    console.log(\"onDeleteMemberFromProject:\", updatedProject);\r\n    if (updateProjectData) {\r\n      await updateProjectData(project.projectGroupName);\r\n      setFilteredContents(undefined);\r\n    }\r\n  };\r\n\r\n  const onProjectUpdateRequest = () => {\r\n    setIsBeingEdited(true);\r\n  };\r\n\r\n  const onQuitProjectUpdateRequest = () => {\r\n    setIsBeingEdited(false);\r\n    // clear the update state\r\n    setProjectUpdateState({});\r\n  };\r\n\r\n  const onProjectSave = async () => {\r\n    // save the updated state via the API\r\n    if (projectUpdateState) {\r\n      const updatedProject = await updateProject(\r\n        projectUpdateState,\r\n        project._id\r\n      );\r\n      // clear the project update state\r\n      setProjectUpdateState({});\r\n      setIsBeingEdited(false);\r\n      // re-render all projects\r\n      if (updatedProject) {\r\n        await updateProjectData(project.projectGroupName);\r\n        setFilteredContents(undefined);\r\n      }\r\n    }\r\n  };\r\n\r\n  // deal with modification of content\r\n  const handleChange = (propChanged) => {\r\n    // update the projectState\r\n    setProjectUpdateState((previousState) => {\r\n      return { ...previousState, ...propChanged };\r\n    });\r\n  };\r\n\r\n  const onSetPublic = (e) => {\r\n    setIsPublic(!isPublic);\r\n    setProjectUpdateState({\r\n      ...projectUpdateState,\r\n      ...{ isPublic: !isPublic },\r\n    });\r\n  };\r\n\r\n  console.log(\"projStateUpdated:\", projectUpdateState);\r\n\r\n  if (!project) return null;\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"index__card\" + (isBeingEdited ? \" index__card--is-being-edited\" : \"\")\r\n      }\r\n      key={project.shortId}\r\n      id={project.shortId}\r\n    >\r\n      <div className=\"index__card__header\">\r\n        <span>{\"Projet N° \" + project.shortId + \" : \"}</span>\r\n        <ContentEditable\r\n          isBeingEdited={isBeingEdited}\r\n          id=\"name\"\r\n          onChange={handleChange}\r\n          startContent={project.name}\r\n          isInline\r\n        />\r\n      </div>\r\n\r\n      <div className=\"index__card__description\">\r\n        {\r\n          /* DELETE icon only if user isAdmin (admin or manager) */\r\n          userData.isAdmin && (\r\n            <FontAwesomeIcon icon={faTrashAlt} onClick={onProjectDelete} />\r\n          )\r\n        }\r\n\r\n        {\r\n          /* UPDATE PROJECT : visible only if \r\n          (user is Admin (admin or manager) OR\r\n          user is a member of this project AND \r\n          project group status is not \"end\" ) AND\r\n          project is not being edited\r\n          */\r\n          (userData.isAdmin ||\r\n            (project.projectMembers.includes(userData.userName) &&\r\n              projectGroupData.status !== \"end\")) &&\r\n          !isBeingEdited ? (\r\n            <FontAwesomeIcon icon={faEdit} onClick={onProjectUpdateRequest} />\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n\r\n        {\r\n          /* ADD MEMBER TO PROJECT : Visible only if :\r\n        project group status is \"init\" AND\r\n        userName has not already joined a project AND\r\n        number of members is < maximum number */\r\n          projectGroupData.status === \"init\" &&\r\n            !projectData.find((project) =>\r\n              project.projectMembers.includes(userData.userName)\r\n            ) &&\r\n            project.projectMembers.length <\r\n              projectGroupData.maximumProjectMembers && (\r\n              <FontAwesomeIcon\r\n                icon={faUserPlus}\r\n                onClick={onAddMemberToProject}\r\n              />\r\n            )\r\n        }\r\n        {\r\n          /*REMOVE MEMBER FROM PROJECT : Visible only if :\r\n        project group status is \"init\" AND\r\n        userName is already a member of this project\r\n        */\r\n          projectGroupData.status === \"init\" &&\r\n            project.projectMembers.includes(userData.userName) && (\r\n              <FontAwesomeIcon\r\n                icon={faUserTimes}\r\n                onClick={onDeleteMemberFromProject}\r\n              />\r\n            )\r\n        }\r\n        {\r\n          /*SAVE PROJECT : Visible only if :\r\n        project is being edited       \r\n        */\r\n          isBeingEdited && (\r\n            <FontAwesomeIcon icon={faSave} onClick={onProjectSave} />\r\n          )\r\n        }\r\n\r\n        {\r\n          /*QUIT PROJECT UPDATE: Visible only if :\r\n        project is being edited       \r\n        */\r\n          isBeingEdited && (\r\n            <FontAwesomeIcon\r\n              icon={faTimes}\r\n              onClick={onQuitProjectUpdateRequest}\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n\r\n      <div className=\"index__card__content\">\r\n        {project.description !== undefined ? (\r\n          <>\r\n            <div className=\"index__card__content__title\">Description</div>\r\n            <ContentEditable\r\n              className=\"index__card__content__description\"\r\n              isBeingEdited={isBeingEdited}\r\n              id=\"description\"\r\n              startContent={project.description}\r\n              onChange={handleChange}\r\n            />\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"index__card__content\">\r\n        {project.presentationUrl !== undefined ? (\r\n          <>\r\n            <div className=\"index__card__content__title\">\r\n              Vidéo de présentation\r\n            </div>\r\n            <ContentEditable\r\n              className=\"index__card__content__description\"\r\n              isBeingEdited={isBeingEdited}\r\n              id=\"presentationUrl\"\r\n              startContent={project.presentationUrl}\r\n              onChange={handleChange}\r\n            >\r\n              <YoutubeImage src={project.presentationUrl} />\r\n            </ContentEditable>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"index__card__content\">\r\n        {project.frontendProductionUrl !== undefined ? (\r\n          <>\r\n            <div className=\"index__card__content__title\">URL du site</div>\r\n            <ContentEditable\r\n              className=\"index__card__content__description\"\r\n              isBeingEdited={isBeingEdited}\r\n              id=\"frontendProductionUrl\"\r\n              startContent={project.frontendProductionUrl}\r\n              onChange={handleChange}\r\n            >\r\n              <a href={project.frontendProductionUrl} target=\"_blank\">\r\n                {project.frontendProductionUrl}\r\n              </a>\r\n            </ContentEditable>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"index__card__content\">\r\n        {project.frontendRepo !== undefined ? (\r\n          <>\r\n            <div className=\"index__card__content__title\">Repo frontend</div>\r\n            <ContentEditable\r\n              className=\"index__card__content__description\"\r\n              isBeingEdited={isBeingEdited}\r\n              id=\"frontendRepo\"\r\n              startContent={project.frontendRepo}\r\n              onChange={handleChange}\r\n            >\r\n              <a href={project.frontendRepo} target=\"_blank\">\r\n                {project.frontendRepo}\r\n              </a>\r\n            </ContentEditable>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"index__card__content\">\r\n        {project.backendRepo !== undefined ? (\r\n          <>\r\n            <div className=\"index__card__content__title\">Repo backend</div>\r\n            <ContentEditable\r\n              className=\"index__card__content__description\"\r\n              isBeingEdited={isBeingEdited}\r\n              id=\"backendRepo\"\r\n              startContent={project.backendRepo}\r\n              onChange={handleChange}\r\n            >\r\n              <a href={project.backendRepo} target=\"_blank\">\r\n                {project.backendRepo}\r\n              </a>\r\n            </ContentEditable>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n\r\n      {/* Deal with project members */}\r\n      <div className=\"index__card__content\">\r\n        {project.projectMembers !== undefined &&\r\n        project.projectMembers.length > 0 ? (\r\n          <>\r\n            <div className=\"index__card__content__title\">Membres du projet</div>\r\n            <div className=\"index__card__content__description\">\r\n              {project.projectMembers\r\n                .map((member) => getNamesFromEmail(member))\r\n                .join(\", \")}\r\n            </div>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"index__card__content\">\r\n        {project.isPublic !== undefined ? (\r\n          <>\r\n            <div className=\"index__card__content__title\">Public ?</div>\r\n            <div className=\"index__card__content__description\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={isPublic}\r\n                disabled={isBeingEdited ? false : true}\r\n                onClick={onSetPublic}\r\n              />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React from \"react\";\r\nimport { Link, useStaticQuery } from \"gatsby\";\r\nimport YoutubeImage from \"../image/youtube-image.js\";\r\nimport ProjectCard from \"./project-card.js\";\r\nimport he from \"he\";\r\n\r\nconst ProjectsView = ({ projects , setFilteredContents}) => {\r\n  console.log(\"PROJECTSVIEW\", projects);\r\n  if (!projects || projects.length <= 0) return null;\r\n\r\n  return (\r\n    <>\r\n      {projects.map((project) => (\r\n        <ProjectCard {...{ project, setFilteredContents }} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectsView;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ProjectsView from './projects-view';\r\nimport Spinner from '../spinner/spinner';\r\n\r\nimport { useProjectData } from '../context/projects/project-data-context';\r\nimport LinkFile from '../file/link-file';\r\n\r\nconst ProjectManagement = ({ associatedProjectGroupName, projectDocument }) => {\r\n  // Get state from the provider\r\n  const {\r\n    projectGroupData,\r\n    updateProjectGroupData,\r\n    userData,\r\n    updateUserData,\r\n    isLoaded,\r\n    projectData,\r\n    addOneProject,\r\n    updateProjectData,\r\n  } = useProjectData();\r\n\r\n  const [filteredContents, setFilteredContents] = useState(undefined);\r\n  const [query, setQuery] = useState('');\r\n\r\n  console.log(\"projectDocument : \", projectDocument);\r\n\r\n  const handleInputChange = (e) => {\r\n    // Get project data from Context\r\n    //const { projectData } = useProjectData();\r\n\r\n    const inputText = e.target.value;\r\n    setQuery(e.target.value);\r\n\r\n    console.log('handleInputChange::ProjectData', projectData);\r\n    const filteredData = projectData.filter((content) => {\r\n      // destructure data from post frontmatter\r\n      const { shortId, name, description } = content;\r\n      return (\r\n        // standardize data with .toLowerCase()\r\n        // return true if the subject, skills...\r\n        // contains the query string\r\n        name.toLowerCase().includes(inputText.toLowerCase()) ||\r\n        description.toLowerCase().includes(inputText.toLowerCase()) ||\r\n        (inputText.length > 0 && parseInt(inputText) === shortId)\r\n      );\r\n    });\r\n\r\n    if (filteredData && filteredData.length > 0)\r\n      setFilteredContents(filteredData);\r\n    else setFilteredContents(undefined);\r\n  };\r\n\r\n  const onProjectAdd = async () => {\r\n    console.log('add and', projectGroupData._id);\r\n    await addOneProject(projectGroupData._id);\r\n    const newListOfProjects = await updateProjectData(projectGroupData._id);\r\n    setFilteredContents(undefined);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // get data from APIs\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      // Deal with project group data\r\n      const group = await updateProjectGroupData(associatedProjectGroupName);\r\n      // Deal with user role data {role:..., isAdmin:...}\r\n      const user = await updateUserData(associatedProjectGroupName);\r\n      // Deal with project data\r\n      const temp = await updateProjectData(group._id);\r\n    } catch (error) {\r\n      console.error('getData:error', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!isLoaded && <Spinner />}\r\n      {projectGroupData === undefined ? (\r\n        ''\r\n      ) : (\r\n        // deal with project view\r\n        <div className=\"pl-3 pt-3 pb-3 pr-3\">\r\n          <h3 className=\"\">Projets des groupes de {projectGroupData?._id}</h3>\r\n          {/* Deal with potential project document to print*/}\r\n          {projectDocument && (\r\n            <LinkFile name={projectDocument}>\r\n              Consignes & template du projet\r\n            </LinkFile>\r\n          )}\r\n          <div className=\"index\">\r\n            <input\r\n              type=\"text\"\r\n              aria-label=\"Search\"\r\n              placeholder=\"Filtrez les contenus...\"\r\n              onChange={handleInputChange}\r\n              className=\"index__search\"\r\n            />\r\n            {filteredContents && filteredContents.length > 0 ? (\r\n              <ProjectsView\r\n                projects={filteredContents}\r\n                setFilteredContents={setFilteredContents}\r\n              ></ProjectsView>\r\n            ) : (\r\n              <ProjectsView\r\n                projects={projectData}\r\n                setFilteredContents={setFilteredContents}\r\n              ></ProjectsView>\r\n            )}\r\n          </div>\r\n\r\n          {/* // deal with add a project button */}\r\n          {userData === undefined || !userData.isAdmin ? (\r\n            ''\r\n          ) : (\r\n            <button className=\"index__button\" onClick={onProjectAdd}>\r\n              Ajouter projet\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ProjectManagement;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport { useStaticQuery } from 'gatsby';\r\n\r\nimport MainLayout from '../components/main-layout';\r\n\r\nimport { withAuthentication } from '../components/hoc/hoc';\r\nimport { ProjectDataProvider } from '../components/context/projects/project-data-context';\r\n\r\nimport ProjectManagement from '../components/projects/project-management';\r\n\r\nconst ProjectPage = () => {\r\n  const data = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            defaultAssociatedProjectGroupName,\r\n            projectDocument\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n\r\n  const {\r\n    defaultAssociatedProjectGroupName: associatedProjectGroupName,\r\n    projectDocument,\r\n  } = data?.site.siteMetadata;\r\n\r\n  console.log(\"document:\", projectDocument);\r\n\r\n  return (\r\n    <ProjectDataProvider>\r\n      <MainLayout>\r\n        <ProjectManagement\r\n          {...{ associatedProjectGroupName, projectDocument }}\r\n        />\r\n      </MainLayout>\r\n    </ProjectDataProvider>\r\n  );\r\n};\r\n\r\nconst ProjectPageProtected = withAuthentication(ProjectPage);\r\nexport default ProjectPageProtected;\r\n","// Helper function to call our API\r\n// using authorization bearer token scheme\r\nexport default async function callAPI(endpoint, method = \"get\", token, data) {\r\n  let headers = new Headers();\r\n  let options = {};\r\n  options.method = method;\r\n\r\n  console.log(\"token :\", token);\r\n\r\n  if (token) {\r\n    const bearer = `Bearer ${token}`;\r\n    headers.append(\"Authorization\", bearer);\r\n  }\r\n\r\n  if (data) {\r\n    options.body = JSON.stringify(data);\r\n  }\r\n\r\n  if (\r\n    method.toLowerCase() === \"post\" ||\r\n    method.toLowerCase() === \"patch\" ||\r\n    method.toLowerCase() === \"put\"\r\n  )\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n  options.headers = headers;  \r\n  const url = process.env.GATSBY_API_URL + endpoint;\r\n  console.log(\r\n    \"request made to API at: \" + new Date().toString(),\r\n    \"URL:\",\r\n    url,\r\n    \"Options:\",\r\n    options\r\n  );\r\n  try {\r\n    const response = await fetch(url, options);\r\n\r\n    if (!response.ok) {\r\n      let fullErrorMessage =\r\n        \" Error code : \" +\r\n        response.status +\r\n        \" : \" +\r\n        response.statusText +\r\n        \"/nMessage : \";\r\n      const textResponse = await response.text();\r\n      fullErrorMessage += textResponse;\r\n      console.error(\"fetch() error\", fullErrorMessage);\r\n      // deal with token expiration\r\n      if (fullErrorMessage.search(\"expired\") > -1) {\r\n        console.log(\"token expired\");\r\n      }\r\n      throw new Error(fullErrorMessage);\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.log(\"error:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n","import { InteractionRequiredAuthError } from \"@azure/msal-browser\";\r\n\r\nasync function getAsyncIdToken(accounts, instance) {\r\n  if (accounts.length > 0) {\r\n    const request = {\r\n      scopes: [\"openid\"],\r\n      account: accounts[0],\r\n    };\r\n\r\n    try {\r\n      const response = await instance.acquireTokenSilent(request);\r\n      return response.idToken;\r\n    } catch (error) {\r\n      // acquireTokenSilent can fail for a number of reasons, fallback to interaction\r\n      if (error instanceof InteractionRequiredAuthError) {\r\n        const response2 = await instance.acquireTokenRedirect(request);\r\n        return response2.idToken;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport { getAsyncIdToken };\r\n","const getNamesFromEmail = (email) => {\r\n  let names = email.substring(0, email.indexOf(\"@\"));\r\n  let firstname = names.substring(0, names.indexOf(\".\"));\r\n  let lastname = names.substring(names.indexOf(\".\") + 1);\r\n  firstname = firstname.charAt(0).toUpperCase() + firstname.slice(1);\r\n  lastname = lastname.charAt(0).toUpperCase() + lastname.slice(1);\r\n  // deal with cases where Extra info is added to the name, when there is a second dot\r\n  if (lastname.indexOf(\".\") >= 0) {\r\n    lastname = lastname.substring(lastname.indexOf(\".\") + 1);\r\n    lastname = lastname.charAt(0).toUpperCase() + lastname.slice(1);\r\n  }\r\n  return firstname + \" \" + lastname;\r\n};\r\n\r\nexport { getNamesFromEmail };\r\n"],"names":["_ref","currentContent","allClasses","className","isBeingEdited","onChange","startContent","id","isInline","children","he","React","contentEditable","onInput","e","propUpdated","currentTarget","textContent","suppressContentEditableWarning","ProjectDataContext","ProjectDataProvider","_useState","useState","undefined","projectGroupData","setProjectGroupData","_useState2","userData","setUserData","_useState3","projectData","setProjectData","_useState4","isLoaded","setIsLoaded","Provider","value","useProjectData","_useMsal","useMsal","instance","accounts","_useContext","useContext","updateProjectGroupData","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","associatedProjectGroupName","idToken","tempProjectGroup","_context","prev","next","getAsyncIdToken","sent","callAPI","abrupt","t0","console","error","stop","_x","apply","arguments","updateUserData","_ref3","_callee2","tempUser","_context2","_x2","updateProjectData","_ref4","_callee3","projectGroupName","tempProject","_context3","_x3","addOneProject","_ref5","_callee4","newProject","_context4","_x4","deleteOneProject","_ref6","_callee5","project","deletedProject","_context5","_id","_x5","addMemberToProject","_ref7","_callee6","projectUpdated","_context6","_x6","deleteMemberFromProject","_ref8","_callee7","_context7","_x7","updateProject","_ref9","_callee8","data","_context8","_x8","_x9","Object","assign","name","other","_objectWithoutPropertiesLoose","_excluded","useStaticQuery","toLowerCase","includes","href","requiredFile","allFile","edges","find","file","node","base","publicURL","style","color","FontAwesomeIcon","icon","faSpinner","setFilteredContents","setIsBeingEdited","isPublic","setIsPublic","projectUpdateState","setProjectUpdateState","_useProjectData","onProjectDelete","onAddMemberToProject","onDeleteMemberFromProject","onProjectSave","updatedProject","handleChange","propChanged","previousState","key","shortId","ContentEditable","isAdmin","faTrashAlt","onClick","projectMembers","userName","status","faEdit","length","maximumProjectMembers","faUserPlus","faUserTimes","faSave","faTimes","description","presentationUrl","YoutubeImage","src","frontendProductionUrl","target","frontendRepo","backendRepo","map","member","getNamesFromEmail","join","type","checked","disabled","projects","ProjectCard","projectDocument","filteredContents","setQuery","onProjectAdd","useEffect","getData","group","Spinner","LinkFile","placeholder","inputText","filteredData","filter","content","parseInt","ProjectsView","withAuthentication","_data$site$siteMetada","site","siteMetadata","defaultAssociatedProjectGroupName","MainLayout","ProjectManagement","_callAPI","endpoint","method","token","headers","options","bearer","url","response","fullErrorMessage","textResponse","Headers","append","body","JSON","stringify","process","fetch","ok","statusText","text","search","Error","json","_getAsyncIdToken","request","response2","scopes","account","acquireTokenSilent","InteractionRequiredAuthError","acquireTokenRedirect","email","names","substring","indexOf","firstname","lastname","charAt","toUpperCase","slice"],"sourceRoot":""}