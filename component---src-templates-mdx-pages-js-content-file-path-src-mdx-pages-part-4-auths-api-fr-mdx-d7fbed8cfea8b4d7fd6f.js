"use strict";(self.webpackChunkmyjscourse=self.webpackChunkmyjscourse||[]).push([[2494],{6863:function(e,n,t){t.r(n),t.d(n,{default:function(){return C}});var r=t(3905),a=t(7294);function l(e){const n=Object.assign({h1:"h1",h2:"h2",p:"p",ul:"ul",li:"li",br:"br",strong:"strong",h4:"h4",code:"code",a:"a",pre:"pre",h5:"h5"},(0,r.ah)(),e.components),{PathViewer:t,PathViewerItem:l,InternalPageMenu:s,InternalPageMenuItem:u,InternalPageTitle:o,ScrollableImage:c}=n;return s||i("InternalPageMenu",!0),u||i("InternalPageMenuItem",!0),o||i("InternalPageTitle",!0),t||i("PathViewer",!0),l||i("PathViewerItem",!0),c||i("ScrollableImage",!0),a.createElement(a.Fragment,null,a.createElement(t,null,a.createElement(l,{to:"/"}," web2course "),a.createElement(l,{to:"/part4"}," Partie 4 "),a.createElement(l,{selected:!0}," a) JWT auths & API ")),"\n",a.createElement(n.h1,null,"a) Authentification et autorisation d'acc√®s aux op√©rations d'une RESTful API via JWT"),"\n",a.createElement(s,null,a.createElement(u,null," C'est quoi l'authentification et l'autorisation ? "),a.createElement(u,null," Stateful VS stateless authentication "),a.createElement(u,null," C'est quoi les tokens JWT ? "),a.createElement(u,null," Authentification & autorisation stateless via JWT & Expres "),a.createElement(u,null," üç¨ Cacher ses secrets "),a.createElement(u,null," M√©canisme d'autorisation et v√©rification du token "),a.createElement(u,null," Client REST avec JWT "),a.createElement(u,null," Protection des op√©rations d'√©criture d'une API ")),"\n",a.createElement(n.h1,null,a.createElement(o,null," C'est quoi l'authentification et l'autorisation ? ")),"\n",a.createElement(n.h2,null,"Authentification, c'est quoi ?"),"\n",a.createElement(n.p,null,"L'authentification, c'est le processus de v√©rifier qui est l'utilisateur d'une application."),"\n",a.createElement(n.p,null,"Pour authentifier un utilisateur, on va g√©n√©ralement passer via un formulaire de connexion, lui demandant un username et un password."),"\n",a.createElement(n.h2,null,"Autorisation, c'est quoi ?"),"\n",a.createElement(n.p,null,"L'autorisation, c'est le processus de v√©rifier ce √† quoi un utilisateur √† acc√®s."),"\n",a.createElement(n.p,null,"Une API va autoriser les acc√®s √† certaines op√©rations en fonction des privil√®ges associ√©s aux utilisateurs. Il y aura des op√©rations qui seront autoris√©es :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,'pour tous les utilisateurs, tant anonymes qu\'authentifi√©s ; imaginez par exemple les op√©rations de lecture de produits sur un site "vitrine". Il ne faut pas devoir cr√©er de compte utilisateur pour pouvoir afficher les produits du site.'),"\n",a.createElement(n.li,null,"pour tous les utilisateurs authentifi√©s, peu importe leurs privil√®ges ; imaginez le fait de pouvoir poster des messages dans un forum ; il faut avoir un compte pour pouvoir le faire, mais il ne faut pas de privil√®ges sp√©cifiques (pas besoin d'√™tre admin)."),"\n",a.createElement(n.li,null,"pour seulement un ou plusieurs utilisateur(s) authentifi√©(s) ayant les privil√®ges requis ; imaginez une op√©ration de lecture de tous les profils des utilisateurs d'une banque ; il faut avoir un compte admin de la banque pour pouvoir le faire. Ca serait catastrophique si n'importe quel utilisateur authentifi√© pourrait acc√©der aux profils de tous les utilisateurs !"),"\n"),"\n",a.createElement(n.h2,null,"Diff√©rents moyens d'authentification"),"\n",a.createElement(n.p,null,"Il existe de nombreux m√©canismes d'authentification."),"\n",a.createElement(n.p,null,"Traditionnellement, ou anciennement, nous avons l'authentification qui est support√©e √† l'aide de cookies. L'utilisateur envoie via un formulaire son username et password, le serveur v√©rifie ceux-ci et cr√©e un id de session et le renvoie √† l'utilisateur via un cookie.",a.createElement(n.br),"\n","Apr√®s l'authentification, √† chaque requ√™te du client sur ce serveur, le cookie est envoy√©, et le serveur, qui a sauvegard√© la session, va retrouver la session sur base de l'id de session pr√©sent dans le cookie et va autoriser ou non l'acc√®s √† l'op√©ration demand√©e par le client.",a.createElement(n.br),"\n","C'est ce qu'on appelle une authentification ",a.createElement(n.strong,null,"stateful"),"."),"\n",a.createElement(n.p,null,"Un m√©canisme d'authentification ",a.createElement(n.strong,null,"stateful")," indique que le serveur est responsable de sauvegarder les donn√©es de session des utilisateurs."),"\n",a.createElement(n.p,null,"On parle de ",a.createElement(n.strong,null,"session")," d'un utilisateur comme √©tant toute la dur√©e o√π le client s'authentifie √† l'application web jusqu'√† ce qu'il quitte cette application, lorsqu'il ferme son browser."),"\n",a.createElement(n.p,null,"De mani√®re plus moderne, nous avons des m√©canismes d'authentification qui sont dits ",a.createElement(n.strong,null,"stateless"),". Dans ce genre de m√©canisme, c'est le client qui doit sauvegarder les donn√©es de session, et donc le browser. L'authentification √† l'aide de ",a.createElement(n.strong,null,"tokens")," devient tr√®s populaires.",a.createElement(n.br),"\n","Il existe diff√©rents moyen de l'impl√©menter. Dans le cadre de ce cours, nous focuserons sur la fa√ßon la plus habituelle, les ",a.createElement(n.strong,null,"JSON Web Tokens"),", ou ",a.createElement(n.strong,null,"JWT"),"."),"\n",a.createElement(n.p,null,"Il existe d'autres m√©canismes tr√®s modernes qui utilisent des tokens, mis en place par des tiers : ",a.createElement(n.strong,null,"OAuth"),", ",a.createElement(n.strong,null,"OpenId"),"... Ces m√©canismes sont offerts par Microsoft, Google, Facebook... Nous ne les verrons pas dans le cadre de cours. N√©anmoins, √† la fin de ce cours, vous devriez √™tre apte √† pouvoir les utiliser, sous r√©serve de bien lire la documentation."),"\n",a.createElement(n.h1,null,a.createElement(o,null," Stateful VS stateless authentication  ")),"\n",a.createElement(n.p,null,"Quels sont les avantages & inconv√©nients d'une authentification stateful ? et d'une authentification stateless ?"),"\n",a.createElement(n.h4,null,"Authentification stateful"),"\n",a.createElement(n.p,null,a.createElement(n.strong,null,"Inconv√©nients")," :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"La session utilise de la m√©moire pour chaque utilisateur."),"\n",a.createElement(n.li,null,"Le backend n'a aucune mani√®re de d√©terminer si le frontend s'est d√©connect√© du site ou non : gestion de l'expiration d'une session plus compliqu√©e, notamment si le frontend revient apr√®s une longue dur√©e."),"\n",a.createElement(n.li,null,"Toutes les sessions sont perdues en cas de red√©marrage du serveur (r√©authentification)."),"\n",a.createElement(n.li,null,"Load balancing compliqu√© ; en effet, si un client fait une requ√™te, pendant toute la dur√©e de la session, s'il y a plusieurs serveurs qui peuvent y r√©pondre, comment est g√©r√©e la session de ce client ? Par quel(s) serveur(s) ? Comment se partagent-ils les donn√©es de session ? Ou est-ce que √ßa doit toujours √™tre le m√™me serveur qui r√©pond au m√™me client ?"),"\n"),"\n",a.createElement(n.p,null,a.createElement(n.strong,null,"Avantages")," :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"Peu gourmand en ressource point de vue processing et tr√®s rapide ; en effet, une fois qu'une session est en place, la v√©rification que le cookie contient le bon id de session se fait vite."),"\n"),"\n",a.createElement(n.h4,null,"Authentification stateless"),"\n",a.createElement(n.p,null,a.createElement(n.strong,null,"Inconv√©nients")," :\r\nComme le serveur ne retient plus l'utilisateur en m√©moire, il doit utiliser de la cryptographie pour cr√©er et valider les token ; c'est donc consommateur en ressource point de vue processing."),"\n",a.createElement(n.p,null,a.createElement(n.strong,null,"Avantages")," :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"Pas de session √† g√©rer, m√™me apr√®s red√©marrage du serveur, il n'y a pas de r√©authentification n√©cessaire."),"\n",a.createElement(n.li,null,"Evolutif, utilisation facile de plusieurs serveurs si du load balancing est n√©cessaire ; en effet, comme chaque requ√™te du client contient toutes les infos pour se faire autoriser, peu importe quel est le serveur qui va prendre en charge la requ√™te."),"\n"),"\n",a.createElement(n.p,null,'Notons que la "scalability" horizontale, la possibilit√© de permettre √† une application d\'augmenter sa capacit√© de r√©pondre √† une charge grandissante simplement en ajoutant des machines, est quelque chose de tr√®s important √† notre √©poque.',a.createElement(n.br),"\n","Certaines applications web ont des centaines de millions d'utilisateurs ; pour celles-ci, on ne peut pas compter sur la \"scalability\" verticale, c'est-√†-dire le fait d'augmenter les ressources d'une machine, en augmentant sa RAM, son processeur, son espace de stockage..."),"\n",a.createElement(n.p,null,"D√®s lors, dans le cadre de ce cours, nous allons pr√©f√©rer les applications web qui peuvent tourner sur des serveurs ",a.createElement(n.strong,null,"stateless"),"."),"\n",a.createElement(n.h1,null,a.createElement(o,null," C'est quoi les tokens JWT ? ")),"\n",a.createElement(n.p,null,"Les JSON Web token, ou JWT, appartiennent √† un standard internet permettant l'√©change s√©curis√© de tokens entre plusieurs parties."),"\n",a.createElement(n.p,null,"Un JWT contient trois parties encod√©es en base64 et ressemble √† qqch du style :",a.createElement(n.br),"\n",a.createElement(n.strong,null,a.createElement(n.code,null,"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.")),a.createElement(n.br),"\n",a.createElement(n.strong,null,a.createElement(n.code,null,"eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.")),a.createElement(n.br),"\n",a.createElement(n.strong,null,a.createElement(n.code,null,"SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"))),"\n",a.createElement(n.p,null,"Voici les 3 parties d'un JWT et leurs caract√©ristiques :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"l'",a.createElement(n.strong,null,"ent√™te")," (ou header) : un objet JSON identifiant le type de token (JWT) et l'algorithme utilis√© pour g√©n√©rer la signature du token (HS256), un algorithme de hachage."),"\n",a.createElement(n.li,null,"le ",a.createElement(n.strong,null,"payload")," : un objet JSON permettant de sp√©cifier le ",a.createElement(n.strong,null,"claim")," ; ce sont des param√®tres optionnels pr√©cisant les affirmations associ√©es au token, comme la date d'expiration du token, son cr√©ateur, le fait que l'utilisateur est admin... g√©n√©ralement, on y met pas trop d'info, principalement l'identifiant de l'utilisateur ; si l'API a besoin de plus d'info concernant l'utilisateur, elle ira g√©n√©ralement les chercher dans son support de donn√©es."),"\n",a.createElement(n.li,null,"la ",a.createElement(n.strong,null,"signature")," : c'est une signature num√©rique construite √† partir d'un secret priv√© ou d'une cl√© publique/priv√©e, via l'algorithme pr√©cis√© dans la signature."),"\n"),"\n",a.createElement(n.p,null,"üí≠ C'est bien joli tout √ßa, mais comment √ßa permet de s√©curiser la session d'un utilisateur ?",a.createElement(n.br),"\n","G√©n√©ralement, l'API, et elle uniquement, connait le secret priv√©. Elle va donc cr√©er le token d'un utilisateur authentifi√©, en y ajoutant le claim (ou les affirmations) qu'elle juge utile.",a.createElement(n.br),"\n","Lorsque le client re√ßoit son token, il va le sauvegarder dans son browser.",a.createElement(n.br),"\n","Pour chaque requ√™te o√π il devra se faire autoriser par l'API, le client enverra son token au sein d'un header de la requ√™te.",a.createElement(n.br),"\n","L'API utilisera le secret priv√©, connu d'elle-m√™me uniquement, pour v√©rifier la signature du token. Si tout est OK, c'est que l'utilisateur est bien authentifi√© et que son claim est OK."),"\n",a.createElement(n.p,null,"Imaginez maintenant qu'un hackeur tente de modifier le token, pour modifier le claim, notamment en changeant l'id de l'utilisateur pr√©sent dans le payload du token.\r\nEt bien la signature ne correspondra plus √† ce token l√† ! L'API le d√©tectera.",a.createElement(n.br),"\n","Pour que le hackeur r√©ussisse son acte malicieux, il est oblig√© de conna√Ætre le secret priv√© qui ne doit √™tre connu que de l'API.",a.createElement(n.br),"\n","Les hackeurs devront conna√Ætre le secret priv√© afin de pouvoir g√©n√©rer un nouveau token qui sera valid√© par l'API. Pas √©vident..."),"\n",a.createElement(n.p,null,"Ainsi, on peut imaginer un token comme une enveloppe s√©curis√© par un cadenas tr√®s sp√©cial : ce cadenas, qui est mis sur l'enveloppe contenant, par exemple, l'identifiant d'un utilisateur, est ferm√© par la cl√© üîë que seulement conna√Æt l'API.\r\nSi quelqu'un touche √† l'enveloppe, le cadenas ne s'ouvrira plus avec la üîë de l'API : la tentative de hackage sera d√©tect√©e !\r\nSi quelqu'un tente de cr√©er une enveloppe s√©curis√©, il le fera avec une autre cl√©, ",a.createElement(n.strong,null,"üóù")," par exemple, car il ne conna√Æt pas üîë. L'API, tentant d'ouvrir l'enveloppe s√©curis√©e √† l'aide de üîë, elle ne s'ouvrira pas : la tentative de hacking sera d√©tect√©e !"),"\n",a.createElement(n.p,null,"üí≠ Est-ce que cette m√©taphore d'enveloppe s√©curis√©e vous parle ?\r\nAttention que dans la r√©alit√©, le payload classique d'un token sera d√©codable, que l'on connaisse ou pas le secret priv√©. Il est encod√© en base64 ! Ne mettez donc jamais de secrets dans le payload d'un token !",a.createElement(n.br),"\n","Si vraiment un jour vous deviez mettre un secret dans un payload, bien que d√©conseill√©, vous pourriez toujours le faire en cryptant le payload."),"\n",a.createElement(n.p,null,"üëç Le m√©canisme de token assure que l'on aie une tr√®s haute probabilit√© de d√©tecter les alt√©rations faites sur les tokens, les tentatives de forgeage, gr√¢ce √† la signature de ceux-ci.",a.createElement(n.br),"\n","‚ö° Par contre, si nous laissons tra√Æner des informations dans le payload d'un token, comme un password d'un utilisateur et son username, alors l√†, c'est juste un beau cadeau pour les hackeurs, il n'auront qu'√† utiliser le formulaire de connexion et prendre possession de notre identit√© üò®."),"\n",a.createElement(n.p,null,"Il existe un site fort int√©ressant qui montre la structure d'un token et qui permet de les d√©coder : ",a.createElement(n.a,{href:"https://jwt.io/"},"jwt.io")," ",a.createElement(n.a,{href:"/js2/references/#r63"},"[R.63]"),". Nous l'utiliserons plus tard pour d√©coder les tokens g√©n√©r√©s par nos RESTful API."),"\n",a.createElement(n.h1,null,a.createElement(o,null," Authentification & autorisation stateless via JWT & Expres ")),"\n",a.createElement(n.h2,null,"Introduction"),"\n",a.createElement(n.p,null,"Via un exemple concret associ√© √† notre RESTful API qui g√®re les ressources de type \"pizzas\", nous allons mettre en place un processus d'authentification et d'autorisation JWT."),"\n",a.createElement(n.p,null,"La librairie que nous allons utiliser dans le cadre de ce cours pour g√©rer des tokens JWT est ",a.createElement(n.a,{href:"https://www.npmjs.com/package/jsonwebtoken"},"jsonwebtoken"),"."),"\n",a.createElement(n.p,null,"Nous allons maintenant continuer le d√©veloppement de l'API ",a.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/fat-model"},"fat-model")," pour ajouter des op√©rations permettant l'authentification et l'autorisation d'utilisateurs."),"\n",a.createElement(n.p,null,"Au sein de votre repo ",a.createElement(n.strong,null,"web2"),", veuillez cr√©er le projet nomm√© ",a.createElement(n.strong,null,"/web2/tutorials/pizzeria/api/auths")," sur base d'un copi√© coll√© de ",a.createElement(n.strong,null,"/web2/tutorials/pizzeria/api/fat-model")," (ou ",a.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/fat-model"},"fat-model"),")."),"\n",a.createElement(n.p,null,"Pour la suite du tutoriel, nous consid√©rons que tous les chemins absolus d√©marrent du r√©pertoire\r\n",a.createElement(n.strong,null,"/web2/tutorials/pizzeria/api/auths"),"."),"\n",a.createElement(n.p,null,"Veuillez installer la librairie ",a.createElement(n.strong,null,"jsonwebtoken")," au sein de votre nouveau projet ",a.createElement(n.strong,null,"auths")," :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-bash"},"npm i jsonwebtoken\n")),"\n",a.createElement(n.h2,null,"M√©canisme d'authentification et cr√©ation du token"),"\n",a.createElement(n.p,null,"Toujours √† l'aide d'Express, nous allons cr√©er un router ",a.createElement(n.strong,null,"auths")," qui mettra √† disposition les op√©rations de ",a.createElement(n.strong,null,"login")," et de ",a.createElement(n.strong,null,"register"),".\r\nVoici le contrat associ√© √† ces nouvelles op√©rations :"),"\n",a.createElement(n.h5,null,'Op√©rations sur les ressources de type "auths"'),"\n",a.createElement(n.p,null,"| URI | M√©thode HTTP | Op√©ration |\r\n|---|---|---|---|\r\n| ",a.createElement(n.strong,null,"auths/login"),' | POST | V√©rifier les credentials d\'une ressource de type "users" et renvoyer le username et un token JWT si les credentials sont OK |\r\n| ',a.createElement(n.strong,null,"auths/register"),' | POST | Cr√©er une ressource de type "users" et renvoyer le username et un token JWT |'),"\n",a.createElement("br"),"\n",a.createElement(n.p,null,"Le mod√®le ",a.createElement(n.strong,null,"users")," s'occupera de cr√©er les utilisateur, de v√©rifier leurs credentials ainsi que de cr√©er des token."),"\n",a.createElement(n.p,null,"Voici le workflow attendu pour une op√©ration de ",a.createElement(n.strong,null,"login")," ou de ",a.createElement(n.strong,null,"register")," :"),"\n",a.createElement(c,{name:"login.png",minWidth:"879px",maxWidth:"879x"}),"\n",a.createElement("figcaption",null,"Appel √† une RESTful API pour s'authentifier et obtenir un JWT"),"\n",a.createElement(n.p,null,"Ce que l'on voit dans l'image ci-dessus :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"si le mod√®le consid√®re que l'utilisateur est authentifiable, que ses credentials sont OK, alors il va utiliser une librairie ",a.createElement(n.strong,null,"jwt")," et la m√©thode ",a.createElement(n.strong,null,"sign")," pour cr√©er un token."),"\n",a.createElement(n.li,null,"le token est envoy√© dans le body de la r√©ponse √† l'utilisateur."),"\n"),"\n",a.createElement(n.p,null,"Ce que l'on ne voit pas dans l'image ci-dessus :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"c'est le job du client de sauvegarder le token. Si l'application cliente est un browser, alors celui-ci pourra √™tre sauvegard√© dans le web storage du browser."),"\n",a.createElement(n.li,null,"l'application cliente peut √™tre faite avec n'importe quelle technologie. Par exemple, nous pourrons utiliser REST Client pour faire une requ√™te √† l'API..."),"\n"),"\n",a.createElement(n.p,null,"Dans notre RESTful API, nous avons d√©cid√© que lorsqu'un client s'enregistre, quand il fait appel √† l'op√©ration ",a.createElement(n.strong,null,"register")," pour cr√©er un compte, l'API consid√®re automatiquement que cet utilisateur est authentifi√©. Tout comme la m√©thode ",a.createElement(n.strong,null,"login"),", la m√©thode ",a.createElement(n.strong,null,"register")," cr√©era et renverra un token JWT √† l'utilisateur."),"\n",a.createElement(n.p,null,"NB : Il est possible d'envisager un workflow diff√©rent : apr√®s le ",a.createElement(n.strong,null,"register"),", l'application demanderait √† l'utilisateur un ",a.createElement(n.strong,null,"login"),", ",a.createElement(n.strong,null,"register")," ne renvoyant jamais de token √† l'utilisateur."),"\n",a.createElement(n.p,null,"Nous allons √† pr√©sent mettre en place le code permettant d'impl√©menter le workflow que l'on vient de d√©couvrir."),"\n",a.createElement(n.p,null,"Veuillez cr√©er le mod√®le ",a.createElement(n.strong,null,"users")," en cr√©ant le fichier ",a.createElement(n.strong,null,"/models/users.js")," et y inclure ce code :"),"\n",a.createElement(n.pre,{numbered:!0,highlighting:"1,5-6,23-27,29-31,34,43-47,49-52,54"},a.createElement(n.code,{className:"language-js"},"const jwt = require('jsonwebtoken');\r\nconst path = require('node:path');\r\nconst { parse, serialize } = require('../utils/json');\r\n\r\nconst jwtSecret = 'ilovemypizza!';\r\nconst lifetimeJwt = 24 * 60 * 60 * 1000; // in ms : 24 * 60 * 60 * 1000 = 24h\r\n\r\nconst jsonDbPath = path.join(__dirname, '/../data/users.json');\r\n\r\nconst defaultUsers = [\r\n  {\r\n    id: 1,\r\n    username: 'admin',\r\n    password: 'admin',\r\n  },\r\n];\r\n\r\nfunction login(username, password) {\r\n  const userFound = readOneUserFromUsername(username);\r\n  if (!userFound) return undefined;\r\n  if (userFound.password !== password) return undefined;\r\n\r\n  const token = jwt.sign(\r\n    { username }, // session data added to the payload (payload : part 2 of a JWT)\r\n    jwtSecret, // secret used for the signature (signature part 3 of a JWT)\r\n    { expiresIn: lifetimeJwt }, // lifetime of the JWT (added to the JWT payload)\r\n  );\r\n\r\n  const authenticatedUser = {\r\n    username,\r\n    token,\r\n  };\r\n\r\n  return authenticatedUser;\r\n}\r\n\r\nfunction register(username, password) {\r\n  const userFound = readOneUserFromUsername(username);\r\n  if (userFound) return undefined;\r\n\r\n  createOneUser(username, password);\r\n\r\n  const token = jwt.sign(\r\n    { username }, // session data added to the payload (payload : part 2 of a JWT)\r\n    jwtSecret, // secret used for the signature (signature part 3 of a JWT)\r\n    { expiresIn: lifetimeJwt }, // lifetime of the JWT (added to the JWT payload)\r\n  );\r\n\r\n  const authenticatedUser = {\r\n    username,\r\n    token,\r\n  };\r\n\r\n  return authenticatedUser;\r\n}\r\n\r\nfunction readOneUserFromUsername(username) {\r\n  const users = parse(jsonDbPath, defaultUsers);\r\n  const indexOfUserFound = users.findIndex((user) => user.username === username);\r\n  if (indexOfUserFound < 0) return undefined;\r\n\r\n  return users[indexOfUserFound];\r\n}\r\n\r\nfunction createOneUser(username, password) {\r\n  const users = parse(jsonDbPath, defaultUsers);\r\n\r\n  const createdUser = {\r\n    id: getNextId(),\r\n    username,\r\n    password,\r\n  };\r\n\r\n  users.push(createdUser);\r\n\r\n  serialize(jsonDbPath, users);\r\n\r\n  return createdUser;\r\n}\r\n\r\nfunction getNextId() {\r\n  const users = parse(jsonDbPath, defaultUsers);\r\n  const lastItemIndex = users?.length !== 0 ? users.length - 1 : undefined;\r\n  if (lastItemIndex === undefined) return 1;\r\n  const lastId = users[lastItemIndex]?.id;\r\n  const nextId = lastId + 1;\r\n  return nextId;\r\n}\r\n\r\nmodule.exports = {\r\n  login,\r\n  register,\r\n  readOneUserFromUsername,\r\n};\r\n\n")),"\n",a.createElement(n.p,null,"Dans le code ci-dessus, ",a.createElement(n.strong,null,"jwtSecret")," est le secret priv√© connu uniquement du serveur. C'est la m√™me secret qu'il faudra utiliser pour v√©rifier un token."),"\n",a.createElement(n.p,null,a.createElement(n.strong,null,a.createElement(n.code,null,"jwt.sign()"))," permet de cr√©er le token et ses 3 parties :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"le payload du token, la 2√®me partie du token, est compl√©t√© principalement via le permier argument de ",a.createElement(n.strong,null,"sign()")," ; ici, le token affirme que l'utilisateur poss√©dant le ",a.createElement(n.strong,null,"username")," donn√© est authentifi√©."),"\n",a.createElement(n.li,null,"le payload du token sera aussi modifi√© sur base de la dur√©e d'expiration du token, selon l'argument ",a.createElement(n.strong,null,"expiresIn"),"."),"\n",a.createElement(n.li,null,a.createElement(n.strong,null,"jwtSecret")," est utilis√© pour cr√©er la 3√®me partie du token, sa signature."),"\n"),"\n",a.createElement(n.p,null,"Il faut maintenant que nous cr√©ions le router ",a.createElement(n.strong,null,"auths")," offrant les op√©rations de ",a.createElement(n.strong,null,"login")," et de ",a.createElement(n.strong,null,"register"),", en faisant appel au mod√®le ",a.createElement(n.strong,null,"users"),".",a.createElement(n.br),"\n","Veuillez cr√©er le fichier ",a.createElement(n.strong,null,"/routes/auths.js")," et y inclure le code suivant :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"const express = require('express');\r\nconst { register, login } = require('../models/users');\r\n\r\nconst router = express.Router();\r\n\r\n/* Register a user */\r\nrouter.post('/register', (req, res) => {\r\n  const username = req?.body?.username?.length !== 0 ? req.body.username : undefined;\r\n  const password = req?.body?.password?.length !== 0 ? req.body.password : undefined;\r\n\r\n  if (!username || !password) return res.sendStatus(400); // 400 Bad Request\r\n\r\n  const authenticatedUser = register(username, password);\r\n\r\n  if (!authenticatedUser) return res.sendStatus(409); // 409 Conflict\r\n\r\n  return res.json(authenticatedUser);\r\n});\r\n\r\n/* Login a user */\r\nrouter.post('/login', (req, res) => {\r\n  const username = req?.body?.username?.length !== 0 ? req.body.username : undefined;\r\n  const password = req?.body?.password?.length !== 0 ? req.body.password : undefined;\r\n\r\n  if (!username || !password) return res.sendStatus(400); // 400 Bad Reques\r\n\r\n  const authenticatedUser = login(username, password);\r\n\r\n  if (!authenticatedUser) return res.sendStatus(401); // 401 Unauthorized\r\n\r\n  return res.json(authenticatedUser);\r\n});\r\n\r\nmodule.exports = router;\n")),"\n",a.createElement(n.p,null,"Il n'y a rien de bien sp√©cial √† ce code. On fait simplement appel aux op√©rations du mod√®le ",a.createElement(n.strong,null,"users"),"."),"\n",a.createElement(n.p,null,"Attention, il faut rajouter le nouveau router au sein de ",a.createElement(n.strong,null,"app.js")," pour que notre API puisse offrir les nouvelles op√©rations. Veuillez ajouter ce code dans ",a.createElement(n.strong,null,"/app.js")," :"),"\n",a.createElement(n.pre,{highlighting:"7,18"},a.createElement(n.code,{className:"language-js"},"const express = require('express');\r\nconst cookieParser = require('cookie-parser');\r\nconst logger = require('morgan');\r\n\r\nconst usersRouter = require('./routes/users');\r\nconst pizzaRouter = require('./routes/pizzas');\r\nconst authsRouter = require('./routes/auths');\r\n\r\nconst app = express();\r\n\r\napp.use(logger('dev'));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\n\r\napp.use('/users', usersRouter);\r\napp.use('/pizzas', pizzaRouter);\r\napp.use('/auths', authsRouter);\r\n\r\nmodule.exports = app;\n")),"\n",a.createElement(n.p,null,"Veuillez d√©marrer votre API ",a.createElement(n.strong,null,"auths"),"."),"\n",a.createElement(n.p,null,"üí≠ Comment tester ces nouvelles op√©rations ?\r\nH√© bien rien de neuf, on va utiliser REST Client."),"\n",a.createElement(n.p,null,"Veuillez cr√©er le fichier ",a.createElement(n.strong,null,"/REST Client/auths.http")," et y ajouter le code suivant :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-http"},'@baseUrl = http://localhost:3000\r\n\r\n### Try to login an unknow user\r\nPOST {{baseUrl}}/auths/login\r\nContent-Type: application/json\r\n\r\n{\r\n    "username":"unknown",\r\n    "password":"admin"\r\n}\r\n\r\n### Login the default admin\r\nPOST {{baseUrl}}/auths/login\r\nContent-Type: application/json\r\n\r\n{\r\n    "username":"admin",\r\n    "password":"admin"\r\n}\r\n\r\n\r\n### Create the manager user\r\nPOST {{baseUrl}}/auths/register\r\nContent-Type: application/json\r\n\r\n{\r\n    "username":"manager",\r\n    "password":"manager"\r\n}\r\n\r\n### Login the manager user\r\nPOST {{baseUrl}}/auths/login\r\nContent-Type: application/json\r\n\r\n{\r\n    "username":"manager",\r\n    "password":"manager"\r\n}\n')),"\n",a.createElement(n.p,null,"Veuillez ex√©cuter les diff√©rentes requ√™tes. Tout devrait fonctionner, vous devriez r√©cup√©rer le username et le token d'un utilisateur authentifi√©."),"\n",a.createElement(n.p,null,"Pour le fun, nous allons d√©coder un token. Veuillez copier le token de ce que renvoie votre API pour la requ√™te de login de l'utilisateur ",a.createElement(n.strong,null,"manager")," (qqch qui doit ressembler √† une string du genre : ",a.createElement(n.code,null,"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Im1hbmFnZXIiLCJpYXQiOjE2NjEyNDg1MjksImV4cCI6MTc0NzY0ODUyOX0.JvYzM0gtmVkqFr9R3f1Bf6ow_QuyHJY-vedJ39N7JKw"),")."),"\n",a.createElement(n.p,null,"Veuillez vous rendre sur le site ",a.createElement(n.a,{href:"https://jwt.io/"},"JWT")," et coller votre token dans le champs ",a.createElement(n.strong,null,"Encoded"),". Dans la colonne ",a.createElement(n.strong,null,"Decoded"),", vous devriez voir l'algorithme utilis√© par la m√©thode ",a.createElement(n.strong,null,"sign"),", ainsi que les donn√©es pr√©sentes dans le payload, dont ",a.createElement(n.code,null,'"username": "manager"')," !",a.createElement(n.br),"\n","Vous comprenez pourquoi on n'ajoute pas des secrets dans un token üòâ."),"\n",a.createElement(n.h1,null,a.createElement(o,null," üç¨ Cacher ses secrets ")),"\n",a.createElement(n.p,null,"Dans ce cours-ci, nous ne verrons pas directement comment faire en sorte que le secret,  permettant de signer & v√©rifier les token, ne soit pas pr√©sent sur le web repository de vos API (par exemple ici le mod√®le ",a.createElement(n.strong,null,"users.js")," hardcode ce secret). En effet, pour des raisons de s√©curit√©, si votre secret est visible pour tous les d√©veloppeurs qui acc√®de √† votre repository public, c'est un probl√®me.",a.createElement(n.br),"\n","Si vous souhaitez d√©couvrir comment faire en sorte de rendre invisible des informations sensibles sur un web repository, tout en pouvant b√©n√©ficiant de ces infos dans votre environnement de d√©veloppement, vous pouvez utiliser la librairie ",a.createElement(n.a,{href:"https://www.npmjs.com/package/dotenv"},"dotenv")," qui permet de g√©rer facilement des variables d'environnement. C'est ce genre de librairies qui est utilis√©e par les professionnels pour cacher leurs secrets et certaines variables de configuration, comme le password pour se connecter √† une DB, l'URL vers une API, le port de l'application..."),"\n",a.createElement(n.h1,null,a.createElement(o,null," M√©canisme d'autorisation et v√©rification du token")),"\n",a.createElement(n.p,null,"Suite au ",a.createElement(n.strong,null,"register")," ou au ",a.createElement(n.strong,null,"login")," de l'utilisateur, tel qu'il a √©t√© d√©cid√© pour notre RESTful API, celui-ci a re√ßu un token. C'est le job de l'application cliente de trouver un moyen de sauvegarder ce token."),"\n",a.createElement(n.p,null,"Lorsqu'une application client souhaite cr√©er une pizza, on souhaite autoriser cette op√©ration qu'√† l'administrateur du site g√©rant la pizz√©ria.",a.createElement(n.br),"\n","Nous d√©cidons donc pour l'op√©ration de cr√©ation de pizza que l'utilisateur doit non seulement √™tre authentifi√©, mais qu'en plus, il doit √™tre l'admin."),"\n",a.createElement(n.p,null,"Pour que l'application client qui fait la requ√™te √† l'API puisse s'autoriser, elle doit ajouter un ",a.createElement(n.strong,null,"authorization header")," √† sa requ√™te contenant comme valeur le token re√ßu lors du ",a.createElement(n.strong,null,"login")," ou du ",a.createElement(n.strong,null,"register")," :"),"\n",a.createElement(c,{name:"authorizeOK.png",minWidth:"879px",maxWidth:"879x"}),"\n",a.createElement("figcaption",null,"Appel √† une op√©ration d'une RESTful API n√©cessitant une autorisation JWT : autorisation valide"),"\n",a.createElement(n.p,null,'Le router de "pizzas", avant m√™me de passer la requ√™te √† la route ',a.createElement(n.strong,null,"POST /pizzas"),", va lancer la fonction middleware d'autorisation nomm√©e ",a.createElement(n.strong,null,"authorize"),". La fonction middleware ",a.createElement(n.strong,null,"authorize")," va s'occuper de v√©rifier le token envoy√© par le client dans un header √† l'aide de la m√©thode ",a.createElement(n.strong,null,"verifiy")," de la librairie ",a.createElement(n.strong,null,"jwt"),"."),"\n",a.createElement(n.p,null,"üí≠ Si le token est valide, est-ce que √ßa signifie que l'utilisateur est bien authentifi√© ?\r\nH√© bien non, car imaginez qu'entre le moment o√π l'utilisateur se soit logu√©, il ait √©t√© supprim√© de l'application par un admin... dans ce cas-ci, on ne veut pas l'autoriser √† ajouter une pizza au menu de la pizzeria ! Il n'est p-e m√™me plus un employ√©, il souhaite p-e √©crire du contenu malicieux üò®"),"\n",a.createElement(n.p,null,"Donc si le token est valide, ",a.createElement(n.strong,null,"authorize")," fera appel au mod√®le de ",a.createElement(n.strong,null,"users")," pour v√©rifier que l'utilisateur existe bien dans le support de donn√©es (fichiers JSON, base de donn√©es ou autres) et pour obtenir toutes les infos sur cet utilisateur. Si l'utilisateur existe, alors cela signifie que l'utilisateur est bien authentifi√©. La fonction middleware ",a.createElement(n.strong,null,"authorize")," va passer la main √† une autre fonction middleware pour v√©rifier que l'utilisateur est bien l'admin."),"\n",a.createElement(n.p,null,"üí≠ Comment est-ce que ",a.createElement(n.strong,null,"authorize")," peut faire appel au mod√®le pour v√©rifier que l'utilisateur existe bien ? Est-ce que cela signifie que le token doit contenir tout un tas de donn√©es sur l'utilisateur ?\r\nüëç En r√®gle g√©n√©rale, on va juste mettre un identifiant de l'utilisateur dans ce qu'on appelle le ",a.createElement(n.strong,null,"payload")," du token. C'est ensuite l'API, suite au d√©codage de l'identifiant de l'utilisateur, qui fera appel au support de donn√©es pour retrouver toutes les donn√©es de l'utilisateur."),"\n",a.createElement(n.p,null,"NB : notez que l'on pourrait aussi laisser la fonction ",a.createElement(n.strong,null,"createOnePizza")," s'occuper de v√©rifier que l'utilisateur demandant la cr√©ation de la pizza soit bien l'admin. Ici, comme il s'agit de v√©rifier que le contrat de l'API soit respect√©, c'est-√†-dire que l'utilisateur soit bien authentifi√© & admin, alors on pr√©f√®re r√©aliser cette action en dehors du mod√®le, car dans nos choix architecturaux au niveau de nos RESTful API, nous avons d√©cid√© que ce n'est pas le mod√®le qui s'occupe de pr√©senter les donn√©es aux clients."),"\n",a.createElement(n.p,null,"La fonction middleware ",a.createElement(n.strong,null,"isAdmin")," va v√©rifier que l'utilisateur est bien l'admin. Si c'est OK, elle passera la main √† la fonction middleware qui g√®re la route ",a.createElement(n.strong,null,"POST /pizzas")," au sein du router de pizzas en faisant l'appel √† la fonction ",a.createElement(n.strong,null,"next"),"."),"\n",a.createElement(n.p,null,"Maintenant que le client a les bons privil√®ges, l'op√©ration de cr√©ation de la pizza peut donc √™tre autoris√©e. L'op√©ration de ",a.createElement(n.strong,null,"createOnePizza")," du mod√®le renverra la nouvelle pizza au router qui s'occupera de pr√©senter la nouvelle pizza au client, au format JSON."),"\n",a.createElement(n.p,null,"Par contre, voici le workflow si le token n'est pas valide :"),"\n",a.createElement(c,{name:"authorizeNOK.png",minWidth:"879px",maxWidth:"879x"}),"\n",a.createElement("figcaption",null,"Appel √† une op√©ration d'une RESTful API n√©cessitant une autorisation JWT : autorisation invalide"),"\n",a.createElement(n.p,null,"Dans ce cas l√†, ",a.createElement(n.strong,null,"authorize")," ne passe pas la main √† ",a.createElement(n.strong,null,"isAdmin")," ni m√™me √† la fonction middleware qui g√®re la route ",a.createElement(n.strong,null,"POST /pizzas"),".",a.createElement(n.br),"\n","La fonction middleware ",a.createElement(n.strong,null,"authorize")," renvoie directement un code d'erreur ",a.createElement(n.strong,null,"401 Unauthorized")," au client."),"\n",a.createElement(n.p,null,"Vous pourriez aussi imaginer le workflow o√π le client envoie un token valide, mais l'utilisateur associ√© n'est pas admin. Dans ce cas-ci, ",a.createElement(n.strong,null,"authorize")," ferait appel √† ",a.createElement(n.strong,null,"isAdmin"),", mais ",a.createElement(n.strong,null,"isAdmin")," renverrait directement un code d'erreur ",a.createElement(n.strong,null,"403 Forbidden")," au client.",a.createElement(n.br),"\n","En effet, l'API indiquerait ainsi qu'elle aurait v√©rifi√© que l'utilisateur est bien authentifi√©, mais que celui ne poss√®de pas les privil√®ges suffisant pour acc√©der √† l'op√©ration demand√©e."),"\n",a.createElement(n.p,null,"üò® Wow, le workflow d'autorisation pour la cr√©ation d'une pizza est assez long.  Nous allons maintenant l'impl√©menter. Nous vous inqui√©tez pas, ce qui importe dans le code qui va suivre, ce n'est pas de savoir √©crire tout le code, mais de bien comprendre le m√©canisme. En effet, en r√®gle g√©n√©rale, vous allez utiliser des librairies vous permettant d'autoriser les acc√®s aux op√©rations de vos API. Vous √©crirez donc rarement le m√©canisme d'autorisation, par contre, vous devrez pouvoir utiliser ces m√©canismes."),"\n",a.createElement(n.p,null,"Veuillez cr√©er les nouvelles fonctions middleware ",a.createElement(n.strong,null,"authorize")," et ",a.createElement(n.strong,null,"isAdmin")," au sein d'un nouveau fichier ",a.createElement(n.strong,null,"/utils/auths.js")," :"),"\n",a.createElement(n.pre,{numbered:!0,highlighting:"1,4,7,11"},a.createElement(n.code,{className:"language-js"},"const jwt = require('jsonwebtoken');\r\nconst { readOneUserFromUsername } = require('../models/users');\r\n\r\nconst jwtSecret = 'ilovemypizza!';\r\n\r\nconst authorize = (req, res, next) => {\r\n  const token = req.get('authorization');\r\n  if (!token) return res.sendStatus(401);\r\n\r\n  try {\r\n    const decoded = jwt.verify(token, jwtSecret);\r\n    const { username } = decoded;\r\n\r\n    const existingUser = readOneUserFromUsername(username);\r\n\r\n    if (!existingUser) return res.sendStatus(401);\r\n\r\n    req.user = existingUser; // request.user object is available in all other middleware functions\r\n    return next();\r\n  } catch (err) {\r\n    console.error('authorize: ', err);\r\n    return res.sendStatus(401);\r\n  }\r\n};\r\n\r\nconst isAdmin = (req, res, next) => {\r\n  const { username } = req.user;\r\n\r\n  if (username !== 'admin') return res.sendStatus(403);\r\n  return next();\r\n};\r\n\r\nmodule.exports = { authorize, isAdmin };\n")),"\n",a.createElement(n.p,null,"Quelques explications sur le code de la fonction middleware ",a.createElement(n.strong,null,"authorize")," :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"Gr√¢ce √† ",a.createElement(n.code,null,"req.get('authorization')"),", on r√©cup√®re le token qui a √©t√© envoy√© par le client au sein de l'",a.createElement(n.strong,null,"authorization header")," de la requ√™te, c'est une string."),"\n",a.createElement(n.li,null,"La m√©thode ",a.createElement(n.code,null,"jwt.verify(token, jwtSecret)")," v√©rifie tant la signature du token que le fait que le token n'a pas encore expir√©. Elle utilise le secret ",a.createElement(n.strong,null,"jwtSecret")," qui doit √™tre le m√™me que celui pris en compte lors de la cr√©ation du token."),"\n",a.createElement(n.li,null,"Elle charge toutes les donn√©es de l'utilisateur authentifi√© au sein de l'objet ",a.createElement(n.strong,null,"request"),", dans ",a.createElement(n.strong,null,"user"),". Cela est une bonne pratique, cela permet, pour toute la dur√©e du traitement de cette requ√™te, de mettre √† disposition ces donn√©es √† toutes les fonctions middleware.",a.createElement(n.br),"\n","üí≠ Mais pourquoi faire cela ?\r\nImaginez que vous faites un appel √† une base de donn√©es externes √† chaque fois que vous souhaitez obtenir les informations d'un utilisateur... Cela est tr√®s consommateur en temps... Lorsque vous allez utiliser d'autres fonctions middleware comme ",a.createElement(n.strong,null,"isAdmin"),", vous n'avez plus besoin de faire appel √† la base de donn√©es."),"\n",a.createElement(n.li,null,"üí≠ Qu'est-ce que ce code : ",a.createElement(n.code,null,"const { username } = decoded;")," ?",a.createElement(n.br),"\n","C'est ce que l'on appelle du ",a.createElement(n.strong,null,"destructuring assignement"),", c'est une fa√ßon tr√®s concise en JS de cr√©er des variables √† partir de propri√©t√©s d'objets ou des valeurs d'arrays.",a.createElement(n.br),"\n","Imaginez ici que la valeur de ",a.createElement(n.code,null,"decoded")," soit ",a.createElement(n.code,null,"{ username: 'admin', iat: 1661251095, exp: 1747651095 }"),". Ce code ",a.createElement(n.code,null,"const { username } = decoded;")," est l'√©quivalent de ",a.createElement(n.code,null,"const username = decoded.username;"),". OK, mais √ßa n'a pas vraiment de valeur ajout√©e ici, c'est juste un poil plus concis... Cela devient vraiment int√©ressant quand vous souhaitez cr√©er plusieurs variables, comme pour l'exemple donn√©, on pourrait cr√©er 3 variables ainsi ",a.createElement(n.code,null,"const { username, iat, exp } = decoded;")," au lieu d'√©crire :"),"\n"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"const username = decoded.username;\r\nconst iat = decoded.iat;\r\nconst exp = decoded.exp;\n")),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"Pour en savoir plus sur la puissance du ",a.createElement(n.strong,null,"destructuring assignement"),", vous pouvez consulter la ",a.createElement(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"},"documentation de MDN")," ",a.createElement(n.a,{href:"/js2/references/#r64"},"[R.64]"),"."),"\n",a.createElement(n.li,null,"Si tout est OK, ",a.createElement(n.strong,null,"isAdmin")," fait appel √† ",a.createElement(n.strong,null,"next()"),", qui sera la prochaine fonction middleware qui est pr√©sente apr√®s l'appel de ",a.createElement(n.strong,null,"authorize"),"."),"\n"),"\n",a.createElement(n.p,null,"La fonction middleware ",a.createElement(n.strong,null,"isAdmin")," r√©cup√®re les donn√©es de l'utilisateur authentifi√© via l'objet ",a.createElement(n.code,null,"req.user")," et le ",a.createElement(n.strong,null,"destructuring assignement"),".",a.createElement(n.br),"\n","Si l'utilisateur n'est pas ",a.createElement(n.strong,null,"admin"),", c'est le code '",a.createElement(n.strong,null,"403 Forbidden"),"' qui est renvoy√© √† l'application cliente, signifiant que l'utilisateur est bien authentifi√©, mais il n'a pas les privil√®ges pour acc√©der √† l'op√©ration demand√©e (cr√©ation de pizza).",a.createElement(n.br),"\n","Si tout est OK, ",a.createElement(n.strong,null,"isAdmin")," fait appel √† ",a.createElement(n.strong,null,"next()"),", qui sera la prochaine fonction middleware qui est pr√©sente apr√®s l'appel de ",a.createElement(n.strong,null,"isAdmin"),"."),"\n",a.createElement(n.p,null,"O√π allons-nous utiliser ces nouvelles fonctions middleware ?"),"\n",a.createElement(n.p,null,"Nous pouvons le faire au niveau que nous souhaitons, soit au niveau :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"de l'application, pour toutes les routes, via ",a.createElement(n.code,null,"app.use(authorize)"),"."),"\n",a.createElement(n.li,null,"d'un router, pour toutes les routes associ√©es ; par exemple, on pourrait dire que toutes les routes du router de pizzas sont prot√©g√©es par une autorisation JWT. On √©crirait : ",a.createElement(n.code,null,'app.use("/pizzas", authorize, pizzaRouter);'),'. Cela signifierait que toutes les op√©rations sur des ressources de type "pizzas" ne seraient autoris√©es que si l\'utilisateur est authentifi√©. Cela serait probl√©matique pour deux raisons :',"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"On veut pouvoir afficher le menu des pizzas pour tous les utilisateurs, m√™me s'ils sont anonymes."),"\n",a.createElement(n.li,null,"On ne veut pas simplement v√©rifier qu'un utilisateur est authentifi√© pour cr√©er une pizza, on veut aussi v√©rifier qu'il est admin."),"\n"),"\n"),"\n",a.createElement(n.li,null,"d'une route, pour une op√©ration de notre RESTful API. C'est ce que nous souhaitons faire ici. Veuillez mettre √† jour le code du router de \"pizzas\" au sein de ",a.createElement(n.strong,null,"/routes/pizzas.js")," :"),"\n"),"\n",a.createElement(n.pre,{highlighting:"2,7"},a.createElement(n.code,{className:"language-js"},"// See existing code\r\nconst { authorize, isAdmin } = require('../utils/auths');\r\n\r\n// See existing code\r\n\r\n// Create a pizza to be added to the menu.\r\nrouter.post('/', authorize, isAdmin, (req, res) => {\r\n  const title = req?.body?.title?.length !== 0 ? req.body.title : undefined;\r\n  const content = req?.body?.content?.length !== 0 ? req.body.content : undefined;\r\n\r\n  if (!title || !content) return res.sendStatus(400); // error code '400 Bad request'\r\n\r\n  const createdPizza = createOnePizza(title, content);\r\n\r\n  return res.json(createdPizza);\r\n});\n")),"\n",a.createElement(n.p,null,"Ainsi, nous avons juste fait l'appel de deux fonctions middleware pour v√©rifier :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,a.createElement(n.strong,null,"que l'utilisateur est authentifi√©")," via ",a.createElement(n.strong,null,"authorize")," ; si tout est OK au niveau du token fournit par l'application cliente, ",a.createElement(n.strong,null,"authorize")," fait appel via ",a.createElement(n.strong,null,"next()")," √† la prochaine fonction middleware. Dans ce cas-ci, c'est ",a.createElement(n.strong,null,"isAdmin"),". S'il y a un probl√®me, ",a.createElement(n.strong,null,"authorize")," termine le traitement de la requ√™te en envoyant un code d'erreur au client et les prochaines fonctions middleware (",a.createElement(n.strong,null,"isAdmin"),", puis la fonction arrow) ne sont pas ex√©cut√©es."),"\n",a.createElement(n.li,null,a.createElement(n.strong,null,"que l'utilisateur est admin")," via ",a.createElement(n.strong,null,"isAdmin")," ; si tout est OK, que l'utilisateur authentifi√© est l'admin, ",a.createElement(n.strong,null,"isAdmin")," fait appel via ",a.createElement(n.strong,null,"next()")," √† la prochaine fonction middleware. Dans ce cas-ci, c'est la fonction arrow qui appelle ",a.createElement(n.code,null,"createOnePizza")," pour cr√©er la pizza, la fonction traitant l'op√©ration demand√©e. Si l'utilisateur authentifi√© n'est pas l'admin, alors ",a.createElement(n.strong,null,"isAdmin")," termine le traitement en envoyant un code d'erreur au client et la fonction traitant de l'op√©ration de cr√©ation n'est pas ex√©cut√©e."),"\n"),"\n",a.createElement(n.p,null,"Comment pouvons-nous tester l'op√©ration de cr√©ation d'une pizza ? Via REST Client.\r\nTentons le coup √† l'aide de cette requ√™te (elle est d√©j√† pr√©sente dans ",a.createElement(n.strong,null,"/REST Client/pizzas.http"),") :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-http"},'POST {{baseUrl}}/pizzas\r\nContent-Type: application/json\r\n\r\n{\r\n    "title":"Magic Green",\r\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\r\n}\n')),"\n",a.createElement(n.p,null,"Apr√®s avoir ex√©cut√© cette requ√™te, vous devriez avoir re√ßu un status code '",a.createElement(n.strong,null,"401 Unauthorized"),"'.\r\nEt bien oui, nous n'avons pas envoy√© de token, nous ne pouvons donc pas √™tre autoris√©.",a.createElement(n.br),"\n","Au prochain point nous allons voir comment utiliser REST Client pour sauvegarder de l'information, comme un token, suite √† une requ√™te vers une API."),"\n",a.createElement(n.h1,null,a.createElement(o,null," Client REST avec JWT ")),"\n",a.createElement(n.p,null,"Pr√©c√©demment, nous avons appris √† utiliser REST Client, l'extension de VS Code, pour faire des requ√™tes vers des API."),"\n",a.createElement(n.p,null,"Voici quelques notions suppl√©mentaire pour utiliser REST Client avec des ",a.createElement(n.strong,null,"JWT")," :"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"Il est possible de cr√©er des ",a.createElement(n.strong,null,"Request Variables")," afin de r√©cup√©rer la r√©ponse associ√©e\r\n√† une requ√™te au sein d'une variable."),"\n",a.createElement(n.li,null,"On va donc pouvoir r√©cup√©rer le token, suite √† une requ√™te d'authentification,\r\nau sein d'une ",a.createElement(n.strong,null,"Request Variable"),", pour ensuite fournir ce token dans le\r\n¬´ ",a.createElement(n.strong,null,"Authorization header")," ¬ª de toutes les requ√™tes demandant une autorisation JWT."),"\n"),"\n",a.createElement(n.p,null,"Si vous souhaitez plus d'infos sur les ",a.createElement(n.strong,null,"Request Variables"),", vous pouvez consulter la ",a.createElement(n.a,{href:"https://github.com/Huachao/vscode-restclient#request-variables"},"documentation de REST Client")," ",a.createElement(n.a,{href:"/js2/references/#r55"},"[R.55]"),"."),"\n",a.createElement(n.p,null,"Voici comment mettre √† jour le script ",a.createElement(n.strong,null,"/REST Client/pizzas.http")," pour cr√©er une pizza en passant le token de l'utilisateur ",a.createElement(n.strong,null,"admin")," :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-http"},'### Create a pizza by using the admin account\r\n#### First login as the admin\r\n##### Define a request variable nammed admin :\r\n# @name admin\r\nPOST {{baseUrl}}/auths/login\r\nContent-Type: application/json\r\n\r\n{\r\n    "username":"admin",\r\n    "password":"admin"\r\n}\r\n\r\n#### Create a pizza with the admin token\r\nPOST {{baseUrl}}/pizzas\r\nContent-Type: application/json\r\nAuthorization: {{admin.response.body.token}}\r\n\r\n{\r\n    "title":"Magic Green",\r\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\r\n}\n')),"\n",a.createElement(n.p,null,"Pour tester l'op√©ration de cr√©ation de pizza, veuillez d'abord ex√©cuter la premi√®re requ√™te, puis la seconde donn√©e ci-dessus."),"\n",a.createElement(n.p,null,"A ce stade-ci, il serait aussi int√©ressant de tester certains cas d'erreurs associ√©s aux tokens. Veuillez compl√©ter le script ",a.createElement(n.strong,null,"/REST Client/pizzas.http")," avec :"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-http"},'### 1. Create a pizza without a token\r\nPOST {{baseUrl}}/pizzas\r\nContent-Type: application/json\r\n\r\n{\r\n    "title":"Magic Green",\r\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\r\n}\r\n\r\n### 2. Create a pizza without being the admin, use manager account\r\n#### 2.1 First login as the manager\r\n##### 2.1.1 Define a request variable nammed manager\r\n# @name manager\r\nPOST {{baseUrl}}/auths/login\r\nContent-Type: application/json\r\n\r\n{\r\n    "username":"manager",\r\n    "password":"manager"\r\n}\r\n\r\n##### 2.1.2 Define a file variable to simplify the access to the token of manager\r\n@managerToken = {{manager.response.body.token}}\r\n\r\n#### 2.2 Try to create a pizza with the manager token\r\nPOST {{baseUrl}}/pizzas\r\nContent-Type: application/json\r\nAuthorization: {{managerToken}}\r\n\r\n{\r\n    "title":"Magic Green",\r\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\r\n}\n')),"\n",a.createElement(n.p,null,"Nous voyons qu'√† l'aide de REST Client, nous pouvons utiliser une ",a.createElement(n.strong,null,"File Variable")," pour allouer une partie de la r√©ponse faite √† une requ√™te.",a.createElement(n.br),"\n","Dans ce cas, on peut faire appel √† l'API en passant le token via la ",a.createElement(n.strong,null,"File Variable")," nomm√© ",a.createElement(n.strong,null,"managerToken")," (",a.createElement(n.code,null,"Authorization: {{managerToken}}"),") au lieu d'utiliser une partie seulement de la ",a.createElement(n.strong,null,"Request Variable")," nomm√©e ",a.createElement(n.strong,null,"manager")," (",a.createElement(n.code,null,"Authorization: {{manager.response.body.token}}"),").",a.createElement(n.br),"\n","Cela permet de cr√©er des requ√™tes plus concises."),"\n",a.createElement(n.h1,null,a.createElement(o,null," Protection des op√©rations d'√©criture d'une API ")),"\n",a.createElement(n.p,null,"Veuillez mettre √† jour votre RESTful API g√©rant les pizzas afin que toutes les op√©rations d'√©criture soient prot√©g√©es par une autorisation JWT, n'autorisant que l'utilisateur ",a.createElement(n.strong,null,"admin"),"."),"\n",a.createElement(n.p,null,"Voici le code √† mettre √† jour dans ",a.createElement(n.strong,null,"/routes/pizzas"),' pour correctement autoriser les op√©rations de suppression et de modification sur des ressources de type "pizzas":'),"\n",a.createElement(n.pre,{highlighting:"2,11"},a.createElement(n.code,{className:"language-js"},"// Delete a pizza from the menu based on its id\r\nrouter.delete('/:id', authorize, isAdmin, (req, res) => {\r\n  const deletedPizza = deleteOnePizza(req.params.id);\r\n\r\n  if (!deletedPizza) return res.sendStatus(404);\r\n\r\n  return res.json(deletedPizza);\r\n});\r\n\r\n// Update a pizza based on its id and new values for its parameters\r\nrouter.patch('/:id', authorize, isAdmin, (req, res) => {\r\n  const title = req?.body?.title;\r\n  const content = req?.body?.content;\r\n\r\n  if ((!title && !content) || title?.length === 0 || content?.length === 0) {\r\n    return res.sendStatus(400);\r\n  }\r\n\r\n  const updatedPizza = updateOnePizza(req.params.id, { title, content });\r\n\r\n  if (!updatedPizza) return res.sendStatus(404);\r\n\r\n  return res.json(updatedPizza);\r\n});\n")),"\n",a.createElement(n.p,null,"Pour vous assurer que les op√©rations de suppression et de modification sont bien fonctionnelles, veuillez mettre √† jour les requ√™tes associ√©es afin d'utiliser un token. Veuillez mettre √† jour ",a.createElement(n.strong,null,"/REST Client/pizzas.http")," en ajoutant ces deux lignes :"),"\n",a.createElement(n.pre,{numbered:!0,highlighting:"25,30"},a.createElement(n.code,{className:"language-http"},'### Create a pizza by using the admin account\r\n#### First login as the admin\r\n##### Define a request variable nammed admin\r\n# @name admin\r\nPOST {{baseUrl}}/auths/login\r\nContent-Type: application/json\r\n\r\n{\r\n    "username":"admin",\r\n    "password":"admin"\r\n}\r\n\r\n#### Create a pizza with the admin token\r\nPOST {{baseUrl}}/pizzas\r\nContent-Type: application/json\r\nAuthorization: {{admin.response.body.token}}\r\n\r\n{\r\n    "title":"Magic Green",\r\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\r\n}\r\n\r\n### Delete pizza identified by 2 with the admin token\r\nDELETE {{baseUrl}}/pizzas/2\r\nAuthorization: {{admin.response.body.token}}\r\n\r\n### Update the pizza identified by 6 with the admin token\r\nPATCH {{baseUrl}}/pizzas/6\r\nContent-Type: application/json\r\nAuthorization: {{admin.response.body.token}}\r\n\r\n{\r\n    "title":"Magic Green 2"\r\n}\n')),"\n",a.createElement(n.p,null,"Veuillez ex√©cutez les requ√™tes de type DELETE et de type PATCH afin de vous assurer que l'API est en ordre."),"\n",a.createElement(n.p,null,"Si tout fonctionne bien, faites un ",a.createElement(n.strong,null,"commit")," de votre repo (",a.createElement(n.strong,null,"web2"),') avec le message\r\n"',a.createElement(n.strong,null,"auths"),'".'),"\n",a.createElement(n.p,null,"En cas de souci, vous pouvez utiliser le code du tutoriel ",a.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/auths"},"auths"),"."))}var s=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?a.createElement(n,e,a.createElement(l,e)):l(e)};function i(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}var u=t(4854),o=t(5583),c=t(5679),d=t(307),m=t(7410),p=t(9523),E=t(8075),g=t(9063),f=t(1631),h=t(5772),v=t(2770),q=t(7008),z=t(9771),b=t(1218),k=(t(5258),t(9394)),w=t(4579),I=t(9416),j=t(9256),y=t(6488),P=t(5175),T=t(6387),x=t(6044);const S={Link:u.Link,Image:c.Z,Section:d.Z,Content:m.Z,Background:p.Z,SectionHeader:E.Z,SectionFooter:g.Z,PageHeader:f.Z,CodeBlock:v.Z,LinkFile:q.Z,ScrollableImage:z.Z,PublicProjectsView:b.Z,AuthenticatedBlock:k.Z,UnAuthenticatedBlock:w.Z,NestedMdxBlock:I.Z,YoutubeImage:j.Z,InternalPageMenu:y.Z,InternalPageMenuItem:P.Z,InternalPageTitle:T.Z,PathViewer:x.k,PathViewerItem:x.F};function A(e){var n,t,l,s,i;let{data:{mdx:u,allImages:c},children:d}=e;return S.PageHeader=(0,h.u)(f.Z,null==u?void 0:u.frontmatter),a.createElement(o.Z,Object.assign({},null!=u&&u.frontmatter?{frontmatter:u.frontmatter}:{},null!=u&&null!==(n=u.frontmatter)&&void 0!==n&&n.navbarExtraStyles?{navbarExtraStyles:u.frontmatter.navbarExtraStyles}:{},null!=u&&null!==(t=u.frontmatter)&&void 0!==t&&t.headerImage?{headerImage:u.frontmatter.headerImage}:{},null!=u&&null!==(l=u.frontmatter)&&void 0!==l&&l.featuredImage?{featuredImage:u.frontmatter.featuredImage}:{},null!=u&&null!==(s=u.frontmatter)&&void 0!==s&&s.title?{pageTitle:u.frontmatter.title}:{},c&&c.length>0?{allImages:c}:{}),a.createElement(r.Zo,{components:S},a.createElement("div",{className:null!=u&&null!==(i=u.frontmatter)&&void 0!==i&&i.autoMargin?"page page--auto-margin":"page"},d)))}function C(e){return a.createElement(A,e,a.createElement(s,e))}}}]);
//# sourceMappingURL=component---src-templates-mdx-pages-js-content-file-path-src-mdx-pages-part-4-auths-api-fr-mdx-d7fbed8cfea8b4d7fd6f.js.map