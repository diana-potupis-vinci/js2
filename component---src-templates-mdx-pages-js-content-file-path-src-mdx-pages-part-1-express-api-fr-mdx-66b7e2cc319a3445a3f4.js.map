{"version":3,"file":"component---src-templates-mdx-pages-js-content-file-path-src-mdx-pages-part-1-express-api-fr-mdx-66b7e2cc319a3445a3f4.js","mappings":"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","sources":["webpack://myjscourse/./src/mdx-pages/part1/express-api.fr.mdx","webpack://myjscourse/./src/templates/mdx-pages.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    p: \"p\",\n    strong: \"strong\",\n    br: \"br\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components), {PathViewer, PathViewerItem, InternalPageMenu, InternalPageMenuItem, InternalPageTitle, ScrollableImage} = _components;\n  if (!InternalPageMenu) _missingMdxReference(\"InternalPageMenu\", true);\n  if (!InternalPageMenuItem) _missingMdxReference(\"InternalPageMenuItem\", true);\n  if (!InternalPageTitle) _missingMdxReference(\"InternalPageTitle\", true);\n  if (!PathViewer) _missingMdxReference(\"PathViewer\", true);\n  if (!PathViewerItem) _missingMdxReference(\"PathViewerItem\", true);\n  if (!ScrollableImage) _missingMdxReference(\"ScrollableImage\", true);\n  return React.createElement(React.Fragment, null, React.createElement(PathViewer, null, React.createElement(PathViewerItem, {\n    to: \"/\"\n  }, \" web2course \"), React.createElement(PathViewerItem, {\n    to: \"/part1\"\n  }, \" Partie 1 \"), React.createElement(PathViewerItem, {\n    selected: true\n  }, \" b) RESTful API \")), \"\\n\", React.createElement(_components.h1, null, \"b) Introduction aux RESTful API Node.js & Express\"), \"\\n\", React.createElement(InternalPageMenu, null, React.createElement(InternalPageMenuItem, null, \" Introduction aux RESTful API & conventions \"), React.createElement(InternalPageMenuItem, null, \" Configuration & démarrage d'une RESTful API en Express \"), React.createElement(InternalPageMenuItem, null, \" Les fonctions middleware en Express \"), React.createElement(InternalPageMenuItem, null, \" Définition d'une route en Express \"), React.createElement(InternalPageMenuItem, null, \" Opération de lecture \"), React.createElement(InternalPageMenuItem, null, \" Chemin et paramètres de route \"), React.createElement(InternalPageMenuItem, null, \" Chemin et paramètres de requête \"), React.createElement(InternalPageMenuItem, null, \" Opération de création & parsing du body \"), React.createElement(InternalPageMenuItem, null, \" Client REST \"), React.createElement(InternalPageMenuItem, null, \" Répondre avec un code de statut HTTP \"), React.createElement(InternalPageMenuItem, null, \" Opérations de suppression & de modification \"), React.createElement(InternalPageMenuItem, null, \" Exercice 1.1 : Création d'une RESTfull API non protégée pour myMovies \"), React.createElement(InternalPageMenuItem, null, \" 🍬 Exercice 1.2 : Gestion de la pagination, de l'ordre de présentation et du filtrage de films \")), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" Introduction aux RESTful API & conventions \")), \"\\n\", React.createElement(_components.h2, null, \"C'est quoi une application REST ?\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"REST\"), \" vient de \", React.createElement(_components.strong, null, \"RE\"), \"presentational \", React.createElement(_components.strong, null, \"S\"), \"tate \", React.createElement(_components.strong, null, \"T\"), \"ransfer : c'est un style architectural pour construire des applications web extensibles, où les client et serveurs sont séparés.\"), \"\\n\", React.createElement(_components.p, null, \"Dans une application REST, une \", React.createElement(_components.strong, null, \"interface uniforme\"), \" (ou API) est définie afin de permettre à des applications de coopérer.\"), \"\\n\", React.createElement(_components.p, null, \"Toute application REST se doit d'être \", React.createElement(_components.strong, null, \"stateless\"), \" : il n'y a pas d'enregistrement du contexte d'une session sur le serveur pour comprendre une requête d'un client.\", React.createElement(_components.br), \"\\n\", \"Ainsi, les requêtes clientes ne dépendent pas d'un historique de requêtes, elles sont autoportantes.\"), \"\\n\", React.createElement(_components.p, null, \"Une RESTful API met à disposition des \", React.createElement(_components.strong, null, \"opérations\"), \" sur des \", React.createElement(_components.strong, null, \"ressources\"), \" via :\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"des \", React.createElement(_components.strong, null, \"URI\"), \" ; il y a donc une adresse unique pur chaque ressource ;\"), \"\\n\", React.createElement(_components.li, null, \"des \", React.createElement(_components.strong, null, \"méthodes HTTP\"), \" (GET, POST, DELETE, PATCH, PUT) représentant les opérations possibles (on parle souvent d'opérations \", React.createElement(_components.strong, null, \"CRUD\"), \", des opérations de type Create, Read, Update ou Delete) ;\"), \"\\n\", React.createElement(_components.li, null, \"des \", React.createElement(_components.strong, null, \"représentations\"), \" des ressources compréhensibles tant par les clients que les serveurs ; les ressources sont représentées par leur \\\"Media type\\\" : \", React.createElement(_components.strong, null, \"JSON\"), \", \", React.createElement(_components.strong, null, \"XML\"), \", \", React.createElement(_components.strong, null, \"HTML\"), \", \", React.createElement(_components.strong, null, \"TXT\"), \", \", React.createElement(_components.strong, null, \"JPEG\"), \"... ; dans le cadre de ce cours, les ressources seront quasi toujours représentées via du \", React.createElement(_components.strong, null, \"JSON\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"Conventions REST\"), \"\\n\", React.createElement(_components.p, null, \"Le type d'opération CRUD (Create, Read, Update ou Delete) sur une ressource est défini via la méthode http de la requête.\", React.createElement(_components.br), \"\\n\", \"Les opérations possibles sont :\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"GET = Read\"), \"\\n\", React.createElement(_components.li, null, \"POST = Create\"), \"\\n\", React.createElement(_components.li, null, \"DELETE = Delete 😉\"), \"\\n\", React.createElement(_components.li, null, \"PATCH / PUT = Update\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"PATCH = Update d'une ou plusieurs propriété(s) de la ressources\"), \"\\n\", React.createElement(_components.li, null, \"PUT = Update de toutes les propriétés de la ressources, ou création si la ressource n'existe pas\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Voici un exemple d'application de ces conventions REST dans le cadre d'une RESTful API permettant de gérer des films :\"), \"\\n\", React.createElement(_components.p, null, \"| URI | Méthode HTTP | Opération |\\r\\n|---|---|---|\\r\\n| \", React.createElement(_components.strong, null, \"films\"), \" | GET | READ ALL : Lire toutes les ressources de la collection |\\r\\n| \", React.createElement(_components.strong, null, \"films?minimum-duration=value\"), \" | GET | READ ALL FILTERED : Lire toutes les ressources de la collection selon le filtre donné |\\r\\n| \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"films/{id}\")), \" | GET | READ ONE : Lire la ressource identifiée |\\r\\n| \", React.createElement(_components.strong, null, \"films\"), \" | POST | CREATE ONE : Créer une ressource basée sur les données de la requête |\\r\\n| \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"films/{id}\")), \" | DELETE | DELETE ONE : Effacer la ressource identifiée |\\r\\n| \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"films/{id}\")), \" | PUT | UPDATE ONE : Remplacer l'entièreté de la ressource par les données de la requête |\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"Si cette API est hébergée à l'URL racine \", React.createElement(_components.strong, null, \"http://ilovemoovies.org\"), \", alors nous pourrions identifier une ressource de type \", React.createElement(_components.strong, null, \"films\"), \" de cette façons : \", React.createElement(_components.strong, null, \"http://ilovemoovies.org/films/10\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Pour lire cette ressource, il faudrait faire une requête http de type \", React.createElement(_components.strong, null, \"GET\"), \" sur cette \", React.createElement(_components.strong, null, \"URL\"), \" : \", React.createElement(_components.strong, null, \"http://ilovemoovies.org/films/10\"), \".\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" Configuration & démarrage d'une RESTful API en Express \")), \"\\n\", React.createElement(_components.p, null, \"Nous avons précédemment généré une application Express à l'aide du générateur d'applications.\"), \"\\n\", React.createElement(_components.p, null, \"Veuillez avoir devant vous le code de cette application car nous allons découvrir le rôle des répertoires et fichiers importants générés par \", React.createElement(_components.strong, null, \"express-generator\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Nous allons maintenant nous attarder à comprendre les concepts associés à l'utilisation d'Express, mais en focalisant sur ceux utiles aux applications REST.\"), \"\\n\", React.createElement(_components.p, null, \"Voici comment une requête faite à une application Express est traitée :\"), \"\\n\", React.createElement(ScrollableImage, {\n    name: \"express-flow.png\",\n    minWidth: \"800px\",\n    maxWidth: \"800px\"\n  }), \"\\n\", React.createElement(\"figcaption\", null, \"Flux d'une requête vers une application Express [R.51]\"), \"\\n\", React.createElement(_components.p, null, \"Dans ce flux de traitement d'une requête, la responsabilité des développeurs est de s'occuper de la partie \\\"Middleware\\\".\"), \"\\n\", React.createElement(_components.p, null, \"La grande majorité du code écrit sera du \\\"routing middleware\\\" : notre code s'occupera de répondre à des requêtes clientes pour différentes URLs et méthodes HTTP (GET, POST...).\"), \"\\n\", React.createElement(_components.p, null, \"On l'a déjà vu, la configuration d'une application Express, comme toutes applications Node.js, est faite au sein de \", React.createElement(_components.strong, null, \"package.json\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"En fonction de comment est configuré l'application, on la démarrera via \", React.createElement(_components.strong, null, \"npm start\"), \", \", React.createElement(_components.strong, null, \"npm run dev\"), \"...\"), \"\\n\", React.createElement(_components.p, null, \"Un \", React.createElement(_components.strong, null, \"serveur web intégré\"), \" à nos applications Express est démarré au sein du fichier \", React.createElement(_components.strong, null, \"bin/www\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"C'est ce fichier que vous devez mettre à jour si par exemple vous souhaitez que votre application fonctionne sur un port différent que le port par défaut \", React.createElement(_components.strong, null, \"3000\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Un serveur intégré est différent d'une application web offerte par un serveur standalone comme Apache, Tomcat... C'est un serveur très léger dédié à votre application.\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" Les fonctions middleware en Express \")), \"\\n\", React.createElement(_components.h2, null, \"C'est quoi une fonction middleware ?\"), \"\\n\", React.createElement(_components.p, null, \"Les fonctions middleware s'occupent du traitement des requêtes des clients et de la préparation des réponses :\"), \"\\n\", React.createElement(ScrollableImage, {\n    name: \"middlewares.jpg\",\n    minWidth: \"638px\",\n    maxWidth: \"638px\"\n  }), \"\\n\", React.createElement(\"figcaption\", null, \"Les fonctions Middleware et Express [R.52]\"), \"\\n\", React.createElement(_components.p, null, \"Une fonction middleware a accès aux objets de la requête et de la réponse et peut utiliser la requête et la réponse pour ajouter, par exemple, un log, pour autoriser un utilisateur, pour parser des données Json vers des objets JS, pour servir des fichiers statiques, pour faire un traitement pour une route bien spécifique...\"), \"\\n\", React.createElement(_components.p, null, \"Si une fonction middleware ne termine pas le cycle de requête-réponse, elle doit appeler \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"next()\")), \" pour permettre à d'autres fonctions qui sont dans la queue de pouvoir être exécutées.\"), \"\\n\", React.createElement(_components.p, null, \"Voici les éléments associés à l'appel d'une fonction middleware :\"), \"\\n\", React.createElement(ScrollableImage, {\n    name: \"middleware-function.png\",\n    minWidth: \"944px\",\n    maxWidth: \"944px\"\n  }), \"\\n\", React.createElement(\"figcaption\", null, \"Une fonction middleware [R.53]\"), \"\\n\", React.createElement(_components.p, null, \"Il existe différent types de fonctions middleware ayant différents cas d'utilisation :\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Application-level middleware\"), \" : la fonction middleware est liée à l'objet \", React.createElement(_components.strong, null, \"app\"), \" ;\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Router-level middleware\"), \" : la fonction middleware est liée à un objet de type \", React.createElement(_components.strong, null, \"express.router()\"), \", elle est très similaire au \\\"application-level middleware\\\" ;\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Error-handling middleware\"), \" : fonction de gestion des erreurs qui se définit comme les fonctions app ou router level middleware, mais qui contient un quatrième paramètre nommé \", React.createElement(_components.strong, null, \"error\"), \".\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Built-in middleware\"), \" : fonctions middleware mises à disposition par Express directement :\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"express.static\"), \" : pour servir des assets statiques ;\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"express.json\"), \" : pour parser le body de requêtes en JSON vers des objets JS ;\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"express.urlencoded\"), \" : pour parser des requêtes dont le body est de type \\\"urlencoded\\\" (type par défaut des formulaires) vers des objets JS.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Third-party middleware\"), \" : fonctions mises à disposition par la communauté et installables via npm, comme par exemple la fonction middleware \", React.createElement(_components.strong, null, \"cookieParser\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Si vous souhaitez approfondir, nous vous conseillons \", React.createElement(_components.a, {\n    href: \"https://expressjs.com/en/guide/using-middleware.html#middleware.third-party\"\n  }, \"la documentation d'Express\"), \" \", React.createElement(_components.a, {\n    href: \"/js2/references/#r54\"\n  }, \"[R.54]\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"La suite fournit quelques exemples de fonctions middleware qui seront soit plus tard rencontrées dans notre code, soit sont extraites de \", React.createElement(_components.a, {\n    href: \"/js2/references/#r54\"\n  }, \"Using middleware [R.54]\"), \".\"), \"\\n\", React.createElement(_components.h2, null, \"Application-level middleware : exemple\"), \"\\n\", React.createElement(_components.p, null, \"Voici une fonction middleware qui sera exécutée à chaque fois qu'il y a une requête, quelque soit le chemin (ou path) associé à la requête :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"var express = require('express');\\r\\nvar app = express();\\r\\napp.use((req, res, next) => {\\r\\n  console.log('Time:', Date.now());\\r\\n  next();\\r\\n});\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Router-level middleware : exemple\"), \"\\n\", React.createElement(_components.p, null, \"Voici une partie du code qui se trouverait au sein d'un router de pizzas, dans le fichier \", React.createElement(_components.strong, null, \"/routes/pizzas.js\"), \" :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"var router = express.Router();\\r\\n\\r\\nrouter.use((req, res, next) => {\\r\\n  console.log('Time:', Date.now());\\r\\n  next();\\r\\n});\\r\\n\\r\\nrouter.get('/',(req, res, next) => {\\r\\n  return res.json(menu);\\r\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"La première fonction middleware ne contient pas de méthode HTTP, ni de chemin, elle s'applique donc à toutes les routes associées au router de pizzas.\", React.createElement(_components.br), \"\\n\", \"Voici le code qui permettrait, dans \", React.createElement(_components.strong, null, \"/app.js\"), \", d'appeler le router de pizzas :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"var pizzaRouter = require('./routes/pizzas');\\r\\napp.use('/pizzas', pizzaRouter);\\n\")), \"\\n\", React.createElement(_components.p, null, \"Si le router est utilisé de cette façon, en relisant l'avant-dernier snippet, on voit que :\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"la première fonction (où il y a un \", React.createElement(_components.code, null, \"console.log\"), \") s'applique donc à toutes les routes qui commencent par '/pizzas' ;\"), \"\\n\", React.createElement(_components.li, null, \"la deuxième fonction middleware s'appliquent seulement aux requêtes de type GET sur la route (ou le chemin) '/pizzas' (équivalent de la route '/pizzas/').\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"Error-handling middleware : exemple\"), \"\\n\", React.createElement(_components.p, null, \"Ce type de middleware est à définir après tous les middlewares pouvant générer une erreur et est appelé via \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"next(err)\")), \" dans une fonction middleware où un souci est détecté.\"), \"\\n\", React.createElement(_components.p, null, \"Voici la définition d'un \\\"error handler\\\" :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"app.use((err, req, res, next) => {\\r\\n  console.error(err.stack)\\r\\n  res.status(500).send('Something broke!')\\r\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"Attention, il y a bien 4 paramètres au lieu des 3 habituels pour les autres types de fonctions middleware.\"), \"\\n\", React.createElement(_components.h2, null, \"Built-in middleware & third-party middleware : exemple\"), \"\\n\", React.createElement(_components.p, null, \"Dans \", React.createElement(_components.strong, null, \"app.js\"), \", on trouve pas mal d'exemples de ces types de middleware. Ils sont commentés ci-dessous dans le code :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"var express = require('express');\\r\\nvar path = require('path');\\r\\nvar cookieParser = require('cookie-parser');\\r\\nvar logger = require('morgan');\\r\\n\\r\\nvar app = express();\\r\\n\\r\\napp.use(logger('dev')); // HTTP request logger\\r\\napp.use(express.json()); // Parse requests with JSON payloads\\r\\napp.use(express.urlencoded({ extended: false })); // Parse requests with URL-\\r\\n                                                  // encoded payload \\r\\napp.use(cookieParser()); // Parse cookie header (req.cookies)\\r\\napp.use(express.static(path.join(__dirname, 'public'))); // Serve static assets\\n\")), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" Définition d'une route en Express \")), \"\\n\", React.createElement(_components.h2, null, \"Définition d'une route\"), \"\\n\", React.createElement(_components.p, null, \"Le \\\"Routing\\\", ou routage, contrôle la réponse à une requête client pour un \", React.createElement(_components.strong, null, \"endpoint\"), \" / \", React.createElement(_components.strong, null, \"URI\"), \" / \", React.createElement(_components.strong, null, \"PATH\"), \" et une méthode HTTP.\"), \"\\n\", React.createElement(_components.p, null, \"On va définir une route soit sur l'objet \", React.createElement(_components.strong, null, \"app\"), \", soit sur un \", React.createElement(_components.strong, null, \"router\"), \".\", React.createElement(_components.br), \"\\n\", \"Un objet de type \", React.createElement(_components.strong, null, \"router\"), \" permet de regrouper toutes les routes associées à un type de ressources.\"), \"\\n\", React.createElement(_components.p, null, \"On définit une route de cette façon : \", React.createElement(_components.strong, null, \"app.\"), \" ou \", React.createElement(_components.strong, null, \"router.\"), \"  \", React.createElement(_components.strong, null, \"METHOD(PATH, MIDDLEWARE_FUNCTION)\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"👍 Dans notre cours, nous vous recommandons d'organiser vos routes par type de ressources et donc de mettre en place un router.\"), \"\\n\", React.createElement(_components.h2, null, \"Création d'un projet\"), \"\\n\", React.createElement(_components.p, null, \"Nous allons maintenant réaliser un tutoriel pour créer notre toute première RESTful API.\", React.createElement(_components.br), \"\\n\", \"Nous allons créer une API pour permettre à notre site web de la pizzeria de bénéficier d'opérations sur des ressources de type \\\"pizzas\\\".\"), \"\\n\", React.createElement(_components.p, null, \"Dans votre repo \", React.createElement(_components.strong, null, \"web2\"), \", veuillez créer le répertoire \", React.createElement(_components.strong, null, \"/tutorials/pizzeria/api\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Veuillez ouvrir un terminal au niveau de ce répertoire.\"), \"\\n\", React.createElement(_components.p, null, \"Dans ce répertoire, veuillez générer une application express nommée \", React.createElement(_components.strong, null, \"basic\"), \".\", React.createElement(_components.br), \"\\n\", \"Pour ce faire :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"npx express-generator --no-view basic\\n\")), \"\\n\", React.createElement(_components.p, null, \"Veuillez installer les dépendances :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"cd basic\\r\\nnpm i\\n\")), \"\\n\", React.createElement(_components.p, null, \"Pour la suite du tutoriel, nous considérons que tous les chemins absolus démarrent du répertoire \", React.createElement(_components.strong, null, \"/tutorials/pizzeria/api/basic\"), \" (ou \", React.createElement(_components.strong, null, \"/web2/tutorials/pizzeria/api/basic\"), \" si l'on considère le nom du répertoire du repo).\"), \"\\n\", React.createElement(_components.p, null, \"Nous allons développer des RESTful API qui ne possèdent pas de serveur de fichiers statiques.\", React.createElement(_components.br), \"\\n\", \"On n'a donc pas besoin d'avoir un répertoire \", React.createElement(_components.strong, null, \"/public\"), \" ni d'un serveur statique.\", React.createElement(_components.br), \"\\n\", \"On peut donc effacer le répertoire \", React.createElement(_components.strong, null, \"/public\"), \" et supprimer le middleware de serveur de fichiers statiques au sein de \", React.createElement(_components.strong, null, \"/app.js\"), \" (en supprimant cette ligne) :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"app.use(express.static(path.join(__dirname, 'public'))); \\n\")), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" Opération de lecture \")), \"\\n\", React.createElement(_components.p, null, \"Nous souhaitons par commencer à développer une opération permettant de lire toutes les ressources de type \\\"pizzas\\\". En effet, nous aimerions plus tard que notre IHM reçoive de notre API le menu des pizzas.\"), \"\\n\", React.createElement(_components.p, null, \"Veuillez créer un router pour traiter des ressources \", React.createElement(_components.strong, null, \"/pizzas\"), \" au sein de \", React.createElement(_components.strong, null, \"/routes/pizzas.js\"), \".\", React.createElement(_components.br), \"\\n\", \"Le plus simple est d'adapter \", React.createElement(_components.strong, null, \"indexRouter\"), \" dans \", React.createElement(_components.strong, null, \"app.js\"), \" en \", React.createElement(_components.strong, null, \"pizzaRouter\"), \" et \", React.createElement(_components.strong, null, \"/routers/index.js\"), \" en \", React.createElement(_components.strong, null, \"/routes/pizzas.js\"), \".\", React.createElement(_components.br), \"\\n\", \"Il est aussi possible de partir de rien et de créer \", React.createElement(_components.strong, null, \"pizzaRouter\"), \" dans \", React.createElement(_components.strong, null, \"app.js\"), \" et \", React.createElement(_components.strong, null, \"/routes/pizzas.js\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Pour l'opération de lecture de toutes les pizzas, selon les conventions REST, il faut faire une requête de type \", React.createElement(_components.strong, null, \"GET /pizzas\"), \".\", React.createElement(_components.br), \"\\n\", React.createElement(_components.strong, null, \"/routes/pizzas.js\"), \" doit donc offrir une route renvoyant toutes les pizzas qui existent dans le menu.\", React.createElement(_components.br), \"\\n\", \"Pour démarrer, nous souhaitons une application basique qui ne gère pas la persistance des données. Le menu est donc un Array d'objets, dont chaque objet représente une pizza.\"), \"\\n\", React.createElement(_components.p, null, \"Notre opération de lecture de pizza va renvoyer du JSON au client, c'est à dire une représentation textuelle du menu. Nous verrons plus tard ce qu'est réellement le JSON. A ce stade-ci, il est suffisant de connaître la fonction d'Express qui permet à un objet JS de circuler sur le réseau : \", React.createElement(_components.strong, null, \"res.json()\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Voici le code du router \", React.createElement(_components.strong, null, \"/routes/pizzas.js\"), \" :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"var express = require('express');\\r\\nvar router = express.Router();\\r\\n\\r\\nconst MENU = [\\r\\n  {\\r\\n    id: 1,\\r\\n    title: '4 fromages',\\r\\n    content: 'Gruyère, Sérac, Appenzel, Gorgonzola, Tomates',\\r\\n  },\\r\\n  {\\r\\n    id: 2,\\r\\n    title: 'Vegan',\\r\\n    content: 'Tomates, Courgettes, Oignons, Aubergines, Poivrons',\\r\\n  },\\r\\n  {\\r\\n    id: 3,\\r\\n    title: 'Vegetarian',\\r\\n    content: 'Mozarella, Tomates, Oignons, Poivrons, Champignons, Olives',\\r\\n  },\\r\\n  {\\r\\n    id: 4,\\r\\n    title: 'Alpage',\\r\\n    content: 'Gruyère, Mozarella, Lardons, Tomates',\\r\\n  },\\r\\n  {\\r\\n    id: 5,\\r\\n    title: 'Diable',\\r\\n    content: 'Tomates, Mozarella, Chorizo piquant, Jalapenos',\\r\\n  },\\r\\n];\\r\\n\\r\\n// Read all the pizzas from the menu\\r\\nrouter.get('/', (req, res, next) => {\\r\\n  console.log('GET /pizzas');\\r\\n  res.json(MENU);\\r\\n});\\r\\n\\r\\nmodule.exports = router;\\n\")), \"\\n\", React.createElement(_components.p, null, \"Et voici le code de \", React.createElement(_components.strong, null, \"app.js\"), \" (les parties modifiées sont surlignées) :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"var express = require('express');\\r\\nvar path = require('path');\\r\\nvar cookieParser = require('cookie-parser');\\r\\nvar logger = require('morgan');\\r\\n\\r\\nvar pizzaRouter = require('./routes/pizzas');\\r\\nvar usersRouter = require('./routes/users');\\r\\n\\r\\nvar app = express();\\r\\n\\r\\napp.use(logger('dev'));\\r\\napp.use(express.json());\\r\\napp.use(express.urlencoded({ extended: false }));\\r\\napp.use(cookieParser());\\r\\n\\r\\napp.use('/pizzas', pizzaRouter);\\r\\napp.use('/users', usersRouter);\\r\\n\\r\\nmodule.exports = app;\\n\")), \"\\n\", React.createElement(_components.p, null, \"Notons que nous pourrions effacer le router s'occupant des ressources de type \\\"users\\\", mais nous préférons le garder car plus tard nous souhaiterons gérer l'authentification d'utilisateurs.\"), \"\\n\", React.createElement(_components.p, null, \"Veuillez démarrer l'API (par défaut elle est configurée sur le port 3000 au sein de \", React.createElement(_components.strong, null, \"bin/www\"), \") :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"npm start\\n\")), \"\\n\", React.createElement(_components.p, null, \"Pour consommer l'opération de lecture via un browser, nous pouvons lire toutes les ressources de type \\\"pizzas\\\" ici :\\r\\n\", React.createElement(_components.a, {\n    href: \"http://localhost:3000/pizzas\"\n  }, \"http://localhost:3000/pizzas\")), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" Chemin et paramètres de route \")), \"\\n\", React.createElement(_components.p, null, \"Les \\\"route parameters\\\" sont des segments d'une URL qui sont utilisés pour capturer une valeur spécifiée à leur position dans l'URL. On récupère ces paramètres via l'objet \", React.createElement(_components.strong, null, \"req.params\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Pour notre pizzeria, nous souhaitons pouvoir lire une pizza identifiée par son \", React.createElement(_components.strong, null, \"id\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Nous allons donc ajouter le paramètre de route \", React.createElement(_components.strong, null, \"id\"), \".\", React.createElement(_components.br), \"\\n\", \"En respect des conventions REST, un client, pour faire appel à cette opération, devra faire une requête du genre : \", React.createElement(_components.strong, null, \"GET /pizzas/2\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Voici la nouvelle route permettant de traiter de cette opération, à ajouter dans le router \", React.createElement(_components.strong, null, \"/routes/pizza.js\"), \" :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"// Read the pizza identified by an id in the menu\\r\\nrouter.get('/:id', (req, res) => {\\r\\n  console.log(`GET /pizzas/${req.params.id}`);\\r\\n\\r\\n  const indexOfPizzaFound = MENU.findIndex((pizza) => pizza.id == req.params.id);\\r\\n\\r\\n  if (indexOfPizzaFound < 0) return res.sendStatus(404);\\r\\n\\r\\n  res.json(MENU[indexOfPizzaFound]);\\r\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"Veuillez redémarrer l'API (\", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"CTRL c\")), \" puis \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"npm start\")), \").\"), \"\\n\", React.createElement(_components.p, null, \"Pour consommer cette nouvelle opération via un browser, nous pouvons lire la ressource de type \\\"pizzas\\\" identifiée par \", React.createElement(_components.strong, null, \"2\"), \" dans le menu ainsi :\\r\\n\", React.createElement(_components.a, {\n    href: \"http://localhost:3000/pizzas/2\"\n  }, \"http://localhost:3000/pizzas/2\")), \"\\n\", React.createElement(_components.p, null, \"Le browser fait bien une requête du genre : \", React.createElement(_components.strong, null, \"GET /pizzas/2\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Le paramètre de la route \\\"2\\\" est récupéré dans l'URL de la route par Express et est offert via \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"req.params.id\")), \".\"), \"\\n\", React.createElement(_components.p, null, \"N'hésitez pas à faire une requête pour un identifiant n'existant pas de le menu pour voir ce qui se passe : \", React.createElement(_components.a, {\n    href: \"http://localhost:3000/pizzas/666\"\n  }, \"http://localhost:3000/pizzas/666\")), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" Chemin et paramètres de requête \")), \"\\n\", React.createElement(_components.p, null, \"Les \\\"query parameters\\\" sont des paramètres qui peuvent être ajoutés à une URL.\", React.createElement(_components.br), \"\\n\", \"On récupère ces paramètres via l'objet \", React.createElement(_components.strong, null, \"req.query\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Pour notre pizzeria, nous souhaitons pouvoir lire toutes les ressources de type \\\"pizzas\\\" triées par ordre ascendant ou descendant du titre.\"), \"\\n\", React.createElement(_components.p, null, \"En respect des conventions REST, un client, pour faire appel à cette opération, devra faire une requête du genre : \", React.createElement(_components.strong, null, \"GET /pizzas?order=title\"), \" pour le tri ascendant ou \", React.createElement(_components.strong, null, \"GET /pizzas?order=-title\"), \" pour le tri descendant .\"), \"\\n\", React.createElement(_components.p, null, \"Il n'y a donc pas de nouvelle route à ajouter ici. En effet, ça reste une requête de type GET sur la route \\\"/pizzas\\\".\"), \"\\n\", React.createElement(_components.p, null, \"Veuillez donc mettre à jour \", React.createElement(_components.strong, null, \"/routes/pizza.js\"), \" pour la lecture de toutes les pizzas :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"/* Read all the pizzas from the menu\\r\\n   GET /pizzas?order=title : ascending order by title\\r\\n   GET /pizzas?order=-title : descending order by title\\r\\n*/\\r\\nrouter.get('/', (req, res, next) => {\\r\\n  const orderByTitle =\\r\\n    req?.query?.order?.includes('title')\\r\\n      ? req.query.order\\r\\n      : undefined;\\r\\n  let orderedMenu;\\r\\n  console.log(`order by ${orderByTitle ?? 'not requested'}`);\\r\\n  if (orderByTitle)\\r\\n    orderedMenu = [...MENU].sort((a, b) => a.title.localeCompare(b.title));\\r\\n  if (orderByTitle === '-title') orderedMenu = orderedMenu.reverse();\\r\\n\\r\\n  console.log('GET /pizzas');\\r\\n  res.json(orderedMenu ?? MENU);\\r\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"Veuillez redémarrer l'API (\", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"CTRL c\")), \" puis \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"npm start\")), \").\"), \"\\n\", React.createElement(_components.p, null, \"Pour consommer cette nouvelle opération via un browser, nous pouvons lire toutes les ressources de type \\\"pizzas\\\" triée par leur titre de manière descendante ainsi :\\r\\n\", React.createElement(_components.a, {\n    href: \"http://localhost:3000/pizzas?order=-title\"\n  }, \"http://localhost:3000/pizzas?order=-title\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"N'hésitez pas à tester d'autres tris.\"), \"\\n\", React.createElement(_components.p, null, \"💭 Est-ce qu'il y a un morceau de code que vous ne comprenez pas dans ce code-ci et cela vous gêne ? Si oui, vous trouverez plus d'info ici : \", React.createElement(_components.a, {\n    href: \"#f2\"\n  }, \"f.2) Spread operator au niveau d'un array\"), \".\", React.createElement(_components.br), \"\\n\", \"Si non, c'est OK de ne pas comprendre tous les éléments du code à ce stade-ci.\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" Opération de création & parsing du body \")), \"\\n\", React.createElement(_components.p, null, \"Nous souhaitons développer une opération permettant de créer une ressource de type \\\"pizzas\\\".\", React.createElement(_components.br), \"\\n\", \"Selon les conventions REST, il faut faire une requête de type \", React.createElement(_components.strong, null, \"POST /pizzas\"), \" qui offre une représentation de la ressource à créer. La représentation utilisée est le JSON que nous verrons plus en détails plus tard.\", React.createElement(_components.br), \"\\n\", \"Si nous souhaitons créer une ressource dont le titre est \\\"Magic Green\\\" et le contenu est \\\"Epinards, Brocolis, Olives vertes, Basilic\\\", la représentation de la ressource à créer sera la suivante :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-json\"\n  }, \"{\\r\\n    \\\"title\\\":\\\"Magic Green\\\",\\r\\n    \\\"content\\\":\\\"Epinards, Brocolis, Olives vertes, Basilic\\\"\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Selon les conventions REST, une requête de création est de type POST et contient ses paramètres\\r\\nau sein du body de la requête.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"/routes/pizzas.js\"), \" doit offrir une nouvelle route permettant d'ajouter une nouvelle pizza au menu, qui est un array d'objets. Une nouvelle pizza doit donc être ajoutée à une variable, un array, qui est contenu dans la mémoire vive de votre machine.\", React.createElement(_components.br), \"\\n\", \"Lorsque l'ajout d'une pizza au menu a réussi, nous souhaitons renvoyer la représentation de la nouvelle ressource au client. Ainsi, le client aura notamment accès à l'id de la pizza créé par l'API.\"), \"\\n\", React.createElement(_components.p, null, \"Voici le code du router \", React.createElement(_components.strong, null, \"/routes/pizzas.js\"), \" pour la nouvelle opération, veuillez le rajouter dans votre application :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"// Create a pizza to be added to the menu.\\r\\nrouter.post('/', (req, res) => {\\r\\n  const title = req?.body?.title?.length !== 0 ? req.body.title : undefined;\\r\\n  const content = req?.body?.content?.length !== 0 ? req.body.content : undefined;\\r\\n\\r\\n  console.log('POST /pizzas');\\r\\n\\r\\n  if (!title || !content) return res.sendStatus(400); // error code '400 Bad request'\\r\\n\\r\\n  const lastItemIndex = MENU?.length !== 0 ? MENU.length - 1 : undefined;\\r\\n  const lastId = lastItemIndex !== undefined ? MENU[lastItemIndex]?.id : 0;\\r\\n  const nextId = lastId + 1;\\r\\n\\r\\n  const newPizza = {\\r\\n    id: nextId,\\r\\n    title: title,\\r\\n    content: content,\\r\\n  };\\r\\n\\r\\n  MENU.push(newPizza);\\r\\n\\r\\n  res.json(newPizza);\\r\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"La représentation de la ressource à créer est parsée dans l'objet \", React.createElement(_components.strong, null, \"req.body\"), \" grâce à la fonction middleware \", React.createElement(_components.strong, null, \"express.json()\"), \" appelée dans \", React.createElement(_components.strong, null, \"/app.js\"), \" :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"app.use(express.json());\\n\")), \"\\n\", React.createElement(_components.p, null, \"Il est donc important de ne pas retirer cette ligne lorsque l'on crée une RESTful API.\"), \"\\n\", React.createElement(_components.p, null, \"OK, c'est bien, mais comment tester ce nouveau code ?\"), \"\\n\", React.createElement(_components.p, null, \"Le browser permet de facilement créer des requêtes de type GET, mais pas des requêtes de type POST...\", React.createElement(_components.br), \"\\n\", \"Nous avons donc besoin d'un client léger permettant de faire des requêtes HTTP.\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" Client REST \")), \"\\n\", React.createElement(_components.h2, null, \"Introduction\"), \"\\n\", React.createElement(_components.p, null, \"Dans le cadre de ce cours, tout comme généralement dans un environnement professionnel, nous souhaitons pouvoir développer une API indépendamment du développement d'une IHM.\"), \"\\n\", React.createElement(_components.p, null, \"En effet, cela prendrait trop de temps de devoir développer un frontend (HTML / JavaScript / CSS) pour tester nos API.\"), \"\\n\", React.createElement(_components.p, null, \"Nous allons donc utiliser un client léger permettant de faire des requêtes à nos API.\", React.createElement(_components.br), \"\\n\", \"Il en existe de nombreux, comme REST Client \", React.createElement(_components.a, {\n    href: \"/js2/references/#r55\"\n  }, \"[R.55]\"), \" ou Postman \", React.createElement(_components.a, {\n    href: \"/js2/references/#r56\"\n  }, \"[R.56]\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Pour ce cours, nous vous présentons et recommandons d'utiliser REST Client pour écrire et exécuter vos requêtes HTTP.\"), \"\\n\", React.createElement(_components.h2, null, \"REST Client\"), \"\\n\", React.createElement(_components.p, null, \"Dans le cadre de ce cours, nous utilisons REST Client \", React.createElement(_components.a, {\n    href: \"/js2/references/#r55\"\n  }, \"[R.55]\"), \" de Visual Studio Code pour tester nos API.\"), \"\\n\", React.createElement(_components.p, null, \"Pour installer REST Client au sein de VS Code, veuillez cliquer sur l'onglet \", React.createElement(_components.strong, null, \"Extensions\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Recherchez l'extension \", React.createElement(_components.strong, null, \"REST Client\"), \" et cliquez sur \", React.createElement(_components.strong, null, \"Install\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Quelques notions pour utiliser REST Client :\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Il faut créer un fichier \", React.createElement(_components.strong, null, \".http\"), \" (ou \", React.createElement(_components.strong, null, \".rest\"), \") contenant les requêtes vers vos RESTful APIs.\", React.createElement(_components.br), \"\\n\", \"NB : Il est approprié de créer un fichier par par type de ressources.\"), \"\\n\", React.createElement(_components.li, null, \"Chaque requête est introduite par \", React.createElement(_components.strong, null, \"###\"), \" (3 \\\"\", React.createElement(_components.strong, null, \"#\"), \"\\\"\\\" ou plus) ; voici la requête permettant de lire toutes les pizzas :\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-http\"\n  }, \"### Read all pizzas\\r\\nGET http://localhost:3000/pizzas\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Pour exécuter une requête, il suffit de cliquer sur \", React.createElement(_components.strong, null, \"Send Request\"), \".\"), \"\\n\", React.createElement(_components.li, null, \"Lorsqu'on envoie des données au format JSON, il est important d'avoir un espace avant les accolades (avant le \\\"\", React.createElement(_components.strong, null, \"{\"), \"\\\" ).\"), \"\\n\", React.createElement(_components.li, null, \"On peut définir des \\\"\", React.createElement(_components.strong, null, \"File variables\"), \"\\\" via ce genre de syntaxe : \", React.createElement(_components.strong, null, \"@baseUrl = http://localhost:3000\"), \".\"), \"\\n\", React.createElement(_components.li, null, \"Pour utiliser la variable \", React.createElement(_components.strong, null, \"baseUrl\"), \", il suffit de la mettre entre double accolades. Par exemple, voici la requête permettant de lire toutes les pizzas :\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-http\"\n  }, \"### Read all pizzas with File variable\\r\\n@baseUrl = http://localhost:3000\\r\\nGET {{baseUrl}}/pizzas\\n\")), \"\\n\", React.createElement(_components.p, null, \"Nous allons maintenant tester l'API de la pizzeria que nous avons créée pour toutes ses opérations.\"), \"\\n\", React.createElement(_components.p, null, \"Au sein de VS Code, dans votre projet \", React.createElement(_components.strong, null, \"/tutorials/pizzeria/api/basic\"), \", veuillez créer un répertoire nommé \", React.createElement(_components.strong, null, \"REST Client\"), \". Dans ce répertoire, veuillez créer un fichier nommé \", React.createElement(_components.strong, null, \"pizzas.http\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Dans \", React.createElement(_components.strong, null, \"pizzas.http\"), \", veuillez ajouter cette requête pour la lecture de toutes les pizzas et exécutez la :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-http\"\n  }, \"### Read all pizzas with File variable\\r\\n@baseUrl = http://localhost:3000\\r\\nGET {{baseUrl}}/pizzas\\n\")), \"\\n\", React.createElement(_components.p, null, \"Est-ce que cela fonctionne bien ?  Avez vous bien démarré votre API ?\", React.createElement(_components.br), \"\\n\", \"Vous devriez obtenir le même résultat que si vous accédiez à votre API à l'aide du browser.\"), \"\\n\", React.createElement(_components.p, null, \"Au sein de \", React.createElement(_components.strong, null, \"pizzas.http\"), \", veuillez ajouter ces deux requêtes pour la lecture de toutes les pizzas en les triant selon leur titre :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-http\"\n  }, \"### Read all pizzas sorted by title (ascending)\\r\\nGET {{baseUrl}}/pizzas/?order=+title\\r\\n\\r\\n### Read all pizzas sorted by title (descending)\\r\\nGET {{baseUrl}}/pizzas/?order=-title\\n\")), \"\\n\", React.createElement(_components.p, null, \"Veuillez exécuter ces deux requêtes.\"), \"\\n\", React.createElement(_components.p, null, \"Il semble que nous sommes prêts pour créer une requête appelant l'opération de création d'une pizza.\"), \"\\n\", React.createElement(_components.p, null, \"Au sein de \", React.createElement(_components.strong, null, \"pizzas.http\"), \", veuillez ajouter cette requête pour la création d'une pizza :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-http\"\n  }, \"### Create a pizza\\r\\nPOST {{baseUrl}}/pizzas\\r\\nContent-Type: application/json\\r\\n\\r\\n{\\r\\n    \\\"title\\\":\\\"Magic Green\\\",\\r\\n    \\\"content\\\":\\\"Epinards, Brocolis, Olives vertes, Basilic\\\"\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"On remarque qu'il est important de mettre une ligne vide avant les accolades représentant le body de la requête.  N'hésitez pas à tester cette requête avec ou sans la ligne vide pour y croire.\"), \"\\n\", React.createElement(_components.p, null, \"💭 Comment tester que le bon fonctionnement de l'opération de création ?\"), \"\\n\", React.createElement(_components.p, null, \"Et bien il suffit d'exécuter l'opération de lecture de toutes les pizzas 😎 !\\r\\nSi la nouvelle ressource apparaît, c'est qu'elle a bien été créée !\\r\\nFaites le test.\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" Répondre avec un code de statut HTTP \")), \"\\n\", React.createElement(_components.p, null, \"On ne peut pas toujours renvoyer du JSON suite à une requête client ainsi qu'un code HTTP correspondant au fait que tout est OK (\\\"200 OK\\\").\"), \"\\n\", React.createElement(_components.p, null, \"Quand vous exécutez cette requête :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-http\"\n  }, \"### Read all pizzas with File variable\\r\\nGET {{baseUrl}}/pizzas\\n\")), \"\\n\", React.createElement(_components.p, null, \"Vous faites appel à l'opération de lecture de toutes les pizzas. La dernière ligne de cette opération est la suivante :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"res.json(orderedMenu ?? MENU);\\n\")), \"\\n\", React.createElement(_components.p, null, \"En fait, la fonction \", React.createElement(_components.strong, null, \"json\"), \" renvoie une réponse au format JSON, mais de plus, elle renvoie un \\\"status code\\\" \", React.createElement(_components.strong, null, \"200\"), \" indiquant au client que tout s'est bien passé.\"), \"\\n\", React.createElement(_components.p, null, \"Au sein de \", React.createElement(_components.strong, null, \"pizzas.http\"), \", veuillez ajouter cette requête pour tenter de créer une pizza en oubliant un paramètre :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-http\"\n  }, \"### Create a pizza which lacks a property\\r\\nPOST {{baseUrl}}/pizzas\\r\\nContent-Type: application/json\\r\\n\\r\\n{\\r\\n    \\\"content\\\":\\\"Epinards, Brocolis, Olives vertes, Basilic\\\"\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Veuillez exécuter cette requête. Que se passe-t-il ?\", React.createElement(_components.br), \"\\n\", \"On récupère un code d'erreur \\\"400 Bad Request\\\".\"), \"\\n\", React.createElement(_components.p, null, \"En effet, lorsqu'on omet un paramètre dans la représentation de la ressource à créer, voici les lignes de code amenant au renvoi du code d'erreur 400 au sein de \", React.createElement(_components.strong, null, \"pizzas.js\"), \" :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"// Create a pizza to be added to the menu.\\r\\nrouter.post('/', (req, res) => {\\r\\n  const title = req?.body?.title?.length !== 0 ? req.body.title : undefined;\\r\\n  const content = req?.body?.content?.length !== 0 ? req.body.content : undefined;\\r\\n\\r\\n  console.log('POST /pizzas');\\r\\n\\r\\n  if (!title || !content) return res.sendStatus(400); // error code '400 Bad request'\\r\\n\\r\\n  const lastItemIndex = MENU?.length !== 0 ? MENU.length - 1 : undefined;\\r\\n  const lastId = lastItemIndex !== undefined ? MENU[lastItemIndex]?.id : 0;\\r\\n  const nextId = lastId + 1;\\r\\n\\r\\n  const newPizza = {\\r\\n    id: nextId,\\r\\n    title: title,\\r\\n    content: content,\\r\\n  };\\r\\n\\r\\n  MENU.push(newPizza);\\r\\n\\r\\n  res.json(newPizza);\\r\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"Le client est donc bien informé qu'il y a eu un problème lors de l'exécution de l'opération.\", React.createElement(_components.br), \"\\n\", \"Il pourrait par exemple utiliser cette information pour présenter un message d'erreur au niveau d'une IHM.\"), \"\\n\", React.createElement(_components.p, null, \"Voici les grandes catégories de \\\"status codes\\\" :\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Réponses informatives : \", React.createElement(_components.strong, null, \"100-199\")), \"\\n\", React.createElement(_components.li, null, \"Réponses en cas de succès : \", React.createElement(_components.strong, null, \"200-299\")), \"\\n\", React.createElement(_components.li, null, \"Redirections : \", React.createElement(_components.strong, null, \"300-399\")), \"\\n\", React.createElement(_components.li, null, \"Erreurs du client : \", React.createElement(_components.strong, null, \"400-499\")), \"\\n\", React.createElement(_components.li, null, \"Erreurs du serveur : \", React.createElement(_components.strong, null, \"500-599\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Voici les \\\"status codes\\\" que nous allons généralement utiliser :\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"200 OK\"), \" : tout s'est bien passé, Express ajoute ce code automatiquement pour nous quand nous utilisons une méthode comme \", React.createElement(_components.strong, null, \"res.json()\"), \".\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"400 Bad Request\"), \" : pour indiquer au client que la requête contient des paramètres non valides ou n'est pas complète.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"401 Unauthorized\"), \" : pour indiquer au client qu'il doit s'authentifier pour accéder à cette opération. On renvoie aussi ce code d'erreur quand un client fournit un mauvais username ou password.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"403 Forbidden\"), \" : le client est connu du serveur, mais il n'a pas les privilèges pour accéder à cette opération (par exemple, le client n'est pas admin et tente d'accéder à une opération seulement accessible à un admin).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"404 Not Found\"), \" : la ressource demandée n'existe pas, bien que l'URL semble valide.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"409 Conflict\"), \" : l'état du serveur entre en conflit avec la requête. Par exemple, la requête demande de créer un utilisateur qui existe déjà.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"500 Internal Server Error\"), \" : le serveur a rencontré une erreur qu'il ne peut pas régler. Par exemple, le serveur de base de données ne répond pas et ne permet donc pas d'accéder aux ressources.\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" Opérations de suppression & de modification \")), \"\\n\", React.createElement(_components.h2, null, \"Opération de suppression\"), \"\\n\", React.createElement(_components.p, null, \"Nous souhaitons développer une opération permettant de supprimer une ressource de type \\\"pizzas\\\" à l'aide de son identifiant.\", React.createElement(_components.br), \"\\n\", \"Selon les conventions REST, il faut faire une requête de type \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"DELETE /pizzas/{id}\")), \" contenant l'identifiant de la ressource à supprimer au sein de l'URL comme \\\"path parameter\\\".\"), \"\\n\", React.createElement(_components.p, null, \"Une opération de suppression ne contient donc pas de body et est de type DELETE.\"), \"\\n\", React.createElement(_components.p, null, \"Voici le code du router \", React.createElement(_components.strong, null, \"/routes/pizzas.js\"), \" pour la nouvelle opération, veuillez la rajouter dans votre application :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"// Delete a pizza from the menu based on its id\\r\\nrouter.delete('/:id', (req, res) => {\\r\\n  console.log(`DELETE /pizzas/${req.params.id}`);\\r\\n\\r\\n  const foundIndex = MENU.findIndex(pizza => pizza.id == req.params.id);\\r\\n\\r\\n  if (foundIndex < 0) return res.sendStatus(404);\\r\\n\\r\\n  const itemsRemovedFromMenu = MENU.splice(foundIndex, 1);\\r\\n  const itemRemoved = itemsRemovedFromMenu[0];\\r\\n\\r\\n  res.json(itemRemoved);\\r\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"Au sein de \", React.createElement(_components.strong, null, \"pizzas.http\"), \", veuillez ajouter cette requête pour supprimer la pizza possédant l'identifiant \\\"2\\\" :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-http\"\n  }, \"### Delete pizza identified by 2\\r\\nDELETE {{baseUrl}}/pizzas/2\\n\")), \"\\n\", React.createElement(_components.p, null, \"Veuillez exécuter cette requête et vérifier que la pizza a bien été supprimée.\"), \"\\n\", React.createElement(_components.h2, null, \"Opération de modification\"), \"\\n\", React.createElement(_components.p, null, \"Nous souhaitons développer une opération permettant de modifier une ressource de type \\\"pizzas\\\" à l'aide de son identifiant et de nouvelles valeurs pour ses propriétés.\", React.createElement(_components.br), \"\\n\", \"Selon les conventions REST, comme on accepte de modifier que certaines des propriétés d'une pizza, qu'il ne faut pas fournir toutes les propriétés d'une pizza, il faut faire une requête de type \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"PATCH /pizzas/{id}\")), \" contenant\\r\\nl'identifiant de la ressource à supprimer au sein de l'URL comme \\\"path parameter\\\" ainsi que les nouvelles données au sein du body de la requête.\"), \"\\n\", React.createElement(_components.p, null, \"Si nous souhaitons modifier une ressource identifiée par 6 en fournissant un nouveau titre \\\"Magic Green 2\\\", la représentation des données de la ressource à modifier sera la suivante :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-json\"\n  }, \"{\\r\\n    \\\"title\\\":\\\"Magic Green 2\\\"\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Selon les conventions REST, la requête de modification est de type PATCH et contient ses paramètres au sein du body de la requête.\"), \"\\n\", React.createElement(_components.p, null, \"Voici le code du router \", React.createElement(_components.strong, null, \"/routes/pizzas.js\"), \" pour la nouvelle opération, veuillez la rajouter dans votre application :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"// Update a pizza based on its id and new values for its parameters\\r\\nrouter.patch('/:id', (req, res) => {\\r\\n  console.log(`PATCH /pizzas/${req.params.id}`);\\r\\n\\r\\n  const title = req?.body?.title;\\r\\n  const content = req?.body?.content;\\r\\n\\r\\n  console.log('POST /pizzas');\\r\\n\\r\\n  if ((!title && !content) || title?.length === 0 || content?.length === 0) return res.sendStatus(400);\\r\\n\\r\\n  const foundIndex = MENU.findIndex(pizza => pizza.id == req.params.id);\\r\\n\\r\\n  if (foundIndex < 0) return res.sendStatus(404);\\r\\n\\r\\n  const updatedPizza = {...MENU[foundIndex], ...req.body};\\r\\n\\r\\n  MENU[foundIndex] = updatedPizza;\\r\\n\\r\\n  res.json(updatedPizza);\\r\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"Au sein de \", React.createElement(_components.strong, null, \"pizzas.http\"), \", veuillez ajouter cette requête pour modifier la pizza possédant l'identifiant \\\"6\\\" :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-http\"\n  }, \"### Update the pizza identified by 6\\r\\nPATCH {{baseUrl}}/pizzas/6\\r\\nContent-Type: application/json\\r\\n\\r\\n{\\r\\n    \\\"title\\\":\\\"Magic Green 2\\\"\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Veuillez exécuter cette requête et vérifier que la pizza a bien été modifiée.\"), \"\\n\", React.createElement(_components.p, null, \"💭 Cela ne fonctionne pas ?\", React.createElement(_components.br), \"\\n\", \"Avez vous précédemment exécuté la requête permettant de créer une sixième pizza.\"), \"\\n\", React.createElement(_components.p, null, \"Si tout fonctionne bien, faites un \", React.createElement(_components.strong, null, \"commit\"), \" de votre repo (\", React.createElement(_components.strong, null, \"web2\"), \") avec le message \\\"\", React.createElement(_components.strong, null, \"api-basic\"), \"\\\".\"), \"\\n\", React.createElement(_components.p, null, \"En cas de souci, vous pouvez accéder au code du tutoriel ici : \", React.createElement(_components.a, {\n    href: \"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/basic\"\n  }, \"api-basic\"), \".\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" Exercice 1.1 : Création d'une RESTfull API non protégée pour myMovies \")), \"\\n\", React.createElement(_components.p, null, \"Veuillez continuer le développement de \", React.createElement(_components.strong, null, \"myMovies\"), \". Vous allez créer la première version de la RESTful API de \", React.createElement(_components.strong, null, \"myMovies\"), \", sous Express, afin de mettre à disposition toutes les opération de type CRUD sur des films.\"), \"\\n\", React.createElement(_components.p, null, \"Afin de réaliser cet exercice, voici les contraintes d'implémentation :\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Veuillez créer une RESTful API pour la collection de films, qui réponde sur le port par défaut d'une application Express (3000), et qui couvre ces opérations :\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"| URI | Méthode HTTP | Opération |\\r\\n|---|---|---|\\r\\n| \", React.createElement(_components.strong, null, \"films\"), \" | GET | READ ALL : Lire toutes les ressources de la collection |\\r\\n| \", React.createElement(_components.strong, null, \"films?minimum-duration=value\"), \" | GET | READ ALL FILTERED : Lire toutes les ressources de la collection selon le filtre donné |\\r\\n| \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"films/{id}\")), \" | GET | READ ONE : Lire la ressource identifiée |\\r\\n| \", React.createElement(_components.strong, null, \"films\"), \" | POST | CREATE ONE : Créer une ressource basée sur les données de la requête |\\r\\n| \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"films/{id}\")), \" | DELETE | DELETE ONE : Effacer la ressource identifiée |\\r\\n| \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"films/{id}\")), \" | PATCH | UPDATE ONE : Mettre à jour les propriétés de la ressource par les valeurs données dans la requête, pour une ou plusieurs propriétés |\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Une ressource de type \", React.createElement(_components.strong, null, \"films\"), \" doit contenir les propriétés suivantes :\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"id\"), \" : un entier\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"title\"), \" : titre du film (String)\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"duration\"), \" : durée du film en minutes ; elle doit être un nombre positif (pas une string !).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"budget\"), \" : pour informer du coût qu'a couté la production du film, en millions ; le budget doit être un nombre positif (pas une string !).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"link\"), \" : pour donner une URL vers la description du film (lien vers imdb, rottentomatoes ou autre)\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"Les ressources ne doivent pas persister : dès lors, ajoutez les données associées aux films dans un array.\"), \"\\n\", React.createElement(_components.li, null, \"Veuillez bien valider les paramètres reçu par les opérations de vos API (vérifier par exemple que \", React.createElement(_components.strong, null, \"budget\"), \" et \", React.createElement(_components.strong, null, \"duration\"), \" sont des \", React.createElement(_components.strong, null, \"number\"), \" positifs) et veuillez renvoyer les bons status codes en cas d'erreur.\"), \"\\n\", React.createElement(_components.li, null, \"Veuillez tester toutes les fonctions de la RESTful API pour la collection de films à l'aide du REST Client dans VS Code (extension à installer au sein de VS Code). Veuillez ajouter vos requêtes au sein du fichier \", React.createElement(_components.strong, null, \"films.http\"), \" dans le répertoire \", React.createElement(_components.strong, null, \"REST Client\"), \" du dossier associé à cet exercice.\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, null, \"🤝 Tips\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"N'hésitez pas à utiliser le générateur d'applications d'Express pour initier votre projet.\"), \"\\n\", React.createElement(_components.li, null, \"Développez les opérations de votre API de manière incrémentale : testez une opération via REST Client avant de passer à une nouvelle opération.\"), \"\\n\", React.createElement(_components.li, null, \"Pour le filtre sur les films, vous allez récupérer un paramètre de requête.\", React.createElement(_components.br), \"\\n\", \"⚡ Attention, le signe \", React.createElement(_components.strong, null, \"-\"), \" est un opérateur en JS, vous ne pouvez pas récupérer le paramètre de requête via \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"req.query.minimum-duration\")), \"...\", React.createElement(_components.br), \"\\n\", \"💭 Mais alors comment faire ?\", React.createElement(_components.br), \"\\n\", \"On accède aussi au propriété d'un objet à l'aide d'un array, ici ça serait via \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"req.query['minimum-duration']\")), \".\"), \"\\n\", React.createElement(_components.li, null, \"N'hésitez pas à vous inspirer du code du tutoriel \", React.createElement(_components.a, {\n    href: \"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/basic\"\n  }, \"api-basic\"), \".\"), \"\\n\", React.createElement(_components.li, null, \"Pour vérifier le type d'une variable, n'hésitez pas à utiliser l'opérateur \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"typeof\")), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Le code de votre application web doit se trouver dans votre repository local et votre web repository (normalement appelé \", React.createElement(_components.strong, null, \"web2\"), \") dans le répertoire nommé \", React.createElement(_components.strong, null, \"/exercises/module4/4.1\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Veuillez faire un \", React.createElement(_components.strong, null, \"commit\"), \" de votre code avec le message suivant :\\r\\n\\\"\", React.createElement(_components.strong, null, \"myMovies : module 4 : basic API\"), \"\\\".\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" 🍬 Exercice 1.2 : Gestion de la pagination, de l'ordre de présentation et du filtrage de films \")), \"\\n\", React.createElement(_components.p, null, \"N'hésitez pas, c'est optionnel, de gérer de nouvelles opérations au sein de votre RESTful API de \", React.createElement(_components.strong, null, \"myMovies\"), \" :\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Filtrez tous les films qui commencent par une certaines chaînes de caractères.\"), \"\\n\", React.createElement(_components.li, null, \"Gérez l'ordre de présentation des films.\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, null, \"🤝 Tips\"), \"\\n\", React.createElement(_components.p, null, \"Besoin d'inspiration pour l'aspect filtrage et la gestion de l'ordre des ressources ? \", React.createElement(_components.a, {\n    href: \"https://dev.to/drminnaar/rest-api-guide-14n2\"\n  }, \"REST API Guide\"), \" \", React.createElement(_components.a, {\n    href: \"/js2/references/#r58\"\n  }, \"[R.58]\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Veuillez faire un \", React.createElement(_components.strong, null, \"commit\"), \" de votre code avec le message suivant : \\\"\", React.createElement(_components.strong, null, \"myMovies : module 4 : ordering & filtrering\"), \"\\\".\"), \"\\n\", React.createElement(_components.p, null, \"🍬 Et si vraiment vous avez encore du temps et souhaitez déjà approfondir les RESTful APIs, n'hésitez pas aussi à implémenter la gestion de la pagination.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"D:/Vinci/code/web2/js-course/frontend/src/mdx-pages/part1/express-api.fr.mdx\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport {MDXProvider} from '@mdx-js/react';\nimport {Link} from 'gatsby';\nimport MainLayout from '../components/main-layout.js';\nimport Image from '../components/image.js';\nimport Section from '../components/section.js';\nimport Content from '../components/content.js';\nimport Background from '../components/background.js';\nimport SectionHeader from '../components/section-header.js';\nimport SectionFooter from '../components/section-footer.js';\nimport PageHeader from '../components/page-header.js';\nimport {withFrontmatter} from '../components/hoc/hoc.js';\nimport CodeBlock from '../components/codeblock/codeblock.js';\nimport LinkFile from '../components/file/link-file.js';\nimport ScrollableImage from '../components/image/scrollable-image';\nimport PublicProjectsView from '../components/public-projects/public-projects-view';\nimport {AuthenticatedTemplate, UnauthenticatedTemplate} from '@azure/msal-react';\nimport AuthenticatedBlock from '../components/auth/authenticated-block.js';\nimport UnAuthenticatedBlock from '../components/auth/unauthenticated-block.js';\nimport NestedMdxBlock from '../components/mdx/nested-mdx-block.js';\nimport YoutubeImage from '../components/image/youtube-image.js';\nimport InternalPageMenu from '../components/internal-page-menu/internal-page-menu.js';\nimport InternalPageMenuItem from '../components/internal-page-menu/internal-page-menu-item.js';\nimport InternalPageTitle from '../components/internal-page-menu/menu-title.js';\nimport {PathViewer, PathViewerItem} from '../components/path-viewer/path-viewer.js';\nconst shortcodes = {\n  Link,\n  Image,\n  Section,\n  Content,\n  Background,\n  SectionHeader,\n  SectionFooter,\n  PageHeader,\n  CodeBlock,\n  LinkFile,\n  ScrollableImage,\n  PublicProjectsView,\n  AuthenticatedBlock,\n  UnAuthenticatedBlock,\n  NestedMdxBlock,\n  YoutubeImage,\n  InternalPageMenu,\n  InternalPageMenuItem,\n  InternalPageTitle,\n  PathViewer,\n  PathViewerItem\n};\nfunction PageTemplate({data: {mdx, allImages}, children}) {\n  shortcodes.PageHeader = withFrontmatter(PageHeader, mdx?.frontmatter);\n  return React.createElement(MainLayout, Object.assign({}, mdx?.frontmatter ? {\n    frontmatter: mdx.frontmatter\n  } : {}, mdx?.frontmatter?.navbarExtraStyles ? {\n    navbarExtraStyles: mdx.frontmatter.navbarExtraStyles\n  } : {}, mdx?.frontmatter?.headerImage ? {\n    headerImage: mdx.frontmatter.headerImage\n  } : {}, mdx?.frontmatter?.featuredImage ? {\n    featuredImage: mdx.frontmatter.featuredImage\n  } : {}, mdx?.frontmatter?.title ? {\n    pageTitle: mdx.frontmatter.title\n  } : {}, allImages && allImages.length > 0 ? {\n    allImages: allImages\n  } : {}), React.createElement(MDXProvider, {\n    components: shortcodes\n  }, React.createElement(\"div\", {\n    className: mdx?.frontmatter?.autoMargin ? 'page page--auto-margin' : 'page'\n  }, children)));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query pagesAndImages($slug: String) {\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      body\n      fields {\n        slug\n      }\n\n      frontmatter {\n        title\n        date\n        navbarExtraStyles\n        headerImage\n        featuredImage\n        description\n        autoMargin\n      }\n    }\n    allImages: allFile(\n      filter: {\n        sourceInstanceName: { eq: \"images\" }\n        extension: { nin: [\"ico\", \"svg\"] }\n      }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            gatsbyImageData(\n              quality: 90\n              layout: FULL_WIDTH\n              placeholder: TRACED_SVG\n              tracedSVGOptions: { color: \"green\", background: \"grey\" }\n            )\n          }\n          base\n        }\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","h2","p","strong","br","ul","li","code","a","pre","h4","_provideComponents","components","PathViewer","PathViewerItem","InternalPageMenu","InternalPageMenuItem","InternalPageTitle","ScrollableImage","_missingMdxReference","React","to","selected","name","minWidth","maxWidth","href","className","wrapper","MDXLayout","id","component","Error","shortcodes","Link","Image","Section","Content","Background","SectionHeader","SectionFooter","PageHeader","CodeBlock","LinkFile","PublicProjectsView","AuthenticatedBlock","UnAuthenticatedBlock","NestedMdxBlock","YoutubeImage","PageTemplate","data","mdx","allImages","children","withFrontmatter","frontmatter","MainLayout","navbarExtraStyles","headerImage","featuredImage","title","pageTitle","length","MDXProvider","autoMargin","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}