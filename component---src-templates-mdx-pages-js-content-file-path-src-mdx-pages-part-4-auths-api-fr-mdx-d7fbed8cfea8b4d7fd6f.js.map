{"version":3,"file":"component---src-templates-mdx-pages-js-content-file-path-src-mdx-pages-part-4-auths-api-fr-mdx-d7fbed8cfea8b4d7fd6f.js","mappings":"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","sources":["webpack://myjscourse/./src/mdx-pages/part4/auths-api.fr.mdx","webpack://myjscourse/./src/templates/mdx-pages.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    br: \"br\",\n    strong: \"strong\",\n    h4: \"h4\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\",\n    h5: \"h5\"\n  }, _provideComponents(), props.components), {PathViewer, PathViewerItem, InternalPageMenu, InternalPageMenuItem, InternalPageTitle, ScrollableImage} = _components;\n  if (!InternalPageMenu) _missingMdxReference(\"InternalPageMenu\", true);\n  if (!InternalPageMenuItem) _missingMdxReference(\"InternalPageMenuItem\", true);\n  if (!InternalPageTitle) _missingMdxReference(\"InternalPageTitle\", true);\n  if (!PathViewer) _missingMdxReference(\"PathViewer\", true);\n  if (!PathViewerItem) _missingMdxReference(\"PathViewerItem\", true);\n  if (!ScrollableImage) _missingMdxReference(\"ScrollableImage\", true);\n  return React.createElement(React.Fragment, null, React.createElement(PathViewer, null, React.createElement(PathViewerItem, {\n    to: \"/\"\n  }, \" web2course \"), React.createElement(PathViewerItem, {\n    to: \"/part4\"\n  }, \" Partie 4 \"), React.createElement(PathViewerItem, {\n    selected: true\n  }, \" a) JWT auths & API \")), \"\\n\", React.createElement(_components.h1, null, \"a) Authentification et autorisation d'accès aux opérations d'une RESTful API via JWT\"), \"\\n\", React.createElement(InternalPageMenu, null, React.createElement(InternalPageMenuItem, null, \" C'est quoi l'authentification et l'autorisation ? \"), React.createElement(InternalPageMenuItem, null, \" Stateful VS stateless authentication \"), React.createElement(InternalPageMenuItem, null, \" C'est quoi les tokens JWT ? \"), React.createElement(InternalPageMenuItem, null, \" Authentification & autorisation stateless via JWT & Expres \"), React.createElement(InternalPageMenuItem, null, \" 🍬 Cacher ses secrets \"), React.createElement(InternalPageMenuItem, null, \" Mécanisme d'autorisation et vérification du token \"), React.createElement(InternalPageMenuItem, null, \" Client REST avec JWT \"), React.createElement(InternalPageMenuItem, null, \" Protection des opérations d'écriture d'une API \")), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" C'est quoi l'authentification et l'autorisation ? \")), \"\\n\", React.createElement(_components.h2, null, \"Authentification, c'est quoi ?\"), \"\\n\", React.createElement(_components.p, null, \"L'authentification, c'est le processus de vérifier qui est l'utilisateur d'une application.\"), \"\\n\", React.createElement(_components.p, null, \"Pour authentifier un utilisateur, on va généralement passer via un formulaire de connexion, lui demandant un username et un password.\"), \"\\n\", React.createElement(_components.h2, null, \"Autorisation, c'est quoi ?\"), \"\\n\", React.createElement(_components.p, null, \"L'autorisation, c'est le processus de vérifier ce à quoi un utilisateur à accès.\"), \"\\n\", React.createElement(_components.p, null, \"Une API va autoriser les accès à certaines opérations en fonction des privilèges associés aux utilisateurs. Il y aura des opérations qui seront autorisées :\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"pour tous les utilisateurs, tant anonymes qu'authentifiés ; imaginez par exemple les opérations de lecture de produits sur un site \\\"vitrine\\\". Il ne faut pas devoir créer de compte utilisateur pour pouvoir afficher les produits du site.\"), \"\\n\", React.createElement(_components.li, null, \"pour tous les utilisateurs authentifiés, peu importe leurs privilèges ; imaginez le fait de pouvoir poster des messages dans un forum ; il faut avoir un compte pour pouvoir le faire, mais il ne faut pas de privilèges spécifiques (pas besoin d'être admin).\"), \"\\n\", React.createElement(_components.li, null, \"pour seulement un ou plusieurs utilisateur(s) authentifié(s) ayant les privilèges requis ; imaginez une opération de lecture de tous les profils des utilisateurs d'une banque ; il faut avoir un compte admin de la banque pour pouvoir le faire. Ca serait catastrophique si n'importe quel utilisateur authentifié pourrait accéder aux profils de tous les utilisateurs !\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"Différents moyens d'authentification\"), \"\\n\", React.createElement(_components.p, null, \"Il existe de nombreux mécanismes d'authentification.\"), \"\\n\", React.createElement(_components.p, null, \"Traditionnellement, ou anciennement, nous avons l'authentification qui est supportée à l'aide de cookies. L'utilisateur envoie via un formulaire son username et password, le serveur vérifie ceux-ci et crée un id de session et le renvoie à l'utilisateur via un cookie.\", React.createElement(_components.br), \"\\n\", \"Après l'authentification, à chaque requête du client sur ce serveur, le cookie est envoyé, et le serveur, qui a sauvegardé la session, va retrouver la session sur base de l'id de session présent dans le cookie et va autoriser ou non l'accès à l'opération demandée par le client.\", React.createElement(_components.br), \"\\n\", \"C'est ce qu'on appelle une authentification \", React.createElement(_components.strong, null, \"stateful\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Un mécanisme d'authentification \", React.createElement(_components.strong, null, \"stateful\"), \" indique que le serveur est responsable de sauvegarder les données de session des utilisateurs.\"), \"\\n\", React.createElement(_components.p, null, \"On parle de \", React.createElement(_components.strong, null, \"session\"), \" d'un utilisateur comme étant toute la durée où le client s'authentifie à l'application web jusqu'à ce qu'il quitte cette application, lorsqu'il ferme son browser.\"), \"\\n\", React.createElement(_components.p, null, \"De manière plus moderne, nous avons des mécanismes d'authentification qui sont dits \", React.createElement(_components.strong, null, \"stateless\"), \". Dans ce genre de mécanisme, c'est le client qui doit sauvegarder les données de session, et donc le browser. L'authentification à l'aide de \", React.createElement(_components.strong, null, \"tokens\"), \" devient très populaires.\", React.createElement(_components.br), \"\\n\", \"Il existe différents moyen de l'implémenter. Dans le cadre de ce cours, nous focuserons sur la façon la plus habituelle, les \", React.createElement(_components.strong, null, \"JSON Web Tokens\"), \", ou \", React.createElement(_components.strong, null, \"JWT\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Il existe d'autres mécanismes très modernes qui utilisent des tokens, mis en place par des tiers : \", React.createElement(_components.strong, null, \"OAuth\"), \", \", React.createElement(_components.strong, null, \"OpenId\"), \"... Ces mécanismes sont offerts par Microsoft, Google, Facebook... Nous ne les verrons pas dans le cadre de cours. Néanmoins, à la fin de ce cours, vous devriez être apte à pouvoir les utiliser, sous réserve de bien lire la documentation.\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" Stateful VS stateless authentication  \")), \"\\n\", React.createElement(_components.p, null, \"Quels sont les avantages & inconvénients d'une authentification stateful ? et d'une authentification stateless ?\"), \"\\n\", React.createElement(_components.h4, null, \"Authentification stateful\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Inconvénients\"), \" :\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"La session utilise de la mémoire pour chaque utilisateur.\"), \"\\n\", React.createElement(_components.li, null, \"Le backend n'a aucune manière de déterminer si le frontend s'est déconnecté du site ou non : gestion de l'expiration d'une session plus compliquée, notamment si le frontend revient après une longue durée.\"), \"\\n\", React.createElement(_components.li, null, \"Toutes les sessions sont perdues en cas de redémarrage du serveur (réauthentification).\"), \"\\n\", React.createElement(_components.li, null, \"Load balancing compliqué ; en effet, si un client fait une requête, pendant toute la durée de la session, s'il y a plusieurs serveurs qui peuvent y répondre, comment est gérée la session de ce client ? Par quel(s) serveur(s) ? Comment se partagent-ils les données de session ? Ou est-ce que ça doit toujours être le même serveur qui répond au même client ?\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Avantages\"), \" :\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Peu gourmand en ressource point de vue processing et très rapide ; en effet, une fois qu'une session est en place, la vérification que le cookie contient le bon id de session se fait vite.\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, null, \"Authentification stateless\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Inconvénients\"), \" :\\r\\nComme le serveur ne retient plus l'utilisateur en mémoire, il doit utiliser de la cryptographie pour créer et valider les token ; c'est donc consommateur en ressource point de vue processing.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Avantages\"), \" :\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Pas de session à gérer, même après redémarrage du serveur, il n'y a pas de réauthentification nécessaire.\"), \"\\n\", React.createElement(_components.li, null, \"Evolutif, utilisation facile de plusieurs serveurs si du load balancing est nécessaire ; en effet, comme chaque requête du client contient toutes les infos pour se faire autoriser, peu importe quel est le serveur qui va prendre en charge la requête.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Notons que la \\\"scalability\\\" horizontale, la possibilité de permettre à une application d'augmenter sa capacité de répondre à une charge grandissante simplement en ajoutant des machines, est quelque chose de très important à notre époque.\", React.createElement(_components.br), \"\\n\", \"Certaines applications web ont des centaines de millions d'utilisateurs ; pour celles-ci, on ne peut pas compter sur la \\\"scalability\\\" verticale, c'est-à-dire le fait d'augmenter les ressources d'une machine, en augmentant sa RAM, son processeur, son espace de stockage...\"), \"\\n\", React.createElement(_components.p, null, \"Dès lors, dans le cadre de ce cours, nous allons préférer les applications web qui peuvent tourner sur des serveurs \", React.createElement(_components.strong, null, \"stateless\"), \".\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" C'est quoi les tokens JWT ? \")), \"\\n\", React.createElement(_components.p, null, \"Les JSON Web token, ou JWT, appartiennent à un standard internet permettant l'échange sécurisé de tokens entre plusieurs parties.\"), \"\\n\", React.createElement(_components.p, null, \"Un JWT contient trois parties encodées en base64 et ressemble à qqch du style :\", React.createElement(_components.br), \"\\n\", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.\")), React.createElement(_components.br), \"\\n\", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.\")), React.createElement(_components.br), \"\\n\", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"))), \"\\n\", React.createElement(_components.p, null, \"Voici les 3 parties d'un JWT et leurs caractéristiques :\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"l'\", React.createElement(_components.strong, null, \"entête\"), \" (ou header) : un objet JSON identifiant le type de token (JWT) et l'algorithme utilisé pour générer la signature du token (HS256), un algorithme de hachage.\"), \"\\n\", React.createElement(_components.li, null, \"le \", React.createElement(_components.strong, null, \"payload\"), \" : un objet JSON permettant de spécifier le \", React.createElement(_components.strong, null, \"claim\"), \" ; ce sont des paramètres optionnels précisant les affirmations associées au token, comme la date d'expiration du token, son créateur, le fait que l'utilisateur est admin... généralement, on y met pas trop d'info, principalement l'identifiant de l'utilisateur ; si l'API a besoin de plus d'info concernant l'utilisateur, elle ira généralement les chercher dans son support de données.\"), \"\\n\", React.createElement(_components.li, null, \"la \", React.createElement(_components.strong, null, \"signature\"), \" : c'est une signature numérique construite à partir d'un secret privé ou d'une clé publique/privée, via l'algorithme précisé dans la signature.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"💭 C'est bien joli tout ça, mais comment ça permet de sécuriser la session d'un utilisateur ?\", React.createElement(_components.br), \"\\n\", \"Généralement, l'API, et elle uniquement, connait le secret privé. Elle va donc créer le token d'un utilisateur authentifié, en y ajoutant le claim (ou les affirmations) qu'elle juge utile.\", React.createElement(_components.br), \"\\n\", \"Lorsque le client reçoit son token, il va le sauvegarder dans son browser.\", React.createElement(_components.br), \"\\n\", \"Pour chaque requête où il devra se faire autoriser par l'API, le client enverra son token au sein d'un header de la requête.\", React.createElement(_components.br), \"\\n\", \"L'API utilisera le secret privé, connu d'elle-même uniquement, pour vérifier la signature du token. Si tout est OK, c'est que l'utilisateur est bien authentifié et que son claim est OK.\"), \"\\n\", React.createElement(_components.p, null, \"Imaginez maintenant qu'un hackeur tente de modifier le token, pour modifier le claim, notamment en changeant l'id de l'utilisateur présent dans le payload du token.\\r\\nEt bien la signature ne correspondra plus à ce token là ! L'API le détectera.\", React.createElement(_components.br), \"\\n\", \"Pour que le hackeur réussisse son acte malicieux, il est obligé de connaître le secret privé qui ne doit être connu que de l'API.\", React.createElement(_components.br), \"\\n\", \"Les hackeurs devront connaître le secret privé afin de pouvoir générer un nouveau token qui sera validé par l'API. Pas évident...\"), \"\\n\", React.createElement(_components.p, null, \"Ainsi, on peut imaginer un token comme une enveloppe sécurisé par un cadenas très spécial : ce cadenas, qui est mis sur l'enveloppe contenant, par exemple, l'identifiant d'un utilisateur, est fermé par la clé 🔑 que seulement connaît l'API.\\r\\nSi quelqu'un touche à l'enveloppe, le cadenas ne s'ouvrira plus avec la 🔑 de l'API : la tentative de hackage sera détectée !\\r\\nSi quelqu'un tente de créer une enveloppe sécurisé, il le fera avec une autre clé, \", React.createElement(_components.strong, null, \"🗝\"), \" par exemple, car il ne connaît pas 🔑. L'API, tentant d'ouvrir l'enveloppe sécurisée à l'aide de 🔑, elle ne s'ouvrira pas : la tentative de hacking sera détectée !\"), \"\\n\", React.createElement(_components.p, null, \"💭 Est-ce que cette métaphore d'enveloppe sécurisée vous parle ?\\r\\nAttention que dans la réalité, le payload classique d'un token sera décodable, que l'on connaisse ou pas le secret privé. Il est encodé en base64 ! Ne mettez donc jamais de secrets dans le payload d'un token !\", React.createElement(_components.br), \"\\n\", \"Si vraiment un jour vous deviez mettre un secret dans un payload, bien que déconseillé, vous pourriez toujours le faire en cryptant le payload.\"), \"\\n\", React.createElement(_components.p, null, \"👍 Le mécanisme de token assure que l'on aie une très haute probabilité de détecter les altérations faites sur les tokens, les tentatives de forgeage, grâce à la signature de ceux-ci.\", React.createElement(_components.br), \"\\n\", \"⚡ Par contre, si nous laissons traîner des informations dans le payload d'un token, comme un password d'un utilisateur et son username, alors là, c'est juste un beau cadeau pour les hackeurs, il n'auront qu'à utiliser le formulaire de connexion et prendre possession de notre identité 😨.\"), \"\\n\", React.createElement(_components.p, null, \"Il existe un site fort intéressant qui montre la structure d'un token et qui permet de les décoder : \", React.createElement(_components.a, {\n    href: \"https://jwt.io/\"\n  }, \"jwt.io\"), \" \", React.createElement(_components.a, {\n    href: \"/js2/references/#r63\"\n  }, \"[R.63]\"), \". Nous l'utiliserons plus tard pour décoder les tokens générés par nos RESTful API.\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" Authentification & autorisation stateless via JWT & Expres \")), \"\\n\", React.createElement(_components.h2, null, \"Introduction\"), \"\\n\", React.createElement(_components.p, null, \"Via un exemple concret associé à notre RESTful API qui gère les ressources de type \\\"pizzas\\\", nous allons mettre en place un processus d'authentification et d'autorisation JWT.\"), \"\\n\", React.createElement(_components.p, null, \"La librairie que nous allons utiliser dans le cadre de ce cours pour gérer des tokens JWT est \", React.createElement(_components.a, {\n    href: \"https://www.npmjs.com/package/jsonwebtoken\"\n  }, \"jsonwebtoken\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Nous allons maintenant continuer le développement de l'API \", React.createElement(_components.a, {\n    href: \"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/fat-model\"\n  }, \"fat-model\"), \" pour ajouter des opérations permettant l'authentification et l'autorisation d'utilisateurs.\"), \"\\n\", React.createElement(_components.p, null, \"Au sein de votre repo \", React.createElement(_components.strong, null, \"web2\"), \", veuillez créer le projet nommé \", React.createElement(_components.strong, null, \"/web2/tutorials/pizzeria/api/auths\"), \" sur base d'un copié collé de \", React.createElement(_components.strong, null, \"/web2/tutorials/pizzeria/api/fat-model\"), \" (ou \", React.createElement(_components.a, {\n    href: \"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/fat-model\"\n  }, \"fat-model\"), \").\"), \"\\n\", React.createElement(_components.p, null, \"Pour la suite du tutoriel, nous considérons que tous les chemins absolus démarrent du répertoire\\r\\n\", React.createElement(_components.strong, null, \"/web2/tutorials/pizzeria/api/auths\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Veuillez installer la librairie \", React.createElement(_components.strong, null, \"jsonwebtoken\"), \" au sein de votre nouveau projet \", React.createElement(_components.strong, null, \"auths\"), \" :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"npm i jsonwebtoken\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Mécanisme d'authentification et création du token\"), \"\\n\", React.createElement(_components.p, null, \"Toujours à l'aide d'Express, nous allons créer un router \", React.createElement(_components.strong, null, \"auths\"), \" qui mettra à disposition les opérations de \", React.createElement(_components.strong, null, \"login\"), \" et de \", React.createElement(_components.strong, null, \"register\"), \".\\r\\nVoici le contrat associé à ces nouvelles opérations :\"), \"\\n\", React.createElement(_components.h5, null, \"Opérations sur les ressources de type \\\"auths\\\"\"), \"\\n\", React.createElement(_components.p, null, \"| URI | Méthode HTTP | Opération |\\r\\n|---|---|---|---|\\r\\n| \", React.createElement(_components.strong, null, \"auths/login\"), \" | POST | Vérifier les credentials d'une ressource de type \\\"users\\\" et renvoyer le username et un token JWT si les credentials sont OK |\\r\\n| \", React.createElement(_components.strong, null, \"auths/register\"), \" | POST | Créer une ressource de type \\\"users\\\" et renvoyer le username et un token JWT |\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"Le modèle \", React.createElement(_components.strong, null, \"users\"), \" s'occupera de créer les utilisateur, de vérifier leurs credentials ainsi que de créer des token.\"), \"\\n\", React.createElement(_components.p, null, \"Voici le workflow attendu pour une opération de \", React.createElement(_components.strong, null, \"login\"), \" ou de \", React.createElement(_components.strong, null, \"register\"), \" :\"), \"\\n\", React.createElement(ScrollableImage, {\n    name: \"login.png\",\n    minWidth: \"879px\",\n    maxWidth: \"879x\"\n  }), \"\\n\", React.createElement(\"figcaption\", null, \"Appel à une RESTful API pour s'authentifier et obtenir un JWT\"), \"\\n\", React.createElement(_components.p, null, \"Ce que l'on voit dans l'image ci-dessus :\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"si le modèle considère que l'utilisateur est authentifiable, que ses credentials sont OK, alors il va utiliser une librairie \", React.createElement(_components.strong, null, \"jwt\"), \" et la méthode \", React.createElement(_components.strong, null, \"sign\"), \" pour créer un token.\"), \"\\n\", React.createElement(_components.li, null, \"le token est envoyé dans le body de la réponse à l'utilisateur.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Ce que l'on ne voit pas dans l'image ci-dessus :\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"c'est le job du client de sauvegarder le token. Si l'application cliente est un browser, alors celui-ci pourra être sauvegardé dans le web storage du browser.\"), \"\\n\", React.createElement(_components.li, null, \"l'application cliente peut être faite avec n'importe quelle technologie. Par exemple, nous pourrons utiliser REST Client pour faire une requête à l'API...\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Dans notre RESTful API, nous avons décidé que lorsqu'un client s'enregistre, quand il fait appel à l'opération \", React.createElement(_components.strong, null, \"register\"), \" pour créer un compte, l'API considère automatiquement que cet utilisateur est authentifié. Tout comme la méthode \", React.createElement(_components.strong, null, \"login\"), \", la méthode \", React.createElement(_components.strong, null, \"register\"), \" créera et renverra un token JWT à l'utilisateur.\"), \"\\n\", React.createElement(_components.p, null, \"NB : Il est possible d'envisager un workflow différent : après le \", React.createElement(_components.strong, null, \"register\"), \", l'application demanderait à l'utilisateur un \", React.createElement(_components.strong, null, \"login\"), \", \", React.createElement(_components.strong, null, \"register\"), \" ne renvoyant jamais de token à l'utilisateur.\"), \"\\n\", React.createElement(_components.p, null, \"Nous allons à présent mettre en place le code permettant d'implémenter le workflow que l'on vient de découvrir.\"), \"\\n\", React.createElement(_components.p, null, \"Veuillez créer le modèle \", React.createElement(_components.strong, null, \"users\"), \" en créant le fichier \", React.createElement(_components.strong, null, \"/models/users.js\"), \" et y inclure ce code :\"), \"\\n\", React.createElement(_components.pre, {\n    numbered: true,\n    highlighting: \"1,5-6,23-27,29-31,34,43-47,49-52,54\"\n  }, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"const jwt = require('jsonwebtoken');\\r\\nconst path = require('node:path');\\r\\nconst { parse, serialize } = require('../utils/json');\\r\\n\\r\\nconst jwtSecret = 'ilovemypizza!';\\r\\nconst lifetimeJwt = 24 * 60 * 60 * 1000; // in ms : 24 * 60 * 60 * 1000 = 24h\\r\\n\\r\\nconst jsonDbPath = path.join(__dirname, '/../data/users.json');\\r\\n\\r\\nconst defaultUsers = [\\r\\n  {\\r\\n    id: 1,\\r\\n    username: 'admin',\\r\\n    password: 'admin',\\r\\n  },\\r\\n];\\r\\n\\r\\nfunction login(username, password) {\\r\\n  const userFound = readOneUserFromUsername(username);\\r\\n  if (!userFound) return undefined;\\r\\n  if (userFound.password !== password) return undefined;\\r\\n\\r\\n  const token = jwt.sign(\\r\\n    { username }, // session data added to the payload (payload : part 2 of a JWT)\\r\\n    jwtSecret, // secret used for the signature (signature part 3 of a JWT)\\r\\n    { expiresIn: lifetimeJwt }, // lifetime of the JWT (added to the JWT payload)\\r\\n  );\\r\\n\\r\\n  const authenticatedUser = {\\r\\n    username,\\r\\n    token,\\r\\n  };\\r\\n\\r\\n  return authenticatedUser;\\r\\n}\\r\\n\\r\\nfunction register(username, password) {\\r\\n  const userFound = readOneUserFromUsername(username);\\r\\n  if (userFound) return undefined;\\r\\n\\r\\n  createOneUser(username, password);\\r\\n\\r\\n  const token = jwt.sign(\\r\\n    { username }, // session data added to the payload (payload : part 2 of a JWT)\\r\\n    jwtSecret, // secret used for the signature (signature part 3 of a JWT)\\r\\n    { expiresIn: lifetimeJwt }, // lifetime of the JWT (added to the JWT payload)\\r\\n  );\\r\\n\\r\\n  const authenticatedUser = {\\r\\n    username,\\r\\n    token,\\r\\n  };\\r\\n\\r\\n  return authenticatedUser;\\r\\n}\\r\\n\\r\\nfunction readOneUserFromUsername(username) {\\r\\n  const users = parse(jsonDbPath, defaultUsers);\\r\\n  const indexOfUserFound = users.findIndex((user) => user.username === username);\\r\\n  if (indexOfUserFound < 0) return undefined;\\r\\n\\r\\n  return users[indexOfUserFound];\\r\\n}\\r\\n\\r\\nfunction createOneUser(username, password) {\\r\\n  const users = parse(jsonDbPath, defaultUsers);\\r\\n\\r\\n  const createdUser = {\\r\\n    id: getNextId(),\\r\\n    username,\\r\\n    password,\\r\\n  };\\r\\n\\r\\n  users.push(createdUser);\\r\\n\\r\\n  serialize(jsonDbPath, users);\\r\\n\\r\\n  return createdUser;\\r\\n}\\r\\n\\r\\nfunction getNextId() {\\r\\n  const users = parse(jsonDbPath, defaultUsers);\\r\\n  const lastItemIndex = users?.length !== 0 ? users.length - 1 : undefined;\\r\\n  if (lastItemIndex === undefined) return 1;\\r\\n  const lastId = users[lastItemIndex]?.id;\\r\\n  const nextId = lastId + 1;\\r\\n  return nextId;\\r\\n}\\r\\n\\r\\nmodule.exports = {\\r\\n  login,\\r\\n  register,\\r\\n  readOneUserFromUsername,\\r\\n};\\r\\n\\n\")), \"\\n\", React.createElement(_components.p, null, \"Dans le code ci-dessus, \", React.createElement(_components.strong, null, \"jwtSecret\"), \" est le secret privé connu uniquement du serveur. C'est la même secret qu'il faudra utiliser pour vérifier un token.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, React.createElement(_components.code, null, \"jwt.sign()\")), \" permet de créer le token et ses 3 parties :\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"le payload du token, la 2ème partie du token, est complété principalement via le permier argument de \", React.createElement(_components.strong, null, \"sign()\"), \" ; ici, le token affirme que l'utilisateur possédant le \", React.createElement(_components.strong, null, \"username\"), \" donné est authentifié.\"), \"\\n\", React.createElement(_components.li, null, \"le payload du token sera aussi modifié sur base de la durée d'expiration du token, selon l'argument \", React.createElement(_components.strong, null, \"expiresIn\"), \".\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"jwtSecret\"), \" est utilisé pour créer la 3ème partie du token, sa signature.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Il faut maintenant que nous créions le router \", React.createElement(_components.strong, null, \"auths\"), \" offrant les opérations de \", React.createElement(_components.strong, null, \"login\"), \" et de \", React.createElement(_components.strong, null, \"register\"), \", en faisant appel au modèle \", React.createElement(_components.strong, null, \"users\"), \".\", React.createElement(_components.br), \"\\n\", \"Veuillez créer le fichier \", React.createElement(_components.strong, null, \"/routes/auths.js\"), \" et y inclure le code suivant :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"const express = require('express');\\r\\nconst { register, login } = require('../models/users');\\r\\n\\r\\nconst router = express.Router();\\r\\n\\r\\n/* Register a user */\\r\\nrouter.post('/register', (req, res) => {\\r\\n  const username = req?.body?.username?.length !== 0 ? req.body.username : undefined;\\r\\n  const password = req?.body?.password?.length !== 0 ? req.body.password : undefined;\\r\\n\\r\\n  if (!username || !password) return res.sendStatus(400); // 400 Bad Request\\r\\n\\r\\n  const authenticatedUser = register(username, password);\\r\\n\\r\\n  if (!authenticatedUser) return res.sendStatus(409); // 409 Conflict\\r\\n\\r\\n  return res.json(authenticatedUser);\\r\\n});\\r\\n\\r\\n/* Login a user */\\r\\nrouter.post('/login', (req, res) => {\\r\\n  const username = req?.body?.username?.length !== 0 ? req.body.username : undefined;\\r\\n  const password = req?.body?.password?.length !== 0 ? req.body.password : undefined;\\r\\n\\r\\n  if (!username || !password) return res.sendStatus(400); // 400 Bad Reques\\r\\n\\r\\n  const authenticatedUser = login(username, password);\\r\\n\\r\\n  if (!authenticatedUser) return res.sendStatus(401); // 401 Unauthorized\\r\\n\\r\\n  return res.json(authenticatedUser);\\r\\n});\\r\\n\\r\\nmodule.exports = router;\\n\")), \"\\n\", React.createElement(_components.p, null, \"Il n'y a rien de bien spécial à ce code. On fait simplement appel aux opérations du modèle \", React.createElement(_components.strong, null, \"users\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Attention, il faut rajouter le nouveau router au sein de \", React.createElement(_components.strong, null, \"app.js\"), \" pour que notre API puisse offrir les nouvelles opérations. Veuillez ajouter ce code dans \", React.createElement(_components.strong, null, \"/app.js\"), \" :\"), \"\\n\", React.createElement(_components.pre, {\n    highlighting: \"7,18\"\n  }, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"const express = require('express');\\r\\nconst cookieParser = require('cookie-parser');\\r\\nconst logger = require('morgan');\\r\\n\\r\\nconst usersRouter = require('./routes/users');\\r\\nconst pizzaRouter = require('./routes/pizzas');\\r\\nconst authsRouter = require('./routes/auths');\\r\\n\\r\\nconst app = express();\\r\\n\\r\\napp.use(logger('dev'));\\r\\napp.use(express.json());\\r\\napp.use(express.urlencoded({ extended: false }));\\r\\napp.use(cookieParser());\\r\\n\\r\\napp.use('/users', usersRouter);\\r\\napp.use('/pizzas', pizzaRouter);\\r\\napp.use('/auths', authsRouter);\\r\\n\\r\\nmodule.exports = app;\\n\")), \"\\n\", React.createElement(_components.p, null, \"Veuillez démarrer votre API \", React.createElement(_components.strong, null, \"auths\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"💭 Comment tester ces nouvelles opérations ?\\r\\nHé bien rien de neuf, on va utiliser REST Client.\"), \"\\n\", React.createElement(_components.p, null, \"Veuillez créer le fichier \", React.createElement(_components.strong, null, \"/REST Client/auths.http\"), \" et y ajouter le code suivant :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-http\"\n  }, \"@baseUrl = http://localhost:3000\\r\\n\\r\\n### Try to login an unknow user\\r\\nPOST {{baseUrl}}/auths/login\\r\\nContent-Type: application/json\\r\\n\\r\\n{\\r\\n    \\\"username\\\":\\\"unknown\\\",\\r\\n    \\\"password\\\":\\\"admin\\\"\\r\\n}\\r\\n\\r\\n### Login the default admin\\r\\nPOST {{baseUrl}}/auths/login\\r\\nContent-Type: application/json\\r\\n\\r\\n{\\r\\n    \\\"username\\\":\\\"admin\\\",\\r\\n    \\\"password\\\":\\\"admin\\\"\\r\\n}\\r\\n\\r\\n\\r\\n### Create the manager user\\r\\nPOST {{baseUrl}}/auths/register\\r\\nContent-Type: application/json\\r\\n\\r\\n{\\r\\n    \\\"username\\\":\\\"manager\\\",\\r\\n    \\\"password\\\":\\\"manager\\\"\\r\\n}\\r\\n\\r\\n### Login the manager user\\r\\nPOST {{baseUrl}}/auths/login\\r\\nContent-Type: application/json\\r\\n\\r\\n{\\r\\n    \\\"username\\\":\\\"manager\\\",\\r\\n    \\\"password\\\":\\\"manager\\\"\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Veuillez exécuter les différentes requêtes. Tout devrait fonctionner, vous devriez récupérer le username et le token d'un utilisateur authentifié.\"), \"\\n\", React.createElement(_components.p, null, \"Pour le fun, nous allons décoder un token. Veuillez copier le token de ce que renvoie votre API pour la requête de login de l'utilisateur \", React.createElement(_components.strong, null, \"manager\"), \" (qqch qui doit ressembler à une string du genre : \", React.createElement(_components.code, null, \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Im1hbmFnZXIiLCJpYXQiOjE2NjEyNDg1MjksImV4cCI6MTc0NzY0ODUyOX0.JvYzM0gtmVkqFr9R3f1Bf6ow_QuyHJY-vedJ39N7JKw\"), \").\"), \"\\n\", React.createElement(_components.p, null, \"Veuillez vous rendre sur le site \", React.createElement(_components.a, {\n    href: \"https://jwt.io/\"\n  }, \"JWT\"), \" et coller votre token dans le champs \", React.createElement(_components.strong, null, \"Encoded\"), \". Dans la colonne \", React.createElement(_components.strong, null, \"Decoded\"), \", vous devriez voir l'algorithme utilisé par la méthode \", React.createElement(_components.strong, null, \"sign\"), \", ainsi que les données présentes dans le payload, dont \", React.createElement(_components.code, null, \"\\\"username\\\": \\\"manager\\\"\"), \" !\", React.createElement(_components.br), \"\\n\", \"Vous comprenez pourquoi on n'ajoute pas des secrets dans un token 😉.\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" 🍬 Cacher ses secrets \")), \"\\n\", React.createElement(_components.p, null, \"Dans ce cours-ci, nous ne verrons pas directement comment faire en sorte que le secret,  permettant de signer & vérifier les token, ne soit pas présent sur le web repository de vos API (par exemple ici le modèle \", React.createElement(_components.strong, null, \"users.js\"), \" hardcode ce secret). En effet, pour des raisons de sécurité, si votre secret est visible pour tous les développeurs qui accède à votre repository public, c'est un problème.\", React.createElement(_components.br), \"\\n\", \"Si vous souhaitez découvrir comment faire en sorte de rendre invisible des informations sensibles sur un web repository, tout en pouvant bénéficiant de ces infos dans votre environnement de développement, vous pouvez utiliser la librairie \", React.createElement(_components.a, {\n    href: \"https://www.npmjs.com/package/dotenv\"\n  }, \"dotenv\"), \" qui permet de gérer facilement des variables d'environnement. C'est ce genre de librairies qui est utilisée par les professionnels pour cacher leurs secrets et certaines variables de configuration, comme le password pour se connecter à une DB, l'URL vers une API, le port de l'application...\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" Mécanisme d'autorisation et vérification du token\")), \"\\n\", React.createElement(_components.p, null, \"Suite au \", React.createElement(_components.strong, null, \"register\"), \" ou au \", React.createElement(_components.strong, null, \"login\"), \" de l'utilisateur, tel qu'il a été décidé pour notre RESTful API, celui-ci a reçu un token. C'est le job de l'application cliente de trouver un moyen de sauvegarder ce token.\"), \"\\n\", React.createElement(_components.p, null, \"Lorsqu'une application client souhaite créer une pizza, on souhaite autoriser cette opération qu'à l'administrateur du site gérant la pizzéria.\", React.createElement(_components.br), \"\\n\", \"Nous décidons donc pour l'opération de création de pizza que l'utilisateur doit non seulement être authentifié, mais qu'en plus, il doit être l'admin.\"), \"\\n\", React.createElement(_components.p, null, \"Pour que l'application client qui fait la requête à l'API puisse s'autoriser, elle doit ajouter un \", React.createElement(_components.strong, null, \"authorization header\"), \" à sa requête contenant comme valeur le token reçu lors du \", React.createElement(_components.strong, null, \"login\"), \" ou du \", React.createElement(_components.strong, null, \"register\"), \" :\"), \"\\n\", React.createElement(ScrollableImage, {\n    name: \"authorizeOK.png\",\n    minWidth: \"879px\",\n    maxWidth: \"879x\"\n  }), \"\\n\", React.createElement(\"figcaption\", null, \"Appel à une opération d'une RESTful API nécessitant une autorisation JWT : autorisation valide\"), \"\\n\", React.createElement(_components.p, null, \"Le router de \\\"pizzas\\\", avant même de passer la requête à la route \", React.createElement(_components.strong, null, \"POST /pizzas\"), \", va lancer la fonction middleware d'autorisation nommée \", React.createElement(_components.strong, null, \"authorize\"), \". La fonction middleware \", React.createElement(_components.strong, null, \"authorize\"), \" va s'occuper de vérifier le token envoyé par le client dans un header à l'aide de la méthode \", React.createElement(_components.strong, null, \"verifiy\"), \" de la librairie \", React.createElement(_components.strong, null, \"jwt\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"💭 Si le token est valide, est-ce que ça signifie que l'utilisateur est bien authentifié ?\\r\\nHé bien non, car imaginez qu'entre le moment où l'utilisateur se soit logué, il ait été supprimé de l'application par un admin... dans ce cas-ci, on ne veut pas l'autoriser à ajouter une pizza au menu de la pizzeria ! Il n'est p-e même plus un employé, il souhaite p-e écrire du contenu malicieux 😨\"), \"\\n\", React.createElement(_components.p, null, \"Donc si le token est valide, \", React.createElement(_components.strong, null, \"authorize\"), \" fera appel au modèle de \", React.createElement(_components.strong, null, \"users\"), \" pour vérifier que l'utilisateur existe bien dans le support de données (fichiers JSON, base de données ou autres) et pour obtenir toutes les infos sur cet utilisateur. Si l'utilisateur existe, alors cela signifie que l'utilisateur est bien authentifié. La fonction middleware \", React.createElement(_components.strong, null, \"authorize\"), \" va passer la main à une autre fonction middleware pour vérifier que l'utilisateur est bien l'admin.\"), \"\\n\", React.createElement(_components.p, null, \"💭 Comment est-ce que \", React.createElement(_components.strong, null, \"authorize\"), \" peut faire appel au modèle pour vérifier que l'utilisateur existe bien ? Est-ce que cela signifie que le token doit contenir tout un tas de données sur l'utilisateur ?\\r\\n👍 En règle générale, on va juste mettre un identifiant de l'utilisateur dans ce qu'on appelle le \", React.createElement(_components.strong, null, \"payload\"), \" du token. C'est ensuite l'API, suite au décodage de l'identifiant de l'utilisateur, qui fera appel au support de données pour retrouver toutes les données de l'utilisateur.\"), \"\\n\", React.createElement(_components.p, null, \"NB : notez que l'on pourrait aussi laisser la fonction \", React.createElement(_components.strong, null, \"createOnePizza\"), \" s'occuper de vérifier que l'utilisateur demandant la création de la pizza soit bien l'admin. Ici, comme il s'agit de vérifier que le contrat de l'API soit respecté, c'est-à-dire que l'utilisateur soit bien authentifié & admin, alors on préfère réaliser cette action en dehors du modèle, car dans nos choix architecturaux au niveau de nos RESTful API, nous avons décidé que ce n'est pas le modèle qui s'occupe de présenter les données aux clients.\"), \"\\n\", React.createElement(_components.p, null, \"La fonction middleware \", React.createElement(_components.strong, null, \"isAdmin\"), \" va vérifier que l'utilisateur est bien l'admin. Si c'est OK, elle passera la main à la fonction middleware qui gère la route \", React.createElement(_components.strong, null, \"POST /pizzas\"), \" au sein du router de pizzas en faisant l'appel à la fonction \", React.createElement(_components.strong, null, \"next\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Maintenant que le client a les bons privilèges, l'opération de création de la pizza peut donc être autorisée. L'opération de \", React.createElement(_components.strong, null, \"createOnePizza\"), \" du modèle renverra la nouvelle pizza au router qui s'occupera de présenter la nouvelle pizza au client, au format JSON.\"), \"\\n\", React.createElement(_components.p, null, \"Par contre, voici le workflow si le token n'est pas valide :\"), \"\\n\", React.createElement(ScrollableImage, {\n    name: \"authorizeNOK.png\",\n    minWidth: \"879px\",\n    maxWidth: \"879x\"\n  }), \"\\n\", React.createElement(\"figcaption\", null, \"Appel à une opération d'une RESTful API nécessitant une autorisation JWT : autorisation invalide\"), \"\\n\", React.createElement(_components.p, null, \"Dans ce cas là, \", React.createElement(_components.strong, null, \"authorize\"), \" ne passe pas la main à \", React.createElement(_components.strong, null, \"isAdmin\"), \" ni même à la fonction middleware qui gère la route \", React.createElement(_components.strong, null, \"POST /pizzas\"), \".\", React.createElement(_components.br), \"\\n\", \"La fonction middleware \", React.createElement(_components.strong, null, \"authorize\"), \" renvoie directement un code d'erreur \", React.createElement(_components.strong, null, \"401 Unauthorized\"), \" au client.\"), \"\\n\", React.createElement(_components.p, null, \"Vous pourriez aussi imaginer le workflow où le client envoie un token valide, mais l'utilisateur associé n'est pas admin. Dans ce cas-ci, \", React.createElement(_components.strong, null, \"authorize\"), \" ferait appel à \", React.createElement(_components.strong, null, \"isAdmin\"), \", mais \", React.createElement(_components.strong, null, \"isAdmin\"), \" renverrait directement un code d'erreur \", React.createElement(_components.strong, null, \"403 Forbidden\"), \" au client.\", React.createElement(_components.br), \"\\n\", \"En effet, l'API indiquerait ainsi qu'elle aurait vérifié que l'utilisateur est bien authentifié, mais que celui ne possède pas les privilèges suffisant pour accéder à l'opération demandée.\"), \"\\n\", React.createElement(_components.p, null, \"😨 Wow, le workflow d'autorisation pour la création d'une pizza est assez long.  Nous allons maintenant l'implémenter. Nous vous inquiétez pas, ce qui importe dans le code qui va suivre, ce n'est pas de savoir écrire tout le code, mais de bien comprendre le mécanisme. En effet, en règle générale, vous allez utiliser des librairies vous permettant d'autoriser les accès aux opérations de vos API. Vous écrirez donc rarement le mécanisme d'autorisation, par contre, vous devrez pouvoir utiliser ces mécanismes.\"), \"\\n\", React.createElement(_components.p, null, \"Veuillez créer les nouvelles fonctions middleware \", React.createElement(_components.strong, null, \"authorize\"), \" et \", React.createElement(_components.strong, null, \"isAdmin\"), \" au sein d'un nouveau fichier \", React.createElement(_components.strong, null, \"/utils/auths.js\"), \" :\"), \"\\n\", React.createElement(_components.pre, {\n    numbered: true,\n    highlighting: \"1,4,7,11\"\n  }, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"const jwt = require('jsonwebtoken');\\r\\nconst { readOneUserFromUsername } = require('../models/users');\\r\\n\\r\\nconst jwtSecret = 'ilovemypizza!';\\r\\n\\r\\nconst authorize = (req, res, next) => {\\r\\n  const token = req.get('authorization');\\r\\n  if (!token) return res.sendStatus(401);\\r\\n\\r\\n  try {\\r\\n    const decoded = jwt.verify(token, jwtSecret);\\r\\n    const { username } = decoded;\\r\\n\\r\\n    const existingUser = readOneUserFromUsername(username);\\r\\n\\r\\n    if (!existingUser) return res.sendStatus(401);\\r\\n\\r\\n    req.user = existingUser; // request.user object is available in all other middleware functions\\r\\n    return next();\\r\\n  } catch (err) {\\r\\n    console.error('authorize: ', err);\\r\\n    return res.sendStatus(401);\\r\\n  }\\r\\n};\\r\\n\\r\\nconst isAdmin = (req, res, next) => {\\r\\n  const { username } = req.user;\\r\\n\\r\\n  if (username !== 'admin') return res.sendStatus(403);\\r\\n  return next();\\r\\n};\\r\\n\\r\\nmodule.exports = { authorize, isAdmin };\\n\")), \"\\n\", React.createElement(_components.p, null, \"Quelques explications sur le code de la fonction middleware \", React.createElement(_components.strong, null, \"authorize\"), \" :\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Grâce à \", React.createElement(_components.code, null, \"req.get('authorization')\"), \", on récupère le token qui a été envoyé par le client au sein de l'\", React.createElement(_components.strong, null, \"authorization header\"), \" de la requête, c'est une string.\"), \"\\n\", React.createElement(_components.li, null, \"La méthode \", React.createElement(_components.code, null, \"jwt.verify(token, jwtSecret)\"), \" vérifie tant la signature du token que le fait que le token n'a pas encore expiré. Elle utilise le secret \", React.createElement(_components.strong, null, \"jwtSecret\"), \" qui doit être le même que celui pris en compte lors de la création du token.\"), \"\\n\", React.createElement(_components.li, null, \"Elle charge toutes les données de l'utilisateur authentifié au sein de l'objet \", React.createElement(_components.strong, null, \"request\"), \", dans \", React.createElement(_components.strong, null, \"user\"), \". Cela est une bonne pratique, cela permet, pour toute la durée du traitement de cette requête, de mettre à disposition ces données à toutes les fonctions middleware.\", React.createElement(_components.br), \"\\n\", \"💭 Mais pourquoi faire cela ?\\r\\nImaginez que vous faites un appel à une base de données externes à chaque fois que vous souhaitez obtenir les informations d'un utilisateur... Cela est très consommateur en temps... Lorsque vous allez utiliser d'autres fonctions middleware comme \", React.createElement(_components.strong, null, \"isAdmin\"), \", vous n'avez plus besoin de faire appel à la base de données.\"), \"\\n\", React.createElement(_components.li, null, \"💭 Qu'est-ce que ce code : \", React.createElement(_components.code, null, \"const { username } = decoded;\"), \" ?\", React.createElement(_components.br), \"\\n\", \"C'est ce que l'on appelle du \", React.createElement(_components.strong, null, \"destructuring assignement\"), \", c'est une façon très concise en JS de créer des variables à partir de propriétés d'objets ou des valeurs d'arrays.\", React.createElement(_components.br), \"\\n\", \"Imaginez ici que la valeur de \", React.createElement(_components.code, null, \"decoded\"), \" soit \", React.createElement(_components.code, null, \"{ username: 'admin', iat: 1661251095, exp: 1747651095 }\"), \". Ce code \", React.createElement(_components.code, null, \"const { username } = decoded;\"), \" est l'équivalent de \", React.createElement(_components.code, null, \"const username = decoded.username;\"), \". OK, mais ça n'a pas vraiment de valeur ajoutée ici, c'est juste un poil plus concis... Cela devient vraiment intéressant quand vous souhaitez créer plusieurs variables, comme pour l'exemple donné, on pourrait créer 3 variables ainsi \", React.createElement(_components.code, null, \"const { username, iat, exp } = decoded;\"), \" au lieu d'écrire :\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"const username = decoded.username;\\r\\nconst iat = decoded.iat;\\r\\nconst exp = decoded.exp;\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Pour en savoir plus sur la puissance du \", React.createElement(_components.strong, null, \"destructuring assignement\"), \", vous pouvez consulter la \", React.createElement(_components.a, {\n    href: \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\"\n  }, \"documentation de MDN\"), \" \", React.createElement(_components.a, {\n    href: \"/js2/references/#r64\"\n  }, \"[R.64]\"), \".\"), \"\\n\", React.createElement(_components.li, null, \"Si tout est OK, \", React.createElement(_components.strong, null, \"isAdmin\"), \" fait appel à \", React.createElement(_components.strong, null, \"next()\"), \", qui sera la prochaine fonction middleware qui est présente après l'appel de \", React.createElement(_components.strong, null, \"authorize\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"La fonction middleware \", React.createElement(_components.strong, null, \"isAdmin\"), \" récupère les données de l'utilisateur authentifié via l'objet \", React.createElement(_components.code, null, \"req.user\"), \" et le \", React.createElement(_components.strong, null, \"destructuring assignement\"), \".\", React.createElement(_components.br), \"\\n\", \"Si l'utilisateur n'est pas \", React.createElement(_components.strong, null, \"admin\"), \", c'est le code '\", React.createElement(_components.strong, null, \"403 Forbidden\"), \"' qui est renvoyé à l'application cliente, signifiant que l'utilisateur est bien authentifié, mais il n'a pas les privilèges pour accéder à l'opération demandée (création de pizza).\", React.createElement(_components.br), \"\\n\", \"Si tout est OK, \", React.createElement(_components.strong, null, \"isAdmin\"), \" fait appel à \", React.createElement(_components.strong, null, \"next()\"), \", qui sera la prochaine fonction middleware qui est présente après l'appel de \", React.createElement(_components.strong, null, \"isAdmin\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Où allons-nous utiliser ces nouvelles fonctions middleware ?\"), \"\\n\", React.createElement(_components.p, null, \"Nous pouvons le faire au niveau que nous souhaitons, soit au niveau :\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"de l'application, pour toutes les routes, via \", React.createElement(_components.code, null, \"app.use(authorize)\"), \".\"), \"\\n\", React.createElement(_components.li, null, \"d'un router, pour toutes les routes associées ; par exemple, on pourrait dire que toutes les routes du router de pizzas sont protégées par une autorisation JWT. On écrirait : \", React.createElement(_components.code, null, \"app.use(\\\"/pizzas\\\", authorize, pizzaRouter);\"), \". Cela signifierait que toutes les opérations sur des ressources de type \\\"pizzas\\\" ne seraient autorisées que si l'utilisateur est authentifié. Cela serait problématique pour deux raisons :\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"On veut pouvoir afficher le menu des pizzas pour tous les utilisateurs, même s'ils sont anonymes.\"), \"\\n\", React.createElement(_components.li, null, \"On ne veut pas simplement vérifier qu'un utilisateur est authentifié pour créer une pizza, on veut aussi vérifier qu'il est admin.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"d'une route, pour une opération de notre RESTful API. C'est ce que nous souhaitons faire ici. Veuillez mettre à jour le code du router de \\\"pizzas\\\" au sein de \", React.createElement(_components.strong, null, \"/routes/pizzas.js\"), \" :\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, {\n    highlighting: \"2,7\"\n  }, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"// See existing code\\r\\nconst { authorize, isAdmin } = require('../utils/auths');\\r\\n\\r\\n// See existing code\\r\\n\\r\\n// Create a pizza to be added to the menu.\\r\\nrouter.post('/', authorize, isAdmin, (req, res) => {\\r\\n  const title = req?.body?.title?.length !== 0 ? req.body.title : undefined;\\r\\n  const content = req?.body?.content?.length !== 0 ? req.body.content : undefined;\\r\\n\\r\\n  if (!title || !content) return res.sendStatus(400); // error code '400 Bad request'\\r\\n\\r\\n  const createdPizza = createOnePizza(title, content);\\r\\n\\r\\n  return res.json(createdPizza);\\r\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"Ainsi, nous avons juste fait l'appel de deux fonctions middleware pour vérifier :\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"que l'utilisateur est authentifié\"), \" via \", React.createElement(_components.strong, null, \"authorize\"), \" ; si tout est OK au niveau du token fournit par l'application cliente, \", React.createElement(_components.strong, null, \"authorize\"), \" fait appel via \", React.createElement(_components.strong, null, \"next()\"), \" à la prochaine fonction middleware. Dans ce cas-ci, c'est \", React.createElement(_components.strong, null, \"isAdmin\"), \". S'il y a un problème, \", React.createElement(_components.strong, null, \"authorize\"), \" termine le traitement de la requête en envoyant un code d'erreur au client et les prochaines fonctions middleware (\", React.createElement(_components.strong, null, \"isAdmin\"), \", puis la fonction arrow) ne sont pas exécutées.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"que l'utilisateur est admin\"), \" via \", React.createElement(_components.strong, null, \"isAdmin\"), \" ; si tout est OK, que l'utilisateur authentifié est l'admin, \", React.createElement(_components.strong, null, \"isAdmin\"), \" fait appel via \", React.createElement(_components.strong, null, \"next()\"), \" à la prochaine fonction middleware. Dans ce cas-ci, c'est la fonction arrow qui appelle \", React.createElement(_components.code, null, \"createOnePizza\"), \" pour créer la pizza, la fonction traitant l'opération demandée. Si l'utilisateur authentifié n'est pas l'admin, alors \", React.createElement(_components.strong, null, \"isAdmin\"), \" termine le traitement en envoyant un code d'erreur au client et la fonction traitant de l'opération de création n'est pas exécutée.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Comment pouvons-nous tester l'opération de création d'une pizza ? Via REST Client.\\r\\nTentons le coup à l'aide de cette requête (elle est déjà présente dans \", React.createElement(_components.strong, null, \"/REST Client/pizzas.http\"), \") :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-http\"\n  }, \"POST {{baseUrl}}/pizzas\\r\\nContent-Type: application/json\\r\\n\\r\\n{\\r\\n    \\\"title\\\":\\\"Magic Green\\\",\\r\\n    \\\"content\\\":\\\"Epinards, Brocolis, Olives vertes, Basilic\\\"\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Après avoir exécuté cette requête, vous devriez avoir reçu un status code '\", React.createElement(_components.strong, null, \"401 Unauthorized\"), \"'.\\r\\nEt bien oui, nous n'avons pas envoyé de token, nous ne pouvons donc pas être autorisé.\", React.createElement(_components.br), \"\\n\", \"Au prochain point nous allons voir comment utiliser REST Client pour sauvegarder de l'information, comme un token, suite à une requête vers une API.\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" Client REST avec JWT \")), \"\\n\", React.createElement(_components.p, null, \"Précédemment, nous avons appris à utiliser REST Client, l'extension de VS Code, pour faire des requêtes vers des API.\"), \"\\n\", React.createElement(_components.p, null, \"Voici quelques notions supplémentaire pour utiliser REST Client avec des \", React.createElement(_components.strong, null, \"JWT\"), \" :\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Il est possible de créer des \", React.createElement(_components.strong, null, \"Request Variables\"), \" afin de récupérer la réponse associée\\r\\nà une requête au sein d'une variable.\"), \"\\n\", React.createElement(_components.li, null, \"On va donc pouvoir récupérer le token, suite à une requête d'authentification,\\r\\nau sein d'une \", React.createElement(_components.strong, null, \"Request Variable\"), \", pour ensuite fournir ce token dans le\\r\\n« \", React.createElement(_components.strong, null, \"Authorization header\"), \" » de toutes les requêtes demandant une autorisation JWT.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Si vous souhaitez plus d'infos sur les \", React.createElement(_components.strong, null, \"Request Variables\"), \", vous pouvez consulter la \", React.createElement(_components.a, {\n    href: \"https://github.com/Huachao/vscode-restclient#request-variables\"\n  }, \"documentation de REST Client\"), \" \", React.createElement(_components.a, {\n    href: \"/js2/references/#r55\"\n  }, \"[R.55]\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Voici comment mettre à jour le script \", React.createElement(_components.strong, null, \"/REST Client/pizzas.http\"), \" pour créer une pizza en passant le token de l'utilisateur \", React.createElement(_components.strong, null, \"admin\"), \" :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-http\"\n  }, \"### Create a pizza by using the admin account\\r\\n#### First login as the admin\\r\\n##### Define a request variable nammed admin :\\r\\n# @name admin\\r\\nPOST {{baseUrl}}/auths/login\\r\\nContent-Type: application/json\\r\\n\\r\\n{\\r\\n    \\\"username\\\":\\\"admin\\\",\\r\\n    \\\"password\\\":\\\"admin\\\"\\r\\n}\\r\\n\\r\\n#### Create a pizza with the admin token\\r\\nPOST {{baseUrl}}/pizzas\\r\\nContent-Type: application/json\\r\\nAuthorization: {{admin.response.body.token}}\\r\\n\\r\\n{\\r\\n    \\\"title\\\":\\\"Magic Green\\\",\\r\\n    \\\"content\\\":\\\"Epinards, Brocolis, Olives vertes, Basilic\\\"\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Pour tester l'opération de création de pizza, veuillez d'abord exécuter la première requête, puis la seconde donnée ci-dessus.\"), \"\\n\", React.createElement(_components.p, null, \"A ce stade-ci, il serait aussi intéressant de tester certains cas d'erreurs associés aux tokens. Veuillez compléter le script \", React.createElement(_components.strong, null, \"/REST Client/pizzas.http\"), \" avec :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-http\"\n  }, \"### 1. Create a pizza without a token\\r\\nPOST {{baseUrl}}/pizzas\\r\\nContent-Type: application/json\\r\\n\\r\\n{\\r\\n    \\\"title\\\":\\\"Magic Green\\\",\\r\\n    \\\"content\\\":\\\"Epinards, Brocolis, Olives vertes, Basilic\\\"\\r\\n}\\r\\n\\r\\n### 2. Create a pizza without being the admin, use manager account\\r\\n#### 2.1 First login as the manager\\r\\n##### 2.1.1 Define a request variable nammed manager\\r\\n# @name manager\\r\\nPOST {{baseUrl}}/auths/login\\r\\nContent-Type: application/json\\r\\n\\r\\n{\\r\\n    \\\"username\\\":\\\"manager\\\",\\r\\n    \\\"password\\\":\\\"manager\\\"\\r\\n}\\r\\n\\r\\n##### 2.1.2 Define a file variable to simplify the access to the token of manager\\r\\n@managerToken = {{manager.response.body.token}}\\r\\n\\r\\n#### 2.2 Try to create a pizza with the manager token\\r\\nPOST {{baseUrl}}/pizzas\\r\\nContent-Type: application/json\\r\\nAuthorization: {{managerToken}}\\r\\n\\r\\n{\\r\\n    \\\"title\\\":\\\"Magic Green\\\",\\r\\n    \\\"content\\\":\\\"Epinards, Brocolis, Olives vertes, Basilic\\\"\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Nous voyons qu'à l'aide de REST Client, nous pouvons utiliser une \", React.createElement(_components.strong, null, \"File Variable\"), \" pour allouer une partie de la réponse faite à une requête.\", React.createElement(_components.br), \"\\n\", \"Dans ce cas, on peut faire appel à l'API en passant le token via la \", React.createElement(_components.strong, null, \"File Variable\"), \" nommé \", React.createElement(_components.strong, null, \"managerToken\"), \" (\", React.createElement(_components.code, null, \"Authorization: {{managerToken}}\"), \") au lieu d'utiliser une partie seulement de la \", React.createElement(_components.strong, null, \"Request Variable\"), \" nommée \", React.createElement(_components.strong, null, \"manager\"), \" (\", React.createElement(_components.code, null, \"Authorization: {{manager.response.body.token}}\"), \").\", React.createElement(_components.br), \"\\n\", \"Cela permet de créer des requêtes plus concises.\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" Protection des opérations d'écriture d'une API \")), \"\\n\", React.createElement(_components.p, null, \"Veuillez mettre à jour votre RESTful API gérant les pizzas afin que toutes les opérations d'écriture soient protégées par une autorisation JWT, n'autorisant que l'utilisateur \", React.createElement(_components.strong, null, \"admin\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Voici le code à mettre à jour dans \", React.createElement(_components.strong, null, \"/routes/pizzas\"), \" pour correctement autoriser les opérations de suppression et de modification sur des ressources de type \\\"pizzas\\\":\"), \"\\n\", React.createElement(_components.pre, {\n    highlighting: \"2,11\"\n  }, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"// Delete a pizza from the menu based on its id\\r\\nrouter.delete('/:id', authorize, isAdmin, (req, res) => {\\r\\n  const deletedPizza = deleteOnePizza(req.params.id);\\r\\n\\r\\n  if (!deletedPizza) return res.sendStatus(404);\\r\\n\\r\\n  return res.json(deletedPizza);\\r\\n});\\r\\n\\r\\n// Update a pizza based on its id and new values for its parameters\\r\\nrouter.patch('/:id', authorize, isAdmin, (req, res) => {\\r\\n  const title = req?.body?.title;\\r\\n  const content = req?.body?.content;\\r\\n\\r\\n  if ((!title && !content) || title?.length === 0 || content?.length === 0) {\\r\\n    return res.sendStatus(400);\\r\\n  }\\r\\n\\r\\n  const updatedPizza = updateOnePizza(req.params.id, { title, content });\\r\\n\\r\\n  if (!updatedPizza) return res.sendStatus(404);\\r\\n\\r\\n  return res.json(updatedPizza);\\r\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"Pour vous assurer que les opérations de suppression et de modification sont bien fonctionnelles, veuillez mettre à jour les requêtes associées afin d'utiliser un token. Veuillez mettre à jour \", React.createElement(_components.strong, null, \"/REST Client/pizzas.http\"), \" en ajoutant ces deux lignes :\"), \"\\n\", React.createElement(_components.pre, {\n    numbered: true,\n    highlighting: \"25,30\"\n  }, React.createElement(_components.code, {\n    className: \"language-http\"\n  }, \"### Create a pizza by using the admin account\\r\\n#### First login as the admin\\r\\n##### Define a request variable nammed admin\\r\\n# @name admin\\r\\nPOST {{baseUrl}}/auths/login\\r\\nContent-Type: application/json\\r\\n\\r\\n{\\r\\n    \\\"username\\\":\\\"admin\\\",\\r\\n    \\\"password\\\":\\\"admin\\\"\\r\\n}\\r\\n\\r\\n#### Create a pizza with the admin token\\r\\nPOST {{baseUrl}}/pizzas\\r\\nContent-Type: application/json\\r\\nAuthorization: {{admin.response.body.token}}\\r\\n\\r\\n{\\r\\n    \\\"title\\\":\\\"Magic Green\\\",\\r\\n    \\\"content\\\":\\\"Epinards, Brocolis, Olives vertes, Basilic\\\"\\r\\n}\\r\\n\\r\\n### Delete pizza identified by 2 with the admin token\\r\\nDELETE {{baseUrl}}/pizzas/2\\r\\nAuthorization: {{admin.response.body.token}}\\r\\n\\r\\n### Update the pizza identified by 6 with the admin token\\r\\nPATCH {{baseUrl}}/pizzas/6\\r\\nContent-Type: application/json\\r\\nAuthorization: {{admin.response.body.token}}\\r\\n\\r\\n{\\r\\n    \\\"title\\\":\\\"Magic Green 2\\\"\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Veuillez exécutez les requêtes de type DELETE et de type PATCH afin de vous assurer que l'API est en ordre.\"), \"\\n\", React.createElement(_components.p, null, \"Si tout fonctionne bien, faites un \", React.createElement(_components.strong, null, \"commit\"), \" de votre repo (\", React.createElement(_components.strong, null, \"web2\"), \") avec le message\\r\\n\\\"\", React.createElement(_components.strong, null, \"auths\"), \"\\\".\"), \"\\n\", React.createElement(_components.p, null, \"En cas de souci, vous pouvez utiliser le code du tutoriel \", React.createElement(_components.a, {\n    href: \"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/auths\"\n  }, \"auths\"), \".\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"D:/Vinci/code/web2/js-course/frontend/src/mdx-pages/part4/auths-api.fr.mdx\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport {MDXProvider} from '@mdx-js/react';\nimport {Link} from 'gatsby';\nimport MainLayout from '../components/main-layout.js';\nimport Image from '../components/image.js';\nimport Section from '../components/section.js';\nimport Content from '../components/content.js';\nimport Background from '../components/background.js';\nimport SectionHeader from '../components/section-header.js';\nimport SectionFooter from '../components/section-footer.js';\nimport PageHeader from '../components/page-header.js';\nimport {withFrontmatter} from '../components/hoc/hoc.js';\nimport CodeBlock from '../components/codeblock/codeblock.js';\nimport LinkFile from '../components/file/link-file.js';\nimport ScrollableImage from '../components/image/scrollable-image';\nimport PublicProjectsView from '../components/public-projects/public-projects-view';\nimport {AuthenticatedTemplate, UnauthenticatedTemplate} from '@azure/msal-react';\nimport AuthenticatedBlock from '../components/auth/authenticated-block.js';\nimport UnAuthenticatedBlock from '../components/auth/unauthenticated-block.js';\nimport NestedMdxBlock from '../components/mdx/nested-mdx-block.js';\nimport YoutubeImage from '../components/image/youtube-image.js';\nimport InternalPageMenu from '../components/internal-page-menu/internal-page-menu.js';\nimport InternalPageMenuItem from '../components/internal-page-menu/internal-page-menu-item.js';\nimport InternalPageTitle from '../components/internal-page-menu/menu-title.js';\nimport {PathViewer, PathViewerItem} from '../components/path-viewer/path-viewer.js';\nconst shortcodes = {\n  Link,\n  Image,\n  Section,\n  Content,\n  Background,\n  SectionHeader,\n  SectionFooter,\n  PageHeader,\n  CodeBlock,\n  LinkFile,\n  ScrollableImage,\n  PublicProjectsView,\n  AuthenticatedBlock,\n  UnAuthenticatedBlock,\n  NestedMdxBlock,\n  YoutubeImage,\n  InternalPageMenu,\n  InternalPageMenuItem,\n  InternalPageTitle,\n  PathViewer,\n  PathViewerItem\n};\nfunction PageTemplate({data: {mdx, allImages}, children}) {\n  shortcodes.PageHeader = withFrontmatter(PageHeader, mdx?.frontmatter);\n  return React.createElement(MainLayout, Object.assign({}, mdx?.frontmatter ? {\n    frontmatter: mdx.frontmatter\n  } : {}, mdx?.frontmatter?.navbarExtraStyles ? {\n    navbarExtraStyles: mdx.frontmatter.navbarExtraStyles\n  } : {}, mdx?.frontmatter?.headerImage ? {\n    headerImage: mdx.frontmatter.headerImage\n  } : {}, mdx?.frontmatter?.featuredImage ? {\n    featuredImage: mdx.frontmatter.featuredImage\n  } : {}, mdx?.frontmatter?.title ? {\n    pageTitle: mdx.frontmatter.title\n  } : {}, allImages && allImages.length > 0 ? {\n    allImages: allImages\n  } : {}), React.createElement(MDXProvider, {\n    components: shortcodes\n  }, React.createElement(\"div\", {\n    className: mdx?.frontmatter?.autoMargin ? 'page page--auto-margin' : 'page'\n  }, children)));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query pagesAndImages($slug: String) {\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      body\n      fields {\n        slug\n      }\n\n      frontmatter {\n        title\n        date\n        navbarExtraStyles\n        headerImage\n        featuredImage\n        description\n        autoMargin\n      }\n    }\n    allImages: allFile(\n      filter: {\n        sourceInstanceName: { eq: \"images\" }\n        extension: { nin: [\"ico\", \"svg\"] }\n      }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            gatsbyImageData(\n              quality: 90\n              layout: FULL_WIDTH\n              placeholder: TRACED_SVG\n              tracedSVGOptions: { color: \"green\", background: \"grey\" }\n            )\n          }\n          base\n        }\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","h2","p","ul","li","br","strong","h4","code","a","pre","h5","_provideComponents","components","PathViewer","PathViewerItem","InternalPageMenu","InternalPageMenuItem","InternalPageTitle","ScrollableImage","_missingMdxReference","React","to","selected","href","className","name","minWidth","maxWidth","numbered","highlighting","wrapper","MDXLayout","id","component","Error","shortcodes","Link","Image","Section","Content","Background","SectionHeader","SectionFooter","PageHeader","CodeBlock","LinkFile","PublicProjectsView","AuthenticatedBlock","UnAuthenticatedBlock","NestedMdxBlock","YoutubeImage","PageTemplate","data","mdx","allImages","children","withFrontmatter","frontmatter","MainLayout","navbarExtraStyles","headerImage","featuredImage","title","pageTitle","length","MDXProvider","autoMargin","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}