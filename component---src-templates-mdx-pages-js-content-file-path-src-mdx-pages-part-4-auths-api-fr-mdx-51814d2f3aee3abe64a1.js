"use strict";(self.webpackChunkmyjscourse=self.webpackChunkmyjscourse||[]).push([[2494],{1956:function(e,n,t){t.r(n),t.d(n,{default:function(){return C}});var l=t(3905),r=t(7294);function a(e){const n=Object.assign({h1:"h1",h2:"h2",p:"p",strong:"strong",ul:"ul",li:"li",br:"br",em:"em",h3:"h3",h4:"h4",code:"code",a:"a",pre:"pre",h5:"h5",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,l.ah)(),e.components),{InternalPageMenu:t,PathViewer:a,PathViewerItem:s,InternalPageMenuItem:i,YoutubeImage:o,InternalPageTitle:c,ScrollableImage:m,AuthenticatedBlock:d}=n;return d||u("AuthenticatedBlock",!0),t||u("InternalPageMenu",!0),i||u("InternalPageMenuItem",!0),c||u("InternalPageTitle",!0),a||u("PathViewer",!0),s||u("PathViewerItem",!0),m||u("ScrollableImage",!0),o||u("YoutubeImage",!0),r.createElement(r.Fragment,null,r.createElement(n.h1,null,"a) Authentification et autorisation d'acc√®s aux op√©rations d'une RESTful API via JWT"),"\n",r.createElement(t,null,r.createElement(a,null,r.createElement(s,{to:"/"}," web2course "),r.createElement(s,{to:"/part4"}," Partie 4 "),r.createElement(s,{selected:!0}," a) JWT auths & API ")),r.createElement(i,null," C'est quoi l'authentification et l'autorisation ? "),r.createElement(i,null," Stateful VS stateless authentication "),r.createElement(i,null," C'est quoi les tokens JWT ? "),r.createElement(i,null," Authentification et cr√©ation de token "),r.createElement(i,null," Autorisation et v√©rification de token "),r.createElement(i,null," Client REST avec JWT "),r.createElement(i,null," Protection des op√©rations d'√©criture d'une API "),r.createElement(i,null," Project 4.1 : Authentification & autorisation d'op√©rations ")),"\n",r.createElement("div",{className:"card card__simple-youtube-container"},r.createElement(o,{src:"https://youtu.be/jCUyii3hcwY"})),"\n",r.createElement(n.h1,null,r.createElement(c,null," C'est quoi l'authentification et l'autorisation ? ")),"\n",r.createElement(n.h2,null,"Authentification, c'est quoi ?"),"\n",r.createElement(n.p,null,"L'authentification, c'est le processus de ",r.createElement(n.strong,null,"v√©rifier qui est l'utilisateur")," d'une application."),"\n",r.createElement(n.p,null,"Pour authentifier un utilisateur, on va g√©n√©ralement passer via un formulaire de connexion, lui demandant un username et un password."),"\n",r.createElement(n.h2,null,"Autorisation, c'est quoi ?"),"\n",r.createElement(n.p,null,"L'autorisation, c'est le processus de ",r.createElement(n.strong,null,"v√©rifier ce √† quoi un utilisateur √† acc√®s"),"."),"\n",r.createElement(n.p,null,"Une API va autoriser les acc√®s √† certaines op√©rations en fonction des privil√®ges associ√©s aux utilisateurs. Il y aura des op√©rations qui seront autoris√©es :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,r.createElement(n.strong,null,"pour tous les utilisateurs"),", tant anonymes qu'authentifi√©s ;",r.createElement(n.br),"\n",r.createElement(n.em,null,'imaginez par exemple les op√©rations de lecture de produits sur un site "vitrine". Il ne faut pas devoir cr√©er de compte utilisateur pour pouvoir afficher les produits du site.')),"\n",r.createElement(n.li,null,r.createElement(n.strong,null,"pour tous les utilisateurs authentifi√©s"),", peu importe leurs privil√®ges ;",r.createElement(n.br),"\n",r.createElement(n.em,null,"imaginez le fait de pouvoir poster des messages dans un forum ; il faut avoir un compte pour pouvoir le faire, mais il ne faut pas de privil√®ges sp√©cifiques (pas besoin d'√™tre admin).")),"\n",r.createElement(n.li,null,r.createElement(n.strong,null,"pour seulement un ou plusieurs utilisateur(s) authentifi√©(s)")," ayant les privil√®ges requis ;",r.createElement(n.br),"\n",r.createElement(n.em,null,"imaginez une op√©ration de lecture de tous les profils des utilisateurs d'une banque ; il faut avoir un compte admin de la banque pour pouvoir le faire. Ca serait catastrophique si n'importe quel utilisateur authentifi√© pourrait acc√©der aux profils de tous les utilisateurs !")),"\n"),"\n",r.createElement(n.h2,null,"Diff√©rents moyens d'authentification"),"\n",r.createElement(n.h3,null,"Authentification stateful"),"\n",r.createElement(n.p,null,"Traditionnellement, ou anciennement, nous avons l'authentification qui est support√©e √† l'aide de cookies. L'utilisateur envoie via un formulaire son username et password, le serveur v√©rifie ceux-ci et cr√©e un id de session et le renvoie √† l'utilisateur via un cookie.",r.createElement(n.br),"\n","Apr√®s l'authentification, √† chaque requ√™te du client sur ce serveur, le cookie est envoy√©, et le serveur, qui a sauvegard√© la session, va la retrouver sur base de l'id de session pr√©sent dans le cookie et va autoriser ou non l'acc√®s √† l'op√©ration demand√©e par le client.",r.createElement(n.br),"\n","C'est ce qu'on appelle une authentification ",r.createElement(n.strong,null,"stateful"),"."),"\n",r.createElement(n.p,null,"Un m√©canisme d'authentification ",r.createElement(n.strong,null,"stateful")," indique que le serveur est responsable de sauvegarder les donn√©es de session des utilisateurs."),"\n",r.createElement(n.p,null,"On parle de ",r.createElement(n.strong,null,"session")," d'un utilisateur comme √©tant toute la dur√©e o√π le client s'authentifie √† l'application web jusqu'√† ce qu'il quitte cette application, lorsqu'il ferme son browser."),"\n",r.createElement(n.h3,null,"Authentification stateless"),"\n",r.createElement(n.p,null,"De mani√®re plus moderne, nous avons des m√©canismes d'authentification qui sont dits ",r.createElement(n.strong,null,"stateless"),". Dans ce genre de m√©canisme, c'est le client qui doit sauvegarder les donn√©es de session, et donc le browser. L'authentification √† l'aide de ",r.createElement(n.strong,null,"tokens")," devient tr√®s populaire.",r.createElement(n.br),"\n","Il existe diff√©rents moyen de l'impl√©menter. Dans le cadre de ce cours, nous focuserons sur la fa√ßon la plus habituelle, les ",r.createElement(n.strong,null,"JSON Web Tokens"),", ou ",r.createElement(n.strong,null,"JWT"),"."),"\n",r.createElement(n.p,null,"Il existe d'autres m√©canismes tr√®s modernes qui utilisent des tokens, et qui sont mis en place par des tiers : ",r.createElement(n.strong,null,"OAuth"),", ",r.createElement(n.strong,null,"OpenId"),"... Ces m√©canismes sont offerts par Microsoft, Google, Facebook... Nous ne les verrons pas dans le cadre de cours. N√©anmoins, √† la fin de ce cours, vous devriez √™tre apte √† pouvoir les utiliser, sous r√©serve de bien lire la documentation üòâ."),"\n",r.createElement(n.h1,null,r.createElement(c,null," Stateful VS stateless authentication  ")),"\n",r.createElement(n.p,null,"Quels sont les avantages & inconv√©nients d'une authentification stateful ? et d'une authentification stateless ?"),"\n",r.createElement(n.h4,null,"Authentification stateful"),"\n",r.createElement(n.p,null,r.createElement(n.strong,null,"Inconv√©nients")," :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"La session utilise de la m√©moire pour chaque utilisateur."),"\n",r.createElement(n.li,null,"Le backend n'a aucune mani√®re de d√©terminer si le frontend s'est d√©connect√© du site ou non : gestion de l'expiration d'une session plus compliqu√©e, notamment si le frontend revient apr√®s une longue dur√©e."),"\n",r.createElement(n.li,null,"Toutes les sessions sont perdues en cas de red√©marrage du serveur (r√©authentification)."),"\n",r.createElement(n.li,null,"Load balancing compliqu√© ; en effet, si un client fait une requ√™te, pendant toute la dur√©e de la session, s'il y a plusieurs serveurs qui peuvent y r√©pondre, comment est g√©r√©e la session de ce client ? Par quel(s) serveur(s) ? Comment se partagent-ils les donn√©es de session ? Est-ce que √ßa doit toujours √™tre le m√™me serveur qui r√©ponde au m√™me client ?"),"\n"),"\n",r.createElement(n.p,null,r.createElement(n.strong,null,"Avantages")," :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"Peu gourmand en ressource point de vue processing et tr√®s rapide ; en effet, une fois qu'une session est en place, la v√©rification que le cookie contient le bon id de session se fait vite."),"\n"),"\n",r.createElement(n.h4,null,"Authentification stateless"),"\n",r.createElement(n.p,null,r.createElement(n.strong,null,"Inconv√©nients")," :\nComme le serveur ne retient plus l'utilisateur en m√©moire, il doit utiliser de la cryptographie pour cr√©er et valider les token ; c'est donc consommateur en ressource point de vue processing."),"\n",r.createElement(n.p,null,r.createElement(n.strong,null,"Avantages")," :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"Pas de session √† g√©rer, m√™me apr√®s red√©marrage du serveur, il n'y a pas de r√©authentification n√©cessaire."),"\n",r.createElement(n.li,null,"Evolutif, utilisation facile de plusieurs serveurs si du load balancing est n√©cessaire ; en effet, comme chaque requ√™te du client contient toutes les infos pour se faire autoriser, il n'est pas n√©cessaire de savoir quel serveur va prendre en charge la requ√™te."),"\n"),"\n",r.createElement(n.p,null,'Notons que la "scalability" horizontale, la possibilit√© de permettre √† une application d\'augmenter sa capacit√© de r√©pondre √† une charge grandissante simplement en ajoutant des machines, est quelque chose de tr√®s important √† notre √©poque.',r.createElement(n.br),"\n","Certaines applications web ont des centaines de millions d'utilisateurs ; pour celles-ci, on ne peut pas compter sur la \"scalability\" verticale, c'est-√†-dire le fait d'augmenter les ressources d'une machine, en augmentant sa RAM, son processeur, son espace de stockage..."),"\n",r.createElement(n.p,null,"D√®s lors, dans le cadre de ce cours, nous allons pr√©f√©rer les applications web qui peuvent tourner sur des serveurs ",r.createElement(n.strong,null,"stateless"),"."),"\n",r.createElement(n.h1,null,r.createElement(c,null," C'est quoi les tokens JWT ? ")),"\n",r.createElement(n.p,null,"Les ",r.createElement(n.strong,null,"JSON Web token"),", ou ",r.createElement(n.strong,null,"JWT"),", appartiennent √† un standard internet permettant l'√©change s√©curis√© de tokens entre plusieurs parties."),"\n",r.createElement(n.p,null,"Un ",r.createElement(n.strong,null,"JWT")," contient ",r.createElement(n.strong,null,"trois parties encod√©es en base64")," et ressemble √† qqch du style :",r.createElement(n.br),"\n",r.createElement(n.strong,null,r.createElement(n.code,null,"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.")),r.createElement(n.br),"\n",r.createElement(n.strong,null,r.createElement(n.code,null,"eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.")),r.createElement(n.br),"\n",r.createElement(n.strong,null,r.createElement(n.code,null,"SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"))),"\n",r.createElement(n.p,null,"Voici les 3 parties d'un JWT et leurs caract√©ristiques :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"l'",r.createElement(n.strong,null,"ent√™te")," (ou header) : un objet JSON identifiant le type de token (JWT) et l'algorithme utilis√© pour g√©n√©rer la signature du token (HS256), un algorithme de hachage."),"\n",r.createElement(n.li,null,"le ",r.createElement(n.strong,null,"payload")," : un objet JSON permettant de sp√©cifier le ",r.createElement(n.strong,null,"claim")," ; ce sont des param√®tres optionnels pr√©cisant les affirmations associ√©es au token, comme la date d'expiration du token, son cr√©ateur, le fait que l'utilisateur est admin... g√©n√©ralement, on y met pas trop d'info, principalement l'identifiant de l'utilisateur ; si l'API a besoin de plus d'info concernant l'utilisateur, elle ira g√©n√©ralement les chercher dans ses donn√©es."),"\n",r.createElement(n.li,null,"la ",r.createElement(n.strong,null,"signature")," : c'est une signature num√©rique construite √† partir d'un secret priv√© ou d'une cl√© publique/priv√©e, via l'algorithme pr√©cis√© dans la signature."),"\n"),"\n",r.createElement(n.p,null,"üí≠ C'est bien joli tout √ßa, mais comment √ßa permet de s√©curiser la session d'un utilisateur ?",r.createElement(n.br),"\n","G√©n√©ralement, l'API, et elle uniquement, connait le secret priv√©. Elle va donc cr√©er le token d'un utilisateur authentifi√©, en y ajoutant le claim (ou les affirmations) qu'elle juge utile.",r.createElement(n.br),"\n","Lorsque le client re√ßoit son token, il va le sauvegarder dans son browser.",r.createElement(n.br),"\n","Pour chaque requ√™te n√©cessitant une autorisation de l'API, le client enverra son token au sein du header de la requ√™te.",r.createElement(n.br),"\n","L'API utilisera le secret priv√©, connu d'elle-m√™me uniquement, pour v√©rifier la signature du token. Si tout est OK, c'est que l'utilisateur est bien authentifi√© et que son claim est OK."),"\n",r.createElement(n.p,null,"Imaginez maintenant qu'un hackeur tente de modifier le token, pour modifier le claim, notamment en changeant l'id de l'utilisateur pr√©sent dans le payload du token.\nEt bien la signature ne correspondra plus √† ce token l√† ! L'API le d√©tectera.",r.createElement(n.br),"\n","Pour que le hackeur r√©ussisse son acte malicieux, il est oblig√© de conna√Ætre le secret priv√© qui ne doit √™tre connu que de l'API. Ca ne serait que sur base du secret priv√© que les hackeurs pourraient g√©n√©rer un nouveau token qui serait valid√© par l'API. Pas √©vident √† faire..."),"\n",r.createElement(n.p,null,"Ainsi, on peut imaginer un token comme une enveloppe s√©curis√© par un cadenas tr√®s sp√©cial : ce cadenas, qui est mis sur l'enveloppe contenant, par exemple, l'identifiant d'un utilisateur, est ferm√© par la cl√© üîë que seulement conna√Æt l'API.\nSi quelqu'un touche √† l'enveloppe, le cadenas ne s'ouvrira plus avec la üîë de l'API : la tentative de hackage sera d√©tect√©e !\nSi quelqu'un tente de cr√©er une enveloppe s√©curis√©, il le fera avec une autre cl√©, ",r.createElement(n.strong,null,"üóù")," par exemple, car il ne conna√Æt pas üîë. L'API, tentant d'ouvrir l'enveloppe s√©curis√©e √† l'aide de üîë, elle ne s'ouvrira pas : la tentative de hacking sera d√©tect√©e !"),"\n",r.createElement(n.p,null,"üí≠ Est-ce que cette m√©taphore d'enveloppe s√©curis√©e vous parle ?\nAttention que dans la r√©alit√©, le payload classique d'un token sera d√©codable, que l'on connaisse ou pas le secret priv√©. Il est encod√© en base64 ! Ne mettez donc jamais de secrets dans le payload d'un token !",r.createElement(n.br),"\n","Si vraiment un jour vous deviez mettre un secret dans un payload, bien que d√©conseill√©, vous pourriez toujours le faire en cryptant le payload."),"\n",r.createElement(n.p,null,"üëç Le m√©canisme de token assure que l'on aie une tr√®s haute probabilit√© de d√©tecter les alt√©rations faites sur les tokens, les tentatives de forgeage, gr√¢ce √† la signature de ceux-ci."),"\n",r.createElement(n.p,null,"‚ö° Par contre, si nous laissions tra√Æner des informations dans le payload d'un token, comme un password d'un utilisateur et son username, alors l√†, c'est juste un beau cadeau que l'on offre aux hackeurs ; ils n'auraient plus qu'√† trouver un moyen de voler √† distance nos donn√©es de session ; ils pourraient ensuite utiliser le formulaire de connexion et prendre possession de notre identit√© üò®."),"\n",r.createElement(n.p,null,"Il existe un site fort int√©ressant qui montre la structure d'un token et qui permet de les d√©coder : ",r.createElement(n.a,{href:"https://jwt.io/"},"jwt.io")," ",r.createElement(n.a,{href:"/web2/references/#r63"},"[R.63]"),". Nous l'utiliserons plus tard pour d√©coder les tokens g√©n√©r√©s par nos RESTful API."),"\n",r.createElement(n.h1,null,r.createElement(c,null," Authentification et cr√©ation de token ")),"\n",r.createElement("div",{className:"card card__simple-youtube-container"},r.createElement(o,{src:"https://youtu.be/lVTM0x0vOrg"})),"\n",r.createElement(n.h2,null,"Introduction"),"\n",r.createElement(n.p,null,"Via un exemple concret associ√© √† notre RESTful API qui g√®re les ressources de type \"pizzas\", nous allons mettre en place un processus d'authentification et d'autorisation JWT."),"\n",r.createElement(n.p,null,"La librairie que nous allons utiliser dans le cadre de ce cours pour g√©rer des tokens JWT est ",r.createElement(n.a,{href:"https://www.npmjs.com/package/jsonwebtoken"},"jsonwebtoken"),"."),"\n",r.createElement(n.p,null,"Dans ce nouveau tutoriel, nous allons continuer le d√©veloppement de l'API ",r.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/fat-model"},"api-fat-model")," pour ajouter des op√©rations permettant l'authentification et l'autorisation d'utilisateurs."),"\n",r.createElement(n.p,null,"Au sein de votre repo ",r.createElement(n.strong,null,r.createElement(n.code,null,"web2")),", veuillez cr√©er le projet nomm√© ",r.createElement(n.strong,null,r.createElement(n.code,null,"/web2/tutorials/pizzeria/api/auths"))," sur base d'un copi√© coll√© de ",r.createElement(n.strong,null,r.createElement(n.code,null,"/web2/tutorials/pizzeria/api/fat-model"))," (ou ",r.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/fat-model"},"api-fat-model"),")."),"\n",r.createElement(n.p,null,"Pour la suite du tutoriel, nous consid√©rons que tous les chemins absolus d√©marrent du r√©pertoire\n",r.createElement(n.strong,null,r.createElement(n.code,null,"/web2/tutorials/pizzeria/api/auths")),"."),"\n",r.createElement(n.p,null,"Veuillez installer la librairie ",r.createElement(n.strong,null,r.createElement(n.code,null,"jsonwebtoken"))," au sein de votre nouveau projet ",r.createElement(n.strong,null,r.createElement(n.code,null,"auths"))," :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-bash"},"npm i jsonwebtoken\n")),"\n",r.createElement(n.h2,null,"M√©canisme d'authentification et cr√©ation du token"),"\n",r.createElement(n.p,null,"Toujours √† l'aide d'Express, nous allons cr√©er un router ",r.createElement(n.strong,null,r.createElement(n.code,null,"auths"))," qui mettra √† disposition les op√©rations de ",r.createElement(n.strong,null,r.createElement(n.code,null,"login"))," et de ",r.createElement(n.strong,null,r.createElement(n.code,null,"register")),".\nVoici le contrat associ√© √† ces nouvelles op√©rations :"),"\n",r.createElement(n.h5,null,'Op√©rations sur les ressources de type "auths"'),"\n",r.createElement(n.table,null,r.createElement(n.thead,null,r.createElement(n.tr,null,r.createElement(n.th,null,"URI"),r.createElement(n.th,null,"M√©thode HTTP"),r.createElement(n.th,null,"Op√©ration"))),r.createElement(n.tbody,null,r.createElement(n.tr,null,r.createElement(n.td,null,r.createElement(n.strong,null,r.createElement(n.code,null,"auths/login"))),r.createElement(n.td,null,r.createElement(n.strong,null,"POST")),r.createElement(n.td,null,'V√©rifier les credentials d\'une ressource de type "users" et renvoyer le username et un token JWT si les credentials sont OK')),r.createElement(n.tr,null,r.createElement(n.td,null,r.createElement(n.strong,null,r.createElement(n.code,null,"auths/register"))),r.createElement(n.td,null,r.createElement(n.strong,null,"POST")),r.createElement(n.td,null,'Cr√©er une ressource de type "users" et renvoyer le username et un token JWT')))),"\n",r.createElement("br"),"\n",r.createElement(n.p,null,"Le mod√®le ",r.createElement(n.strong,null,r.createElement(n.code,null,"users"))," s'occupera de cr√©er les utilisateur, de v√©rifier leurs credentials ainsi que de cr√©er des token."),"\n",r.createElement(n.p,null,"Voici le workflow attendu pour une op√©ration de ",r.createElement(n.strong,null,r.createElement(n.code,null,"login"))," ou de ",r.createElement(n.strong,null,r.createElement(n.code,null,"register"))," :"),"\n",r.createElement(m,{name:"login.png",minWidth:"879px",maxWidth:"879x"}),"\n",r.createElement("figcaption",null,"Appel √† une RESTful API pour s'authentifier et obtenir un JWT"),"\n",r.createElement(n.p,null,"Ce que l'on voit dans l'image ci-dessus :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"si le mod√®le consid√®re que l'utilisateur est authentifiable, que ses credentials sont OK, alors il va utiliser la m√©thode ",r.createElement(n.strong,null,r.createElement(n.code,null,"sign"))," de l'objet ",r.createElement(n.strong,null,r.createElement(n.code,null,"jwt"))," pour cr√©er un token."),"\n",r.createElement(n.li,null,"le token est envoy√© dans le body de la r√©ponse √† l'utilisateur."),"\n"),"\n",r.createElement(n.p,null,"Ce que l'on ne voit pas dans l'image ci-dessus :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"c'est le job du client de sauvegarder le token. Si l'application cliente est un browser, alors celui-ci pourra √™tre sauvegard√© dans le web storage du browser."),"\n",r.createElement(n.li,null,"l'application cliente peut √™tre faite avec n'importe quelle technologie. Par exemple, nous pourrons utiliser REST Client pour faire une requ√™te √† l'API..."),"\n"),"\n",r.createElement(n.p,null,"Dans notre RESTful API, nous avons d√©cid√© que lorsqu'un client s'enregistre, quand il fait appel √† l'op√©ration ",r.createElement(n.strong,null,r.createElement(n.code,null,"register"))," pour cr√©er un compte, l'API consid√®re automatiquement que cet utilisateur est authentifi√©. Tout comme la m√©thode ",r.createElement(n.strong,null,r.createElement(n.code,null,"login")),", la m√©thode ",r.createElement(n.strong,null,r.createElement(n.code,null,"register"))," cr√©era et renverra un token JWT √† l'utilisateur."),"\n",r.createElement(n.p,null,"NB : Il est possible d'envisager un workflow diff√©rent : apr√®s le ",r.createElement(n.strong,null,r.createElement(n.code,null,"register")),", l'application demanderait √† l'utilisateur un ",r.createElement(n.strong,null,r.createElement(n.code,null,"login")),", ",r.createElement(n.strong,null,r.createElement(n.code,null,"register"))," ne renvoyant jamais de token √† l'utilisateur."),"\n",r.createElement(n.h2,null,"Impl√©mentation de login & register"),"\n",r.createElement(n.p,null,"Nous allons √† pr√©sent mettre en place le code permettant d'impl√©menter le workflow que l'on vient de d√©couvrir."),"\n",r.createElement(n.p,null,"Veuillez cr√©er le mod√®le ",r.createElement(n.strong,null,r.createElement(n.code,null,"users"))," en cr√©ant le fichier ",r.createElement(n.strong,null,r.createElement(n.code,null,"/models/users.js"))," et y inclure ce code :"),"\n",r.createElement(n.pre,{numbered:!0,highlighting:"1,5-6,23-27,29-31,34,43-47,49-52,54"},r.createElement(n.code,{className:"language-js"},"const jwt = require('jsonwebtoken');\nconst path = require('node:path');\nconst { parse, serialize } = require('../utils/json');\n\nconst jwtSecret = 'ilovemypizza!';\nconst lifetimeJwt = 24 * 60 * 60 * 1000; // in ms : 24 * 60 * 60 * 1000 = 24h\n\nconst jsonDbPath = path.join(__dirname, '/../data/users.json');\n\nconst defaultUsers = [\n  {\n    id: 1,\n    username: 'admin',\n    password: 'admin',\n  },\n];\n\nfunction login(username, password) {\n  const userFound = readOneUserFromUsername(username);\n  if (!userFound) return undefined;\n  if (userFound.password !== password) return undefined;\n\n  const token = jwt.sign(\n    { username }, // session data added to the payload (payload : part 2 of a JWT)\n    jwtSecret, // secret used for the signature (signature part 3 of a JWT)\n    { expiresIn: lifetimeJwt }, // lifetime of the JWT (added to the JWT payload)\n  );\n\n  const authenticatedUser = {\n    username,\n    token,\n  };\n\n  return authenticatedUser;\n}\n\nfunction register(username, password) {\n  const userFound = readOneUserFromUsername(username);\n  if (userFound) return undefined;\n\n  createOneUser(username, password);\n\n  const token = jwt.sign(\n    { username }, // session data added to the payload (payload : part 2 of a JWT)\n    jwtSecret, // secret used for the signature (signature part 3 of a JWT)\n    { expiresIn: lifetimeJwt }, // lifetime of the JWT (added to the JWT payload)\n  );\n\n  const authenticatedUser = {\n    username,\n    token,\n  };\n\n  return authenticatedUser;\n}\n\nfunction readOneUserFromUsername(username) {\n  const users = parse(jsonDbPath, defaultUsers);\n  const indexOfUserFound = users.findIndex((user) => user.username === username);\n  if (indexOfUserFound < 0) return undefined;\n\n  return users[indexOfUserFound];\n}\n\nfunction createOneUser(username, password) {\n  const users = parse(jsonDbPath, defaultUsers);\n\n  const createdUser = {\n    id: getNextId(),\n    username,\n    password,\n  };\n\n  users.push(createdUser);\n\n  serialize(jsonDbPath, users);\n\n  return createdUser;\n}\n\nfunction getNextId() {\n  const users = parse(jsonDbPath, defaultUsers);\n  const lastItemIndex = users?.length !== 0 ? users.length - 1 : undefined;\n  if (lastItemIndex === undefined) return 1;\n  const lastId = users[lastItemIndex]?.id;\n  const nextId = lastId + 1;\n  return nextId;\n}\n\nmodule.exports = {\n  login,\n  register,\n  readOneUserFromUsername,\n};\n\n")),"\n",r.createElement(n.p,null,"Dans le code ci-dessus, ",r.createElement(n.strong,null,"jwtSecret")," est le secret priv√© connu uniquement du serveur. C'est la m√™me secret qu'il faudra utiliser pour v√©rifier un token."),"\n",r.createElement(n.p,null,r.createElement(n.strong,null,r.createElement(n.code,null,"jwt.sign()"))," permet de cr√©er le token et ses 3 parties :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"le payload du token, la 2√®me partie du token, est compl√©t√© principalement via le permier argument de ",r.createElement(n.strong,null,r.createElement(n.code,null,"sign()"))," ; ici, le token affirme que l'utilisateur poss√©dant le ",r.createElement(n.strong,null,r.createElement(n.code,null,"username"))," donn√© est authentifi√©."),"\n",r.createElement(n.li,null,"le payload du token sera aussi modifi√© sur base de la dur√©e d'expiration du token, selon l'argument ",r.createElement(n.strong,null,r.createElement(n.code,null,"expiresIn")),"."),"\n",r.createElement(n.li,null,r.createElement(n.strong,null,r.createElement(n.code,null,"jwtSecret"))," est utilis√© pour cr√©er la 3√®me partie du token, sa signature."),"\n"),"\n",r.createElement(n.p,null,"Il faut maintenant que nous cr√©ions le router ",r.createElement(n.strong,null,r.createElement(n.code,null,"auths"))," offrant les op√©rations de ",r.createElement(n.strong,null,r.createElement(n.code,null,"login"))," et de ",r.createElement(n.strong,null,r.createElement(n.code,null,"register")),", en faisant appel au mod√®le ",r.createElement(n.strong,null,r.createElement(n.code,null,"users")),".",r.createElement(n.br),"\n","Veuillez cr√©er le fichier ",r.createElement(n.strong,null,r.createElement(n.code,null,"/routes/auths.js"))," et y inclure le code suivant :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"const express = require('express');\nconst { register, login } = require('../models/users');\n\nconst router = express.Router();\n\n/* Register a user */\nrouter.post('/register', (req, res) => {\n  const username = req?.body?.username?.length !== 0 ? req.body.username : undefined;\n  const password = req?.body?.password?.length !== 0 ? req.body.password : undefined;\n\n  if (!username || !password) return res.sendStatus(400); // 400 Bad Request\n\n  const authenticatedUser = register(username, password);\n\n  if (!authenticatedUser) return res.sendStatus(409); // 409 Conflict\n\n  return res.json(authenticatedUser);\n});\n\n/* Login a user */\nrouter.post('/login', (req, res) => {\n  const username = req?.body?.username?.length !== 0 ? req.body.username : undefined;\n  const password = req?.body?.password?.length !== 0 ? req.body.password : undefined;\n\n  if (!username || !password) return res.sendStatus(400); // 400 Bad Reques\n\n  const authenticatedUser = login(username, password);\n\n  if (!authenticatedUser) return res.sendStatus(401); // 401 Unauthorized\n\n  return res.json(authenticatedUser);\n});\n\nmodule.exports = router;\n")),"\n",r.createElement(n.p,null,"Il n'y a rien de bien sp√©cial √† ce code. On fait simplement appel aux op√©rations du mod√®le ",r.createElement(n.strong,null,r.createElement(n.code,null,"users")),"."),"\n",r.createElement(n.p,null,"Attention, il faut rajouter le nouveau router au sein de ",r.createElement(n.strong,null,r.createElement(n.code,null,"app.js"))," pour que notre API puisse offrir les nouvelles op√©rations ; veuillez donc ajouter ce code dans ",r.createElement(n.strong,null,r.createElement(n.code,null,"/app.js"))," :"),"\n",r.createElement(n.pre,{highlighting:"7,18"},r.createElement(n.code,{className:"language-js"},"const express = require('express');\nconst cookieParser = require('cookie-parser');\nconst logger = require('morgan');\n\nconst usersRouter = require('./routes/users');\nconst pizzaRouter = require('./routes/pizzas');\nconst authsRouter = require('./routes/auths');\n\nconst app = express();\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\n\napp.use('/users', usersRouter);\napp.use('/pizzas', pizzaRouter);\napp.use('/auths', authsRouter);\n\nmodule.exports = app;\n")),"\n",r.createElement(n.h2,null,"Utilisation de Rest Client pour tester les nouvelles op√©rations"),"\n",r.createElement(n.p,null,"Veuillez d√©marrer votre API ",r.createElement(n.strong,null,r.createElement(n.code,null,"auths")),"."),"\n",r.createElement(n.p,null,"On va utiliser REST Client pour tester ces nouvelles op√©rations."),"\n",r.createElement(n.p,null,"Veuillez cr√©er le fichier ",r.createElement(n.strong,null,r.createElement(n.code,null,"/REST Client/auths.http"))," et y ajouter le code suivant :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-http"},'@baseUrl = http://localhost:3000\n\n### Try to login an unknow user\nPOST {{baseUrl}}/auths/login\nContent-Type: application/json\n\n{\n    "username":"unknown",\n    "password":"admin"\n}\n\n### Login the default admin\nPOST {{baseUrl}}/auths/login\nContent-Type: application/json\n\n{\n    "username":"admin",\n    "password":"admin"\n}\n\n\n### Create the manager user\nPOST {{baseUrl}}/auths/register\nContent-Type: application/json\n\n{\n    "username":"manager",\n    "password":"manager"\n}\n\n### Login the manager user\nPOST {{baseUrl}}/auths/login\nContent-Type: application/json\n\n{\n    "username":"manager",\n    "password":"manager"\n}\n')),"\n",r.createElement(n.p,null,"Veuillez ex√©cuter les diff√©rentes requ√™tes. Tout devrait fonctionner, vous devriez r√©cup√©rer le username et le token d'un utilisateur authentifi√©."),"\n",r.createElement(n.p,null,"Pour le fun, nous allons d√©coder un token :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"Veuillez copier le token de ce que renvoie votre API pour la requ√™te de login de l'utilisateur ",r.createElement(n.strong,null,r.createElement(n.code,null,"manager"))," (qqch qui doit ressembler √† une string du genre : ",r.createElement(n.strong,null,r.createElement(n.code,null,"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Im1hbmFnZXIiLCJpYXQiOjE2NjEyNDg1MjksImV4cCI6MTc0NzY0ODUyOX0.JvYzM0gtmVkqFr9R3f1Bf6ow_QuyHJY-vedJ39N7JKw")),")."),"\n",r.createElement(n.li,null,"Veuillez vous rendre sur le site ",r.createElement(n.a,{href:"https://jwt.io/"},"JWT")," et coller votre token dans le champs ",r.createElement(n.strong,null,r.createElement(n.code,null,"Encoded")),". Dans la colonne ",r.createElement(n.strong,null,r.createElement(n.code,null,"Decoded")),", vous devriez voir l'algorithme utilis√© par la m√©thode ",r.createElement(n.strong,null,r.createElement(n.code,null,"sign")),", ainsi que les donn√©es pr√©sentes dans le payload, dont ",r.createElement(n.strong,null,r.createElement(n.code,null,'"username": "manager"'))," !"),"\n"),"\n",r.createElement(n.p,null,"Vous comprenez maintenant pourquoi on n'ajoute pas des secrets dans un token üòâ."),"\n",r.createElement(n.h2,null,"Cacher ses secrets"),"\n",r.createElement(n.p,null,"Dans ce cours-ci, vous pouvez, de mani√®re optionnelle, voir comment faire en sorte que le secret,  permettant de signer & v√©rifier les token, ne soit pas pr√©sent sur le web repository de vos API (par exemple ici le mod√®le ",r.createElement(n.strong,null,r.createElement(n.code,null,"users.js"))," hardcode ce secret). En effet, pour des raisons de s√©curit√©, si votre secret est visible pour tous les d√©veloppeurs qui acc√®de √† votre repository public, c'est un probl√®me !"),"\n",r.createElement(n.p,null,"Si vous souhaitez d√©couvrir comment faire en sorte de rendre invisible des informations sensibles sur un web repository, tout en pouvant b√©n√©ficiant de ces infos dans votre environnement de d√©veloppement, vous pouvez consulter la partie 3 du cours sur la ",r.createElement(n.a,{href:"../../part3/#%F0%9F%8D%AC_protection_de_ses_secrets"},"Protection de ses secrets"),"."),"\n",r.createElement(n.h1,null,r.createElement(c,null," Autorisation et v√©rification de token ")),"\n",r.createElement(n.h2,null,"M√©canisme d'autorisation d'utilisateurs √† des op√©rations d'une API"),"\n",r.createElement(n.h3,null,"Intro"),"\n",r.createElement(n.p,null,"Dans le workflow que nous avons choisi, les utilisateurs re√ßoivent un token lors du ",r.createElement(n.strong,null,r.createElement(n.code,null,"register"))," ou du ",r.createElement(n.strong,null,r.createElement(n.code,null,"login")),". C'est le job de l'application cliente de trouver un moyen de sauvegarder ce token."),"\n",r.createElement(n.p,null,"Lorsqu'une application client souhaite cr√©er une pizza, on souhaite autoriser cette op√©ration qu'√† l'administrateur du site g√©rant la pizz√©ria.",r.createElement(n.br),"\n","Nous d√©cidons donc pour l'",r.createElement(n.strong,null,"op√©ration de cr√©ation de pizza que l'utilisateur doit")," non seulement √™tre ",r.createElement(n.strong,null,"authentifi√©"),", mais qu'en plus, il doit √™tre l'",r.createElement(n.strong,null,"admin")," du site."),"\n",r.createElement(n.h3,null,"M√©canisme d'autorisation quand le token JWT est valide"),"\n",r.createElement(n.p,null,"Pour que l'application client qui fait la requ√™te √† l'API puisse s'autoriser, elle doit ajouter un ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorization header"))," √† sa requ√™te contenant comme valeur le token re√ßu lors du ",r.createElement(n.strong,null,r.createElement(n.code,null,"login"))," ou du ",r.createElement(n.strong,null,r.createElement(n.code,null,"register"))," :"),"\n",r.createElement(m,{name:"authorizeOK.png",minWidth:"879px",maxWidth:"879x"}),"\n",r.createElement("figcaption",null,"Appel √† une op√©ration d'une RESTful API n√©cessitant une autorisation JWT : autorisation valide"),"\n",r.createElement(n.p,null,'Le router de "pizzas", avant m√™me de passer la requ√™te √† la route ',r.createElement(n.strong,null,r.createElement(n.code,null,"POST /pizzas")),", va lancer la fonction middleware d'autorisation nomm√©e ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize")),". La fonction middleware ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," va s'occuper de v√©rifier le token envoy√© par le client dans un header √† l'aide de la m√©thode ",r.createElement(n.strong,null,r.createElement(n.code,null,"verifiy"))," de l'objet ",r.createElement(n.strong,null,r.createElement(n.code,null,"jwt"))," (de la librairie ",r.createElement(n.strong,null,r.createElement(n.code,null,"jsonwebtoken")),")."),"\n",r.createElement(n.p,null,"üí≠ Si le token est valide, est-ce que √ßa signifie que l'utilisateur est bien authentifi√© ?",r.createElement(n.br),"\n",r.createElement(n.em,null,"H√© bien non, car imaginez qu'entre le moment o√π l'utilisateur se soit logu√©, il ait √©t√© supprim√© de l'application par un admin... dans ce cas-ci, on ne veut pas l'autoriser √† ajouter une pizza au menu de la pizzeria ! Il n'est p-e m√™me plus un employ√©, il souhaite p-e √©crire du contenu malicieux üò®")),"\n",r.createElement(n.p,null,"Donc si le token est valide, ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," fera appel au mod√®le de ",r.createElement(n.strong,null,r.createElement(n.code,null,"users"))," pour v√©rifier que l'utilisateur existe bien dans le support de donn√©es (fichiers JSON, base de donn√©es ou autres) et pour obtenir toutes les infos sur cet utilisateur. Si l'utilisateur existe, alors cela signifie que l'utilisateur est bien authentifi√©. La fonction middleware ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," va passer la main √† une autre fonction middleware pour v√©rifier que l'utilisateur est bien l'admin."),"\n",r.createElement(n.p,null,"üí≠ Comment est-ce que ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," peut faire appel au mod√®le pour v√©rifier que l'utilisateur existe bien ? Est-ce que cela signifie que le token doit contenir tout un tas de donn√©es sur l'utilisateur ?"),"\n",r.createElement(n.p,null,"üëç En r√®gle g√©n√©rale, on va juste mettre un identifiant de l'utilisateur dans ce qu'on appelle le ",r.createElement(n.strong,null,"payload")," du token. C'est ensuite l'API, suite au d√©codage de l'identifiant de l'utilisateur, qui fera appel aux donn√©es pour retrouver tout ce qui concerne l'utilisateur."),"\n",r.createElement(n.p,null,"La fonction middleware ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin"))," va v√©rifier que l'utilisateur est bien l'admin. Si c'est OK, elle passera la main √† la fonction middleware qui g√®re la route ",r.createElement(n.strong,null,r.createElement(n.code,null,"POST /pizzas"))," au sein du router de pizzas en faisant l'appel √† la fonction ",r.createElement(n.strong,null,r.createElement(n.code,null,"next")),".",r.createElement(n.br),"\n",r.createElement(n.em,null,"üç¨ NB : on pourrait aussi laisser la fonction ",r.createElement(n.strong,null,r.createElement(n.code,null,"createOnePizza"))," s'occuper de v√©rifier que l'utilisateur demandant la cr√©ation de la pizza soit bien l'admin. Ici, comme il s'agit de v√©rifier que le contrat de l'API soit respect√©, c'est-√†-dire que l'utilisateur soit bien authentifi√© & admin, alors on pr√©f√®re r√©aliser cette action en dehors du mod√®le. Dans nos choix architecturaux pour nos RESTful API, nous avons d√©cid√© que ce n'est pas le mod√®le qui s'occupe de pr√©senter les donn√©es aux clients, c'est le r√¥le des routers (et les fonctions middleware associ√©es).")),"\n",r.createElement(n.p,null,"Maintenant que le client a les bons privil√®ges, l'op√©ration de cr√©ation de la pizza peut donc √™tre autoris√©e. L'op√©ration de ",r.createElement(n.strong,null,r.createElement(n.code,null,"createOnePizza"))," du mod√®le renverra la nouvelle pizza au router qui s'occupera de pr√©senter la nouvelle pizza au client, au format JSON."),"\n",r.createElement(n.h3,null,"M√©canisme d'autorisation quand le token JWT est invalide"),"\n",r.createElement(n.p,null,"Voici le workflow d'autorisation si le token n'est pas valide :"),"\n",r.createElement(m,{name:"authorizeNOK.png",minWidth:"879px",maxWidth:"879x"}),"\n",r.createElement("figcaption",null,"Appel √† une op√©ration d'une RESTful API n√©cessitant une autorisation JWT : autorisation invalide"),"\n",r.createElement(n.p,null,"Dans ce cas l√†, ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," ne passe pas la main √† ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin"))," ni m√™me √† la fonction middleware qui g√®re la route ",r.createElement(n.strong,null,r.createElement(n.code,null,"POST /pizzas")),".",r.createElement(n.br),"\n","La fonction middleware ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," renvoie directement un code d'erreur ",r.createElement(n.strong,null,r.createElement(n.code,null,"401 Unauthorized"))," au client."),"\n",r.createElement(n.h3,null,"M√©canisme d'autorisation quand l'utilisateur n'est pas admin"),"\n",r.createElement(n.p,null,"Vous pourriez aussi imaginer le workflow o√π le client envoie un token valide, mais l'utilisateur associ√© n'est pas admin. Dans ce cas-ci, ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," ferait appel √† ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin")),", mais ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin"))," renverrait directement un code d'erreur ",r.createElement(n.strong,null,r.createElement(n.code,null,"403 Forbidden"))," au client.",r.createElement(n.br),"\n","En effet, l'API indiquerait ainsi qu'elle aurait v√©rifi√© que l'utilisateur est bien authentifi√©, mais que celui ne poss√®de pas les privil√®ges suffisant pour acc√©der √† l'op√©ration demand√©e."),"\n",r.createElement(n.h2,null,"Impl√©mentation du m√©canisme d'autorisation"),"\n",r.createElement(n.p,null,"üò® Wow, le workflow d'autorisation pour la cr√©ation d'une pizza est assez long.",r.createElement(n.br),"\n","Nous allons maintenant l'impl√©menter dans notre tutoriel en cours.",r.createElement(n.br),"\n","Nous vous inqui√©tez pas, ce qui importe dans le code qui va suivre, ce n'est pas de savoir √©crire tout le code, mais de bien comprendre les m√©canismes associ√©s. En effet, en r√®gle g√©n√©rale, vous allez utiliser des librairies vous permettant d'autoriser les acc√®s aux op√©rations de vos API. Vous √©crirez donc rarement les m√©canismes d'autorisation, par contre, vous devrez pouvoir les utiliser."),"\n",r.createElement(n.p,null,"Veuillez cr√©er les nouvelles fonctions middleware ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," et ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin"))," au sein d'un nouveau fichier ",r.createElement(n.strong,null,r.createElement(n.code,null,"/utils/auths.js"))," :"),"\n",r.createElement(n.pre,{numbered:!0,highlighting:"1,4,7,11-12,18"},r.createElement(n.code,{className:"language-js"},"const jwt = require('jsonwebtoken');\nconst { readOneUserFromUsername } = require('../models/users');\n\nconst jwtSecret = 'ilovemypizza!';\n\nconst authorize = (req, res, next) => {\n  const token = req.get('authorization');\n  if (!token) return res.sendStatus(401);\n\n  try {\n    const decoded = jwt.verify(token, jwtSecret);\n    const { username } = decoded;\n\n    const existingUser = readOneUserFromUsername(username);\n\n    if (!existingUser) return res.sendStatus(401);\n\n    req.user = existingUser; // request.user object is available in all other middleware functions\n    return next();\n  } catch (err) {\n    console.error('authorize: ', err);\n    return res.sendStatus(401);\n  }\n};\n\nconst isAdmin = (req, res, next) => {\n  const { username } = req.user;\n\n  if (username !== 'admin') return res.sendStatus(403);\n  return next();\n};\n\nmodule.exports = { authorize, isAdmin };\n")),"\n",r.createElement(n.p,null,"Voici quelques explications sur le code de la fonction middleware ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"Gr√¢ce √† ",r.createElement(n.strong,null,r.createElement(n.code,null,"req.get('authorization')"))," (ligne 7), on r√©cup√®re le token qui a √©t√© envoy√© par le client au sein de l'",r.createElement(n.strong,null,r.createElement(n.code,null,"authorization header"))," de la requ√™te sous forme de string."),"\n",r.createElement(n.li,null,"La m√©thode ",r.createElement(n.strong,null,r.createElement(n.code,null,"jwt.verify(token, jwtSecret)"))," (ligne 11) v√©rifie tant la signature du token que son √©ventuelle expiration. Elle utilise le secret ",r.createElement(n.strong,null,r.createElement(n.code,null,"jwtSecret"))," qui doit √™tre le m√™me que celui pris en compte lors de la cr√©ation du token."),"\n",r.createElement(n.li,null,"Elle charge toutes les donn√©es de l'utilisateur authentifi√© au sein de l'objet ",r.createElement(n.strong,null,r.createElement(n.code,null,"req"))," (ligne 18), dans ",r.createElement(n.strong,null,r.createElement(n.code,null,"user")),". Cela est une bonne pratique, cela permet, pour toute la dur√©e du traitement de cette requ√™te, de mettre √† disposition ces donn√©es √† toutes les fonctions middleware.",r.createElement(n.br),"\n","üí≠ Mais pourquoi faire cela ?\n",r.createElement(n.em,null,"Imaginez que vous faites un appel √† une base de donn√©es externes √† chaque fois que vous souhaitez obtenir les informations d'un utilisateur... Cela est tr√®s consommateur en temps... Lorsque vous allez utiliser d'autres fonctions middleware comme ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin")),", vous n'avez plus besoin de faire appel √† la base de donn√©es.")),"\n"),"\n",r.createElement(n.p,null,"La fonction middleware ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin"))," r√©cup√®re les donn√©es de l'utilisateur authentifi√© via l'objet ",r.createElement(n.strong,null,r.createElement(n.code,null,"req.user")),".",r.createElement(n.br),"\n","Si l'utilisateur n'est pas ",r.createElement(n.strong,null,r.createElement(n.code,null,"admin")),", c'est le code ",r.createElement(n.strong,null,r.createElement(n.code,null,"403 Forbidden"))," qui est renvoy√© √† l'application cliente, signifiant que l'utilisateur est bien authentifi√©, mais il n'a pas les privil√®ges pour acc√©der √† l'op√©ration demand√©e (cr√©ation de pizza).",r.createElement(n.br),"\n","Si tout est OK, ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin"))," fait appel √† ",r.createElement(n.strong,null,r.createElement(n.code,null,"next()")),", ce qui consiste √† ex√©cuter la prochaine fonction middleware qui est pr√©sente apr√®s l'appel de ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin")),"."),"\n",r.createElement(n.p,null,"O√π allons-nous utiliser ces nouvelles fonctions middleware ?"),"\n",r.createElement(n.p,null,"Nous pouvons le faire au niveau que nous souhaitons, soit au niveau :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"de l'",r.createElement(n.strong,null,"application"),", pour toutes les routes, via ",r.createElement(n.strong,null,r.createElement(n.code,null,"app.use(authorize)")),"."),"\n",r.createElement(n.li,null,"d'un ",r.createElement(n.strong,null,"router"),", pour toutes les routes associ√©es ; par exemple, on pourrait dire que toutes les routes du router de pizzas sont prot√©g√©es par une autorisation JWT. On √©crirait : ",r.createElement(n.strong,null,r.createElement(n.code,null,'app.use("/pizzas", authorize, pizzaRouter);')),".",r.createElement(n.br),"\n",'Cela signifierait que toutes les op√©rations sur des ressources de type "pizzas" ne seraient autoris√©es que si l\'utilisateur √©tait authentifi√©. Cela serait probl√©matique pour deux raisons :',"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"On veut pouvoir afficher le menu des pizzas pour tous les utilisateurs, m√™me s'ils sont anonymes."),"\n",r.createElement(n.li,null,"On ne veut pas simplement v√©rifier qu'un utilisateur est authentifi√© pour cr√©er une pizza, on veut aussi v√©rifier qu'il est admin."),"\n"),"\n"),"\n",r.createElement(n.li,null,"d'une route, pour une op√©ration de notre RESTful API. C'est ce que nous souhaitons faire ici. Veuillez mettre √† jour le code du router de \"pizzas\" au sein de ",r.createElement(n.strong,null,r.createElement(n.code,null,"/routes/pizzas.js"))," :"),"\n"),"\n",r.createElement(n.pre,{highlighting:"2,7"},r.createElement(n.code,{className:"language-js"},"// See existing code\nconst { authorize, isAdmin } = require('../utils/auths');\n\n// See existing code\n\n// Create a pizza to be added to the menu.\nrouter.post('/', authorize, isAdmin, (req, res) => {\n  const title = req?.body?.title?.length !== 0 ? req.body.title : undefined;\n  const content = req?.body?.content?.length !== 0 ? req.body.content : undefined;\n\n  if (!title || !content) return res.sendStatus(400); // error code '400 Bad request'\n\n  const createdPizza = createOnePizza(title, content);\n\n  return res.json(createdPizza);\n});\n")),"\n",r.createElement(n.p,null,"Ainsi, nous avons juste fait l'appel de deux fonctions middleware pour v√©rifier :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,r.createElement(n.strong,null,"que l'utilisateur est authentifi√©")," via ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," ; si tout est OK au niveau du token fournit par l'application cliente, ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," fait appel via ",r.createElement(n.strong,null,r.createElement(n.code,null,"next()"))," √† la prochaine fonction middleware. Dans ce cas-ci, c'est ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin")),". S'il y a un probl√®me, ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," termine le traitement de la requ√™te en envoyant un code d'erreur au client et les prochaines fonctions middleware (",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin")),", puis la fonction ",r.createElement(n.strong,null,r.createElement(n.code,null,"arrow")),") ne sont pas ex√©cut√©es."),"\n",r.createElement(n.li,null,r.createElement(n.strong,null,"que l'utilisateur est admin")," via ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin"))," ; si tout est OK, que l'utilisateur authentifi√© est l'admin, ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin"))," fait appel via ",r.createElement(n.strong,null,r.createElement(n.code,null,"next()"))," √† la prochaine fonction middleware. Dans ce cas-ci, c'est la fonction ",r.createElement(n.strong,null,r.createElement(n.code,null,"arrow"))," qui appelle l'op√©ration demand√©e pour cr√©er la pizza : ",r.createElement(n.strong,null,r.createElement(n.code,null,"createOnePizza")),". Si l'utilisateur authentifi√© n'est pas l'admin, alors ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin"))," termine le traitement en envoyant un code d'erreur au client et la fonction traitant de l'op√©ration de cr√©ation n'est pas ex√©cut√©e."),"\n"),"\n",r.createElement(n.p,null,"Comment pouvons-nous tester l'op√©ration de cr√©ation d'une pizza ? Via REST Client.\nTentons le coup √† l'aide de cette requ√™te (elle est d√©j√† pr√©sente dans ",r.createElement(n.strong,null,"/REST Client/pizzas.http"),") :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-http"},'POST {{baseUrl}}/pizzas\nContent-Type: application/json\n\n{\n    "title":"Magic Green",\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\n}\n')),"\n",r.createElement(n.p,null,"Apr√®s avoir ex√©cut√© cette requ√™te, vous devriez avoir re√ßu un status code ",r.createElement(n.strong,null,r.createElement(n.code,null,"401 Unauthorized")),".\nC'est normal, comme nous n'avons pas envoy√© de token, nous ne pouvons donc pas √™tre autoris√©.",r.createElement(n.br),"\n","Au prochain point nous allons voir comment utiliser REST Client pour sauvegarder de l'information, comme un token, suite √† une requ√™te vers une API."),"\n",r.createElement(n.h1,null,r.createElement(c,null," Client REST avec JWT ")),"\n",r.createElement(n.p,null,"Pr√©c√©demment, nous avons appris √† utiliser REST Client, l'extension de VS Code, pour faire des requ√™tes vers des API."),"\n",r.createElement(n.p,null,"Voici quelques notions suppl√©mentaire pour utiliser REST Client avec des ",r.createElement(n.strong,null,r.createElement(n.code,null,"JWT"))," :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"Il est possible de cr√©er des ",r.createElement(n.strong,null,r.createElement(n.code,null,"Request Variables"))," afin de ",r.createElement(n.strong,null,"r√©cup√©rer la r√©ponse")," associ√©e\n√† une requ√™te au sein d'une variable."),"\n",r.createElement(n.li,null,"On va donc pouvoir r√©cup√©rer le token, suite √† une requ√™te d'authentification,\nau sein d'une ",r.createElement(n.strong,null,r.createElement(n.code,null,"Request Variable")),", pour ensuite fournir ce token dans le ",r.createElement(n.strong,null,r.createElement(n.code,null,"Authorization header"))," de toutes les requ√™tes demandant une autorisation JWT."),"\n"),"\n",r.createElement(n.p,null,"Si vous souhaitez plus d'infos sur les ",r.createElement(n.strong,null,r.createElement(n.code,null,"Request Variables")),", vous pouvez consulter la ",r.createElement(n.a,{href:"https://github.com/Huachao/vscode-restclient#request-variables"},"documentation de REST Client")," ",r.createElement(n.a,{href:"/web2/references/#r55"},"[R.55]"),"."),"\n",r.createElement(n.p,null,"Voici comment mettre √† jour le script ",r.createElement(n.strong,null,r.createElement(n.code,null,"/REST Client/pizzas.http"))," pour cr√©er une pizza en passant le token de l'utilisateur ",r.createElement(n.strong,null,r.createElement(n.code,null,"admin"))," :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-http"},'### Create a pizza by using the admin account\n#### First login as the admin\n##### Define a request variable nammed admin :\n# @name admin\nPOST {{baseUrl}}/auths/login\nContent-Type: application/json\n\n{\n    "username":"admin",\n    "password":"admin"\n}\n\n#### Create a pizza with the admin token\nPOST {{baseUrl}}/pizzas\nContent-Type: application/json\nAuthorization: {{admin.response.body.token}}\n\n{\n    "title":"Magic Green",\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\n}\n')),"\n",r.createElement(n.p,null,"Pour tester l'op√©ration de cr√©ation de pizza, veuillez d'abord ex√©cuter la premi√®re requ√™te, puis la seconde donn√©e ci-dessus."),"\n",r.createElement(n.p,null,"A ce stade-ci, il serait aussi int√©ressant de tester certains cas d'erreurs associ√©s aux tokens. Veuillez compl√©ter le script ",r.createElement(n.strong,null,r.createElement(n.code,null,"/REST Client/pizzas.http"))," avec :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-http"},'### 1. Create a pizza without a token\nPOST {{baseUrl}}/pizzas\nContent-Type: application/json\n\n{\n    "title":"Magic Green",\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\n}\n\n### 2. Create a pizza without being the admin, use manager account\n#### 2.1 First login as the manager\n##### 2.1.1 Define a request variable nammed manager\n# @name manager\nPOST {{baseUrl}}/auths/login\nContent-Type: application/json\n\n{\n    "username":"manager",\n    "password":"manager"\n}\n\n##### 2.1.2 Define a file variable to simplify the access to the token of manager\n@managerToken = {{manager.response.body.token}}\n\n#### 2.2 Try to create a pizza with the manager token\nPOST {{baseUrl}}/pizzas\nContent-Type: application/json\nAuthorization: {{managerToken}}\n\n{\n    "title":"Magic Green",\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\n}\n')),"\n",r.createElement(n.p,null,"Nous voyons qu'√† l'aide de REST Client, nous pouvons utiliser une ",r.createElement(n.strong,null,r.createElement(n.code,null,"File Variable"))," pour allouer une partie de la r√©ponse faite √† une requ√™te.",r.createElement(n.br),"\n","Dans ce cas, on peut faire appel √† l'API en passant le token via la ",r.createElement(n.strong,null,r.createElement(n.code,null,"File Variable"))," nomm√© ",r.createElement(n.strong,null,r.createElement(n.code,null,"managerToken"))," (code associ√© : ",r.createElement(n.strong,null,r.createElement(n.code,null,"Authorization: {{managerToken}}")),") au lieu d'utiliser une partie seulement de la ",r.createElement(n.strong,null,r.createElement(n.code,null,"Request Variable"))," nomm√©e ",r.createElement(n.strong,null,r.createElement(n.code,null,"manager"))," (code possible : ",r.createElement(n.strong,null,r.createElement(n.code,null,"Authorization: {{manager.response.body.token}}")),").",r.createElement(n.br),"\n","Cela permet de cr√©er des requ√™tes plus concises."),"\n",r.createElement(n.h1,null,r.createElement(c,null," Protection des op√©rations d'√©criture d'une API ")),"\n",r.createElement(n.p,null,"Veuillez mettre √† jour votre RESTful API g√©rant les pizzas afin que toutes les op√©rations d'√©criture soient prot√©g√©es par une autorisation JWT, n'autorisant que l'utilisateur ",r.createElement(n.strong,null,"admin"),"."),"\n",r.createElement(n.p,null,"Voici le code √† mettre √† jour dans ",r.createElement(n.strong,null,r.createElement(n.code,null,"/routes/pizzas")),' pour correctement autoriser les op√©rations de suppression et de modification sur des ressources de type "pizzas":'),"\n",r.createElement(n.pre,{highlighting:"2,11"},r.createElement(n.code,{className:"language-js"},"// Delete a pizza from the menu based on its id\nrouter.delete('/:id', authorize, isAdmin, (req, res) => {\n  const deletedPizza = deleteOnePizza(req.params.id);\n\n  if (!deletedPizza) return res.sendStatus(404);\n\n  return res.json(deletedPizza);\n});\n\n// Update a pizza based on its id and new values for its parameters\nrouter.patch('/:id', authorize, isAdmin, (req, res) => {\n  const title = req?.body?.title;\n  const content = req?.body?.content;\n\n  if ((!title && !content) || title?.length === 0 || content?.length === 0) {\n    return res.sendStatus(400);\n  }\n\n  const updatedPizza = updateOnePizza(req.params.id, { title, content });\n\n  if (!updatedPizza) return res.sendStatus(404);\n\n  return res.json(updatedPizza);\n});\n")),"\n",r.createElement(n.p,null,"Pour vous assurer que les op√©rations de suppression et de modification sont bien fonctionnelles, veuillez mettre √† jour les requ√™tes associ√©es afin d'utiliser un token. Veuillez mettre √† jour ",r.createElement(n.strong,null,r.createElement(n.code,null,"/REST Client/pizzas.http"))," en ajoutant ces deux lignes :"),"\n",r.createElement(n.pre,{numbered:!0,highlighting:"25,30"},r.createElement(n.code,{className:"language-http"},'### Create a pizza by using the admin account\n#### First login as the admin\n##### Define a request variable nammed admin\n# @name admin\nPOST {{baseUrl}}/auths/login\nContent-Type: application/json\n\n{\n    "username":"admin",\n    "password":"admin"\n}\n\n#### Create a pizza with the admin token\nPOST {{baseUrl}}/pizzas\nContent-Type: application/json\nAuthorization: {{admin.response.body.token}}\n\n{\n    "title":"Magic Green",\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\n}\n\n### Delete pizza identified by 2 with the admin token\nDELETE {{baseUrl}}/pizzas/2\nAuthorization: {{admin.response.body.token}}\n\n### Update the pizza identified by 6 with the admin token\nPATCH {{baseUrl}}/pizzas/6\nContent-Type: application/json\nAuthorization: {{admin.response.body.token}}\n\n{\n    "title":"Magic Green 2"\n}\n')),"\n",r.createElement(n.p,null,"Veuillez ex√©cutez les requ√™tes de type ",r.createElement(n.strong,null,"DELETE")," et de type ",r.createElement(n.strong,null,"PATCH")," afin de vous assurer que l'API est en ordre."),"\n",r.createElement(n.p,null,"Si tout fonctionne bien, faites un ",r.createElement(n.strong,null,r.createElement(n.code,null,"commit"))," de votre repo (",r.createElement(n.strong,null,r.createElement(n.code,null,"web2")),") avec comme message :\n",r.createElement(n.strong,null,r.createElement(n.code,null,"api auths tutorial")),"."),"\n",r.createElement(n.p,null,"En cas de souci, vous pouvez utiliser le code du tutoriel ",r.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/auths"},"api-auths"),"."),"\n",r.createElement(n.h1,null,r.createElement(c,null," Project 4.1 : Authentification & autorisation d'op√©rations ")),"\n",r.createElement(n.p,null,"Vous devez mettre √† jour l'API d√©velopp√©e pour ",r.createElement(n.a,{href:"../../part2/comms-security/#project_2_18_autorisation_de_nouvelles_origines"},"Project 2.18")," afin de s√©curiser certaines op√©rations par JWT."),"\n",r.createElement(n.p,null,"Le code doit se trouver dans votre repository local et votre web repository (normalement appel√© ",r.createElement(n.strong,null,r.createElement(n.code,null,"web2")),") dans le r√©pertoire nomm√© ",r.createElement(n.strong,null,r.createElement(n.code,null,"/project/4.1/api"))," sur base d'un clone du boilerplate ",r.createElement(n.a,{href:"https://github.com/e-vinci/jwt-api-boilerplate"},"jwt-api-boilerplate")," et de l'ajout de votre code cr√©√© pour ",r.createElement(n.a,{href:"../../part2/comms-security/#project_2_18_autorisation_de_nouvelles_origines"},"Project 2.18"),"."),"\n",r.createElement(n.p,null,"Il est possible que dans le cadre de votre projet, vous n'ayez pas besoin d'authentifier des utilisateurs afin de prot√©ger l'acc√®s √† certaines op√©rations sur des ressources."),"\n",r.createElement(n.p,null,"Si c'est le cas, il est quand m√™me important d'apprendre les concepts associ√©s √† l'authentification et √† l'autorisation JWT. Veuillez donc d√©velopper un prototype d'application qui n√©cessiterait une authentification, ainsi qu'au moins une op√©ration qui devrait √™tre autoris√©e."),"\n",r.createElement(n.p,null,"Si vous n'avez pas d'id√©e, vous pourriez simplement d√©velopper un prototype permettant d'entrer des commentaires sur votre site web et de les visualiser."),"\n",r.createElement(n.p,null,"Dans un premier temps, veuillez identifier toutes les op√©rations mises √† disposition par votre API, ainsi que si celles-ci sont prot√©g√©es par JWT, au sein du fichier ",r.createElement(n.strong,null,r.createElement(n.code,null,"README.md"))," (fichier Markdown) de votre projet. Voici un exemple de comment nous vous recommandons de documenter votre API, sous forme de tableau :"),"\n",r.createElement(n.table,null,r.createElement(n.thead,null,r.createElement(n.tr,null,r.createElement(n.th,null,"URI"),r.createElement(n.th,null,"M√©thode HTTP"),r.createElement(n.th,null,"Auths?"),r.createElement(n.th,null,"Op√©ration"))),r.createElement(n.tbody,null,r.createElement(n.tr,null,r.createElement(n.td,null,r.createElement(n.strong,null,r.createElement(n.code,null,"films"))),r.createElement(n.td,null,"GET"),r.createElement(n.td,null,"Non"),r.createElement(n.td,null,"READ ALL : Lire toutes les ressources de la collection")),r.createElement(n.tr,null,r.createElement(n.td,null,r.createElement(n.strong,null,r.createElement(n.code,null,"comments"))),r.createElement(n.td,null,"GET"),r.createElement(n.td,null,"JWT"),r.createElement(n.td,null,"READ ALL FILTERED : Lire toutes les ressources de la collection")),r.createElement(n.tr,null,r.createElement(n.td,null,r.createElement(n.strong,null,r.createElement(n.code,null,"comments"))),r.createElement(n.td,null,"POST"),r.createElement(n.td,null,"JWT"),r.createElement(n.td,null,"CREATE ONE : Cr√©er une ressource bas√©e sur les donn√©es de la requ√™te")),r.createElement(n.tr,null,r.createElement(n.td,null,"..."),r.createElement(n.td,null,"..."),r.createElement(n.td,null,"..."),r.createElement(n.td,null,"...")))),"\n",r.createElement("br"),"\n",r.createElement(d,null,r.createElement(n.p,null,"Veuillez travailler avec les membres de votre groupe et vous partager le travail."),r.createElement(n.p,null,"Un peu avant la fin de la s√©ance, veuillez discuter :"),r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"du lien entre les UCs que vous avez identifi√©s en d√©but de projet et les op√©rations de votre API."),"\n",r.createElement(n.li,null,"des difficult√©s rencontr√©es, de ce que vous avez appris..."),"\n")),"\n",r.createElement(n.p,null,"Vous devez tester toutes les nouvelles op√©rations que vous prot√©gez par une autorisation JWT √† l'aide de Rest Client."),"\n",r.createElement(n.p,null,"Quand un prototype d'api est finalis√© et test√©, veuillez faire un ",r.createElement(n.strong,null,r.createElement(n.code,null,"commit"))," de votre code avec comme message : ",r.createElement(n.strong,null,r.createElement(n.code,null,"4.1 : api JWT auths")),"."),"\n",r.createElement(n.h4,null,"ü§ù Tips"),"\n",r.createElement(n.p,null,"Comment cr√©er un tableau dans un fichier Markdown (pour ",r.createElement(n.strong,null,r.createElement(n.code,null,"README.md")),") ?",r.createElement(n.br),"\n","Voici deux options :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"Soit vous utiliser des ",r.createElement(n.strong,null,r.createElement(n.code,null,"|"))," pour d√©limiter les cellules et des ",r.createElement(n.strong,null,r.createElement(n.code,null,"|---|"))," pour s√©parer\nles headers du corps du tableau.\nVoici le Markdown de l'exemple donn√© ci-dessus :"),"\n"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-text"},"| URI | M√©thode HTTP | Auths? | Op√©ration |\n|---|---|---|---|\n| **`films`** | GET | Non | READ ALL : Lire toutes les ressources de la collection |\n| **`comments`** | GET | JWT | READ ALL FILTERED : Lire toutes les ressources de la collection |\n| **`comments`** | POST | JWT | CREATE ONE : Cr√©er une ressource bas√©e sur les donn√©es de la requ√™te |\n| ... | ... | ... | ... |\n")),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"Soit c'est simplement un tableau HTML (",r.createElement(n.code,null,"<table>"),")."),"\n"),"\n",r.createElement(n.p,null,"Comment ajouter l'authentification et l'autorisation JWT au sein de votre projet ?"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"Soit vous partez du boilerplate du cours offrant l'authentification et l'autorisation JWT : ",r.createElement(n.a,{href:"https://github.com/e-vinci/jwt-api-boilerplate"},"jwt-api-boilerplate"),".\nPuis vous pouvez y int√©grer le code d√©velopp√©e pour ",r.createElement(n.a,{href:"../../part2/comms-security/#project_2_18_autorisation_de_nouvelles_origines"},"Project 2.18"),"."),"\n",r.createElement(n.li,null,"Soit vous refaites les √©tapes du tutoriel dans cette page en partant du code d√©velopp√© pour ",r.createElement(n.a,{href:"../../part2/comms-security/#project_2_18_autorisation_de_nouvelles_origines"},"Project 2.18"),"."),"\n"))}var s=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?r.createElement(n,e,r.createElement(a,e)):a(e)};function u(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}var i=t(4160),o=t(5583),c=t(5679),m=t(307),d=t(7410),p=t(9523),E=t(8075),g=t(9063),f=t(1631),h=t(5772),v=t(2770),b=t(7008),q=t(9771),z=t(1218),k=(t(5258),t(9394)),w=t(4579),y=t(7743),j=t(9256),T=t(6488),I=t(5175),P=t(6387),A=t(6044);const S={Link:i.Link,Image:c.Z,Section:m.Z,Content:d.Z,Background:p.Z,SectionHeader:E.Z,SectionFooter:g.Z,PageHeader:f.Z,CodeBlock:v.Z,LinkFile:b.Z,ScrollableImage:q.Z,PublicProjectsView:z.Z,AuthenticatedBlock:k.Z,UnAuthenticatedBlock:w.Z,NestedMdxBlock:y.Z,YoutubeImage:j.Z,InternalPageMenu:T.Z,InternalPageMenuItem:I.Z,InternalPageTitle:P.Z,PathViewer:A.k,PathViewerItem:A.F};function x(e){var n,t,a,s,u;let{data:{mdx:i,allImages:c},children:m}=e;return S.PageHeader=(0,h.u)(f.Z,null==i?void 0:i.frontmatter),r.createElement(o.Z,Object.assign({},null!=i&&i.frontmatter?{frontmatter:i.frontmatter}:{},null!=i&&null!==(n=i.frontmatter)&&void 0!==n&&n.navbarExtraStyles?{navbarExtraStyles:i.frontmatter.navbarExtraStyles}:{},null!=i&&null!==(t=i.frontmatter)&&void 0!==t&&t.headerImage?{headerImage:i.frontmatter.headerImage}:{},null!=i&&null!==(a=i.frontmatter)&&void 0!==a&&a.featuredImage?{featuredImage:i.frontmatter.featuredImage}:{},null!=i&&null!==(s=i.frontmatter)&&void 0!==s&&s.title?{pageTitle:i.frontmatter.title}:{},c&&c.length>0?{allImages:c}:{}),r.createElement(l.Zo,{components:S},r.createElement("div",{className:null!=i&&null!==(u=i.frontmatter)&&void 0!==u&&u.autoMargin?"page page--auto-margin ":"page"},m)))}function C(e){return r.createElement(x,e,r.createElement(s,e))}}}]);
//# sourceMappingURL=component---src-templates-mdx-pages-js-content-file-path-src-mdx-pages-part-4-auths-api-fr-mdx-51814d2f3aee3abe64a1.js.map